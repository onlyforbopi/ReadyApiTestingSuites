<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="b922532c-0bae-4358-b087-89b60d1e76e5" activeEnvironment="Default" name="prod_testing" resourceRoot="" soapui-version="5.7.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" id="9d18a290-1a3d-44b7-8984-22828474ab2d" wsaVersion="NONE" name="ZGET_CUSTOMER_CODES" type="wsdl" bindingName="{urn:sap-com:document:sap:soap:functions:mc-style}ZGET_CUSTOMER_CODES" soapVersion="1_1" anonymous="optional" definition="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_6081521257027C40E10080270A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_6081521257027C40E10080270A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100"><con:part><con:url>http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_6081521257027C40E10080270A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:n1="urn:sap-com:document:sap:rfc:functions">
  <wsdl:documentation>
    <sidl:sidl xmlns:sidl="http://www.sap.com/2007/03/sidl"/>
  </wsdl:documentation>
  <wsp:UsingPolicy wsdl:required="true"/>
  <wsp:Policy wsu:Id="BN_ZGET_CUSTOMER_CODES">
    <wsaw:UsingAddressing xmlns:wsaw="http://schemas.xmlsoap.org/ws/2004/08/addressing"/>
    <saptrnbnd:OptimizedXMLTransfer uri="http://xml.sap.com/2006/11/esi/esp/binxml" wsp:Optional="true" xmlns:saptrnbnd="http://www.sap.com/webas/710/soap/features/transportbinding/"/>
    <sapattahnd:Enabled xmlns:sapattahnd="http://www.sap.com/710/features/attachment/">false</sapattahnd:Enabled>
    <wsp:ExactlyOne xmlns:sapsp="http://www.sap.com/webas/630/soap/features/security/policy" xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/07/utility">
      <wsp:All>
        <sp:TransportBinding>
          <wsp:Policy>
            <sp:TransportToken>
              <wsp:Policy>
                <sp:HttpsToken>
                  <wsp:Policy>
                    <sp:HttpBasicAuthentication/>
                  </wsp:Policy>
                </sp:HttpsToken>
              </wsp:Policy>
            </sp:TransportToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:TripleDesRsa15/>
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Strict/>
              </wsp:Policy>
            </sp:Layout>
          </wsp:Policy>
        </sp:TransportBinding>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsp:Policy wsu:Id="IF_ZGET_CUSTOMER_CODES">
    <sapsession:Session xmlns:sapsession="http://www.sap.com/webas/630/soap/features/session/">
      <sapsession:enableSession>false</sapsession:enableSession>
    </sapsession:Session>
    <sapcentraladmin:CentralAdministration wsp:Optional="true" xmlns:sapcentraladmin="http://www.sap.com/webas/700/soap/features/CentralAdministration/">
      <sapcentraladmin:BusinessApplicationID>5A2E8A9B2DED2140E10080000A0B126E</sapcentraladmin:BusinessApplicationID>
    </sapcentraladmin:CentralAdministration>
  </wsp:Policy>
  <wsp:Policy wsu:Id="OP_ZwappGetCustomerCodes2">
    <sapcomhnd:enableCommit xmlns:sapcomhnd="http://www.sap.com/NW05/soap/features/commit/">false</sapcomhnd:enableCommit>
    <sapblock:enableBlocking xmlns:sapblock="http://www.sap.com/NW05/soap/features/blocking/">true</sapblock:enableBlocking>
    <saptrhnw05:required xmlns:saptrhnw05="http://www.sap.com/NW05/soap/features/transaction/">no</saptrhnw05:required>
    <saprmnw05:enableWSRM xmlns:saprmnw05="http://www.sap.com/NW05/soap/features/wsrm/">false</saprmnw05:enableWSRM>
  </wsp:Policy>
  <wsdl:types>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:rfc:functions">
      <xsd:simpleType name="char10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char12">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="12"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char2">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="2"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char20">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char4">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char40">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="40"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char60">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="60"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char70">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="70"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char80">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="80"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="date10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
          <xsd:pattern value="\d\d\d\d-\d\d-\d\d"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:n0="urn:sap-com:document:sap:rfc:functions">
      <xsd:import namespace="urn:sap-com:document:sap:rfc:functions"/>
      <xsd:simpleType name="char1">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char100">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="100"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char2">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="2"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char20">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="date10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
          <xsd:pattern value="\d\d\d\d-\d\d-\d\d"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ZwappStrCustomerCodes">
        <xsd:sequence>
          <xsd:element name="BusinessPartnerId" type="n0:char10"/>
          <xsd:element name="CustomerName" type="n0:char80"/>
          <xsd:element name="Contracts" type="tns:ZwappTabContractData"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappStrContractData">
        <xsd:sequence>
          <xsd:element name="ContractType" type="n0:char2"/>
          <xsd:element name="ContractAccount" type="n0:char12"/>
          <xsd:element name="InvoicingParty" type="tns:char10"/>
          <xsd:element name="BrancheCode" type="tns:char10"/>
          <xsd:element name="Branche" type="tns:char1"/>
          <xsd:element name="BrancheDescription" type="tns:char100"/>
          <xsd:element name="ContractAccountCategory" type="tns:char2"/>
          <xsd:element name="Pod" type="tns:char20"/>
          <xsd:element name="Status" type="n0:char2"/>
          <xsd:element name="MoveinDate" type="tns:date10"/>
          <xsd:element name="MoveoutDate" type="n0:date10"/>
          <xsd:element name="Addresses" type="tns:ZwappTabAddressData"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappStrAddressData">
        <xsd:sequence>
          <xsd:element name="AddressType" type="n0:char10"/>
          <xsd:element name="AddressStreet" type="n0:char60"/>
          <xsd:element name="AddressNumber" type="n0:char10"/>
          <xsd:element name="AddressCity" type="n0:char40"/>
          <xsd:element name="AddressPc" type="n0:char10"/>
          <xsd:element name="AddressPoBox" type="tns:char10"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappTabCustomerCodes">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwappStrCustomerCodes" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappTabContractData">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwappStrContractData" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappTabAddressData">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwappStrAddressData" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ZwappGetCustomerCodes2">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Partner" type="n0:char10"/>
            <xsd:element name="Source" type="n0:char20" minOccurs="0"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ZwappGetCustomerCodes2Response">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="CustomerCodes" type="tns:ZwappTabCustomerCodes"/>
            <xsd:element name="ResultCode" type="n0:char4"/>
            <xsd:element name="ResultMessage" type="n0:char70"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ZwappGetCustomerCodes2">
    <wsdl:part name="parameters" element="tns:ZwappGetCustomerCodes2"/>
  </wsdl:message>
  <wsdl:message name="ZwappGetCustomerCodes2Response">
    <wsdl:part name="parameter" element="tns:ZwappGetCustomerCodes2Response"/>
  </wsdl:message>
  <wsdl:portType name="ZGET_CUSTOMER_CODES">
    <wsp:Policy>
      <wsp:PolicyReference URI="#IF_ZGET_CUSTOMER_CODES"/>
    </wsp:Policy>
    <wsdl:operation name="ZwappGetCustomerCodes2">
      <wsp:Policy>
        <wsp:PolicyReference URI="#OP_ZwappGetCustomerCodes2"/>
      </wsp:Policy>
      <wsdl:input message="tns:ZwappGetCustomerCodes2"/>
      <wsdl:output message="tns:ZwappGetCustomerCodes2Response"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ZGET_CUSTOMER_CODES" type="tns:ZGET_CUSTOMER_CODES">
    <wsp:Policy>
      <wsp:PolicyReference URI="#BN_ZGET_CUSTOMER_CODES"/>
    </wsp:Policy>
    <wsa:EndpointReference xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing">
      <wsa:ReferenceParameters/>
    </wsa:EndpointReference>
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="ZwappGetCustomerCodes2">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ZGET_CUSTOMER_CODES">
    <wsdl:port name="ZGET_CUSTOMER_CODES" binding="tns:ZGET_CUSTOMER_CODES">
      <soap:address location="https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zget_customer_codes/100/zget_customer_codes/zget_customer_codes"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zget_customer_codes/100/zget_customer_codes/zget_customer_codes</con:endpoint></con:endpoints><con:operation id="a55aa7ff-f3d9-42be-b6ed-e2988f3942d6" isOneWay="false" action="" name="ZwappGetCustomerCodes2" bindingOperationName="ZwappGetCustomerCodes2" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="85a392f1-4acd-4218-8381-51b84157a299" name="Request 1 - Normal"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zget_customer_codes/100/zget_customer_codes/zget_customer_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZwappGetCustomerCodes2>\r
         <Partner>1101302319</Partner>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZwappGetCustomerCodes2>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZGET_CUSTOMER_CODES/ZwappGetCustomerCodes2Request"/><con:wsrmConfig version="1.2"/></con:call><con:call id="38450eea-721b-454e-a125-76bbc1f7a976" name="Request 2 - Pollaplos"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:44300/sap/bc/srt/rfc/sap/zwapp_get_country_tel_codes/100/zwapp_get_country_tel_codes/zwapp_get_country_tel_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZwappGetCustomerCodes2>\r
         <Partner>1000001208</Partner>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZwappGetCustomerCodes2>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZGET_CUSTOMER_CODES/ZwappGetCustomerCodes2Request"/><con:wsrmConfig version="1.2"/></con:call><con:call id="9b3e8964-31db-4db9-bbe9-d4da8fe149ff" name="Request 3 - Non Valid BP"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zget_customer_codes/100/zget_customer_codes/zget_customer_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZwappGetCustomerCodes2>\r
         <Partner>1002143616</Partner>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZwappGetCustomerCodes2>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZGET_CUSTOMER_CODES/ZwappGetCustomerCodes2Request"/><con:wsrmConfig version="1.2"/></con:call><con:call id="92255d5d-519c-48a1-8420-2d76cf1f6e70" name="Request 4 - Boundary Testing - Single Case"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zget_customer_codes/100/zget_customer_codes/zget_customer_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZwappGetCustomerCodes2>\r
         <Partner>110130*319</Partner>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZwappGetCustomerCodes2>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZGET_CUSTOMER_CODES/ZwappGetCustomerCodes2Request"/><con:wsrmConfig version="1.2"/></con:call><con:call id="eb89c095-021a-4dfc-a442-b31a27cbf596" name="Request 5 - Boundary Testing - Pollaplos"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zget_customer_codes/100/zget_customer_codes/zget_customer_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZwappGetCustomerCodes2>\r
         <Partner>100000%114</Partner>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZwappGetCustomerCodes2>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZGET_CUSTOMER_CODES/ZwappGetCustomerCodes2Request"/><con:wsrmConfig version="1.2"/></con:call><con:call id="5b388a38-373b-41f8-8103-bb2481be99e4" name="Request 2.5 - Pollaplos me polla"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zget_customer_codes/100/zget_customer_codes/zget_customer_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZwappGetCustomerCodes2>\r
         <Partner>1000001114</Partner>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZwappGetCustomerCodes2>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZGET_CUSTOMER_CODES/ZwappGetCustomerCodes2Request"/><con:wsrmConfig version="1.2"/></con:call><con:call id="b8448eb8-7dd7-4656-9017-e19198d38e69" name="Copy of Request 2.5 - Pollaplos me polla"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zget_customer_codes/100/zget_customer_codes/zget_customer_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZwappGetCustomerCodes2>\r
         <Partner>1000001103</Partner>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZwappGetCustomerCodes2>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZGET_CUSTOMER_CODES/ZwappGetCustomerCodes2Request"/><con:wsrmConfig version="1.2"/></con:call><con:call id="99c22f47-5a3a-4f2b-b365-adf8a55d9a01" name="Dispatcher - Normal"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zget_customer_codes/100/zget_customer_codes/zget_customer_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZwappGetCustomerCodes2>\r
         <Partner>1101302319</Partner>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZwappGetCustomerCodes2>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZGET_CUSTOMER_CODES/ZwappGetCustomerCodes2Request"/><con:wsrmConfig version="1.2"/></con:call><con:call id="13829f1b-3767-476b-a248-da200de6d1e8" name="Request 1 - AU"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zget_customer_codes/100/zget_customer_codes/zget_customer_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZwappGetCustomerCodes2>\r
         <Partner>1101302319</Partner>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZwappGetCustomerCodes2>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZGET_CUSTOMER_CODES/ZwappGetCustomerCodes2Request"/><con:wsrmConfig version="1.2"/></con:call><con:call id="2a59aa16-f99b-43d8-bd98-e58cc9334053" name="Dispatcher 2 - Pollaplos"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zget_customer_codes/100/zget_customer_codes/zget_customer_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZwappGetCustomerCodes2>\r
         <Partner>1000001208</Partner>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZwappGetCustomerCodes2>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZGET_CUSTOMER_CODES/ZwappGetCustomerCodes2Request"/><con:wsrmConfig version="1.2"/></con:call><con:call id="f01e38c8-015a-434f-88bf-5e92a9360679" name="Dispatcher 3 - Pollaplos me polla"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zget_customer_codes/100/zget_customer_codes/zget_customer_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZwappGetCustomerCodes2>\r
         <Partner>1000001114</Partner>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZwappGetCustomerCodes2>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZGET_CUSTOMER_CODES/ZwappGetCustomerCodes2Request"/><con:wsrmConfig version="1.2"/></con:call><con:call id="686f4d4e-d9d5-4f5b-95f9-c34d0e045736" name="Dispatcher 4 - Pollaplos (Good)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zget_customer_codes/100/zget_customer_codes/zget_customer_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZwappGetCustomerCodes2>\r
         <Partner>1000001312</Partner>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZwappGetCustomerCodes2>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZGET_CUSTOMER_CODES/ZwappGetCustomerCodes2Request"/><con:wsrmConfig version="1.2"/></con:call><con:call id="374fdab0-dff2-469f-9863-8ba4abd29d29" name="Dispatcher 5 - Pollaplos Child (Good)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zget_customer_codes/100/zget_customer_codes/zget_customer_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZwappGetCustomerCodes2>\r
         <Partner>1000005153</Partner>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZwappGetCustomerCodes2>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZGET_CUSTOMER_CODES/ZwappGetCustomerCodes2Request"/><con:wsrmConfig version="1.2"/></con:call><con:call id="5e3f16a4-1d81-4baf-9c61-8fde7c12e0e8" name="Copy of Dispatcher - Normal"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zget_customer_codes/100/zget_customer_codes/zget_customer_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZwappGetCustomerCodes2>\r
         <Partner>1000005153</Partner>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZwappGetCustomerCodes2>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZGET_CUSTOMER_CODES/ZwappGetCustomerCodes2Request"/><con:wsrmConfig version="1.2"/></con:call><con:call id="1a11e609-5665-4524-99e1-7cc74a91d1d7" name="Copy of Copy of Dispatcher - Normal"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zget_customer_codes/100/zget_customer_codes/zget_customer_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZwappGetCustomerCodes2>\r
         <Partner>1000005153</Partner>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZwappGetCustomerCodes2>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZGET_CUSTOMER_CODES/ZwappGetCustomerCodes2Request"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="e941b112-db44-4336-877f-dec42bf2484d" wsaVersion="NONE" name="ZWAPP_GET_CUSTOMER_DETAILS" type="wsdl" bindingName="{urn:sap-com:document:sap:soap:functions:mc-style}ZWAPP_GET_CUSTOMER_DETAILS" soapVersion="1_1" anonymous="optional" definition="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60826BA77DCB2640E10080600A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60826BA77DCB2640E10080600A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100"><con:part><con:url>http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60826BA77DCB2640E10080600A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:n1="urn:sap-com:document:sap:rfc:functions">
  <wsdl:documentation>
    <sidl:sidl xmlns:sidl="http://www.sap.com/2007/03/sidl"/>
  </wsdl:documentation>
  <wsp:UsingPolicy wsdl:required="true"/>
  <wsp:Policy wsu:Id="BN_ZWAPP_GET_CUSTOMER_DETAILS">
    <saptrnbnd:OptimizedXMLTransfer uri="http://xml.sap.com/2006/11/esi/esp/binxml" wsp:Optional="true" xmlns:saptrnbnd="http://www.sap.com/webas/710/soap/features/transportbinding/"/>
    <wsaw:UsingAddressing xmlns:wsaw="http://schemas.xmlsoap.org/ws/2004/08/addressing"/>
    <sapattahnd:Enabled xmlns:sapattahnd="http://www.sap.com/710/features/attachment/">false</sapattahnd:Enabled>
    <wsp:ExactlyOne xmlns:sapsp="http://www.sap.com/webas/630/soap/features/security/policy" xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/07/utility">
      <wsp:All>
        <sp:TransportBinding>
          <wsp:Policy>
            <sp:TransportToken>
              <wsp:Policy>
                <sp:HttpsToken>
                  <wsp:Policy>
                    <sp:HttpBasicAuthentication/>
                  </wsp:Policy>
                </sp:HttpsToken>
              </wsp:Policy>
            </sp:TransportToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:TripleDesRsa15/>
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Strict/>
              </wsp:Policy>
            </sp:Layout>
          </wsp:Policy>
        </sp:TransportBinding>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsp:Policy wsu:Id="IF_ZWAPP_GET_CUSTOMER_DETAILS">
    <sapsession:Session xmlns:sapsession="http://www.sap.com/webas/630/soap/features/session/">
      <sapsession:enableSession>false</sapsession:enableSession>
    </sapsession:Session>
    <sapcentraladmin:CentralAdministration wsp:Optional="true" xmlns:sapcentraladmin="http://www.sap.com/webas/700/soap/features/CentralAdministration/">
      <sapcentraladmin:BusinessApplicationID>5A2E8A9B2DED2140E10080000A0B126E</sapcentraladmin:BusinessApplicationID>
    </sapcentraladmin:CentralAdministration>
  </wsp:Policy>
  <wsp:Policy wsu:Id="OP_ZWappGetCustomerDetails">
    <sapcomhnd:enableCommit xmlns:sapcomhnd="http://www.sap.com/NW05/soap/features/commit/">false</sapcomhnd:enableCommit>
    <sapblock:enableBlocking xmlns:sapblock="http://www.sap.com/NW05/soap/features/blocking/">true</sapblock:enableBlocking>
    <saptrhnw05:required xmlns:saptrhnw05="http://www.sap.com/NW05/soap/features/transaction/">no</saptrhnw05:required>
    <saprmnw05:enableWSRM xmlns:saprmnw05="http://www.sap.com/NW05/soap/features/wsrm/">false</saprmnw05:enableWSRM>
  </wsp:Policy>
  <wsdl:types>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:rfc:functions">
      <xsd:simpleType name="char1">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char100">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="100"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char12">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="12"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char16">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="16"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char20">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char200">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="200"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char241">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="241"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char25">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="25"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char3">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="3"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char30">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="30"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char4">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char40">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="40"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char50">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="50"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char6">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="6"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char60">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="60"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char80">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="80"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="date10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
          <xsd:pattern value="\d\d\d\d-\d\d-\d\d"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:n0="urn:sap-com:document:sap:rfc:functions">
      <xsd:import namespace="urn:sap-com:document:sap:rfc:functions"/>
      <xsd:simpleType name="char1">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char132">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="132"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char3">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="3"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char5">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="5"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char50">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="50"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="numeric1">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
          <xsd:pattern value="\d*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ZwappCustomerDetailsDeepS">
        <xsd:sequence>
          <xsd:element name="BusinessPartnerId" type="n0:char10"/>
          <xsd:element name="CategoryId" type="n0:char1"/>
          <xsd:element name="CategoryDesc" type="n0:char30"/>
          <xsd:element name="RoleId" type="n0:char6"/>
          <xsd:element name="RoleDesc" type="n0:char50"/>
          <xsd:element name="TitleId" type="n0:char4"/>
          <xsd:element name="TitleDesc" type="n0:char30"/>
          <xsd:element name="Name" type="n0:char40"/>
          <xsd:element name="Surname" type="n0:char40"/>
          <xsd:element name="FthName" type="n0:char40"/>
          <xsd:element name="CompanyName" type="n0:char100"/>
          <xsd:element name="BirthDate" type="n0:date10"/>
          <xsd:element name="AuthRepresentative" type="n0:char80"/>
          <xsd:element name="MunicipId" type="n0:char25"/>
          <xsd:element name="CollectiveCa" type="n0:char12"/>
          <xsd:element name="MyaccountMobileNumber" type="n0:char16"/>
          <xsd:element name="MyaccountEmail" type="tns:char132"/>
          <xsd:element name="BpCommunication" type="tns:ZwappCustomerCommInfoSt"/>
          <xsd:element name="BpIdDocuments" type="tns:ZwappCustomerIdDocumentSt"/>
          <xsd:element name="BpTaxInfo" type="tns:ZwappCustomerTaxInfoSt"/>
          <xsd:element name="BpAddresses" type="tns:ZwappCustomerAddressSt"/>
          <xsd:element name="BpPaymentCards" type="tns:ZwappCustomerPaymentCardSt"/>
          <xsd:element name="ExceptionReasonDesc" type="tns:char50"/>
          <xsd:element name="ExceptionReason" type="tns:numeric1"/>
          <xsd:element name="GdprApproval" type="n0:char1"/>
          <xsd:element name="GdprNotApproval" type="n0:char1"/>
          <xsd:element name="GdprSms" type="n0:char1"/>
          <xsd:element name="GdprEmail" type="n0:char1"/>
          <xsd:element name="GdprPhone" type="n0:char1"/>
          <xsd:element name="GdprPost" type="n0:char1"/>
          <xsd:element name="GdprAll" type="n0:char1"/>
          <xsd:element name="GdprGasApproval" type="n0:char1"/>
          <xsd:element name="GdprGasNotApproval" type="n0:char1"/>
          <xsd:element name="GdprGasSms" type="n0:char1"/>
          <xsd:element name="GdprGasEmail" type="n0:char1"/>
          <xsd:element name="GdprGasPhone" type="n0:char1"/>
          <xsd:element name="GdprGasPost" type="n0:char1"/>
          <xsd:element name="GdprGasAll" type="n0:char1"/>
          <xsd:element name="GdprResearchApproval" type="n0:char1"/>
          <xsd:element name="GdprResearchNotApproval" type="n0:char1"/>
          <xsd:element name="GdprCanceled" type="tns:char1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappCustomerCommInfoS">
        <xsd:sequence>
          <xsd:element name="PhoneCountryId" type="tns:char3"/>
          <xsd:element name="PhoneCountryTelCode" type="tns:char5"/>
          <xsd:element name="PhoneNumber" type="n0:char30"/>
          <xsd:element name="MobCountryId" type="tns:char3"/>
          <xsd:element name="MobCountryTelCode" type="tns:char5"/>
          <xsd:element name="MobileNumber" type="n0:char30"/>
          <xsd:element name="Email" type="n0:char241"/>
          <xsd:element name="DefaultComm" type="n0:char1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappCustomerIdDocumentS">
        <xsd:sequence>
          <xsd:element name="DocTypeId" type="n0:char6"/>
          <xsd:element name="DocTypeDesc" type="n0:char40"/>
          <xsd:element name="IdNumber" type="n0:char60"/>
          <xsd:element name="Institute" type="n0:char40"/>
          <xsd:element name="EntryDate" type="n0:date10"/>
          <xsd:element name="ValidDateFrom" type="n0:date10"/>
          <xsd:element name="ValidDateTo" type="n0:date10"/>
          <xsd:element name="Country" type="n0:char3"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappCustomerTaxInfoS">
        <xsd:sequence>
          <xsd:element name="TaxTypeId" type="n0:char4"/>
          <xsd:element name="TaxTypeDesc" type="n0:char40"/>
          <xsd:element name="DoyNumber" type="n0:char20"/>
          <xsd:element name="AfmNumber" type="n0:char20"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappCustomerAddressS">
        <xsd:sequence>
          <xsd:element name="AddrType" type="n0:char30"/>
          <xsd:element name="Street" type="n0:char60"/>
          <xsd:element name="HouseNumber" type="n0:char10"/>
          <xsd:element name="PostalCode" type="n0:char10"/>
          <xsd:element name="City" type="n0:char40"/>
          <xsd:element name="Region" type="n0:char20"/>
          <xsd:element name="RegionId" type="tns:char3"/>
          <xsd:element name="PoBox" type="tns:char10"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappCustomerPaymentCardS">
        <xsd:sequence>
          <xsd:element name="CardId" type="n0:char6"/>
          <xsd:element name="CardType" type="n0:char4"/>
          <xsd:element name="CardTypeDesc" type="n0:char30"/>
          <xsd:element name="CardNumber" type="n0:char25"/>
          <xsd:element name="DefaultCard" type="n0:char1"/>
          <xsd:element name="CardDescription" type="n0:char40"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappCustomerDetailsDeepSt">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwappCustomerDetailsDeepS" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappCustomerCommInfoSt">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwappCustomerCommInfoS" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappCustomerIdDocumentSt">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwappCustomerIdDocumentS" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappCustomerTaxInfoSt">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwappCustomerTaxInfoS" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappCustomerAddressSt">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwappCustomerAddressS" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappCustomerPaymentCardSt">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwappCustomerPaymentCardS" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ZWappGetCustomerDetails">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="BusinessPartnerId" type="n0:char10"/>
            <xsd:element name="Source" type="n0:char20" minOccurs="0"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ZWappGetCustomerDetailsResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="CustomersDetails" type="tns:ZwappCustomerDetailsDeepSt"/>
            <xsd:element name="ResultCode" type="n0:char4"/>
            <xsd:element name="ResultMessage" type="n0:char200"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ZWappGetCustomerDetails">
    <wsdl:part name="parameters" element="tns:ZWappGetCustomerDetails"/>
  </wsdl:message>
  <wsdl:message name="ZWappGetCustomerDetailsResponse">
    <wsdl:part name="parameter" element="tns:ZWappGetCustomerDetailsResponse"/>
  </wsdl:message>
  <wsdl:portType name="ZWAPP_GET_CUSTOMER_DETAILS">
    <wsp:Policy>
      <wsp:PolicyReference URI="#IF_ZWAPP_GET_CUSTOMER_DETAILS"/>
    </wsp:Policy>
    <wsdl:operation name="ZWappGetCustomerDetails">
      <wsp:Policy>
        <wsp:PolicyReference URI="#OP_ZWappGetCustomerDetails"/>
      </wsp:Policy>
      <wsdl:input message="tns:ZWappGetCustomerDetails"/>
      <wsdl:output message="tns:ZWappGetCustomerDetailsResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ZWAPP_GET_CUSTOMER_DETAILS" type="tns:ZWAPP_GET_CUSTOMER_DETAILS">
    <wsp:Policy>
      <wsp:PolicyReference URI="#BN_ZWAPP_GET_CUSTOMER_DETAILS"/>
    </wsp:Policy>
    <wsa:EndpointReference xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing">
      <wsa:ReferenceParameters/>
    </wsa:EndpointReference>
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="ZWappGetCustomerDetails">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ZWAPP_GET_CUSTOMER_DETAILS">
    <wsdl:port name="ZWAPP_GET_CUSTOMER_DETAILS" binding="tns:ZWAPP_GET_CUSTOMER_DETAILS">
      <soap:address location="https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_customer_details/100/zwapp_get_customer_details/zwapp_get_customer_details"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_customer_details/100/zwapp_get_customer_details/zwapp_get_customer_details</con:endpoint></con:endpoints><con:operation id="b14e9991-08f0-48b4-9723-72d552827dd0" isOneWay="false" action="" name="ZWappGetCustomerDetails" bindingOperationName="ZWappGetCustomerDetails" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="78156cbf-aebb-48ef-b66f-06ee9b14a015" name="Request 1 - Normal"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_customer_details/100/zwapp_get_customer_details/zwapp_get_customer_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetCustomerDetails>\r
         <BusinessPartnerId>1101302319</BusinessPartnerId>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetCustomerDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_DETAILS/ZWappGetCustomerDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="d31ac35c-b48c-4da5-b9d8-ca3fb3f0e589" name="Request 2 - Pollaplos"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_customer_details/100/zwapp_get_customer_details/zwapp_get_customer_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetCustomerDetails>\r
         <BusinessPartnerId>1000001208</BusinessPartnerId>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetCustomerDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_DETAILS/ZWappGetCustomerDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="30a7b76b-e2b3-4942-9c30-3ca0aae08d5f" name="Request 3 - Pollaplos(Pelataki)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_customer_details/100/zwapp_get_customer_details/zwapp_get_customer_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetCustomerDetails>\r
         <BusinessPartnerId>1000004792</BusinessPartnerId>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetCustomerDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_DETAILS/ZWappGetCustomerDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="6d16a4f3-de09-4d8d-8835-90e32cb6fdd7" name="Request 4 - Boundary Testing - Fysiko Proswpo"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_customer_details/100/zwapp_get_customer_details/zwapp_get_customer_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetCustomerDetails>\r
         <BusinessPartnerId>110130*319</BusinessPartnerId>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetCustomerDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_DETAILS/ZWappGetCustomerDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="cea15c23-3047-4dbf-b691-07c9924eb2b0" name="Request 5 - Boundary Testing Pollaplos"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_customer_details/100/zwapp_get_customer_details/zwapp_get_customer_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetCustomerDetails>\r
         <BusinessPartnerId>1000*01114</BusinessPartnerId>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetCustomerDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_DETAILS/ZWappGetCustomerDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="88a8507e-cd86-46e1-9cf4-791194b988a0" name="Dispatcher - Normal"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_customer_details/100/zwapp_get_customer_details/zwapp_get_customer_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetCustomerDetails>\r
         <BusinessPartnerId>1101302319</BusinessPartnerId>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetCustomerDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_DETAILS/ZWappGetCustomerDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="86e1a8fc-0748-483e-bb00-e9fdb5a8677c" name="Request 1 - AU"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_customer_details/100/zwapp_get_customer_details/zwapp_get_customer_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetCustomerDetails>\r
         <BusinessPartnerId>1000001208</BusinessPartnerId>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetCustomerDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_DETAILS/ZWappGetCustomerDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="e6629c59-bcee-4811-bf65-9a3b577b519c" name="Dispatcher 2 - Pollaplos"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_customer_details/100/zwapp_get_customer_details/zwapp_get_customer_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetCustomerDetails>\r
         <BusinessPartnerId>1000001470</BusinessPartnerId>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetCustomerDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_DETAILS/ZWappGetCustomerDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="cce2cbd7-5a31-4c0c-8f52-116e383d891d" name="Dispatcher 3 - Pelataki Pollaplou"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_customer_details/100/zwapp_get_customer_details/zwapp_get_customer_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetCustomerDetails>\r
         <BusinessPartnerId>1000005153</BusinessPartnerId>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetCustomerDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_DETAILS/ZWappGetCustomerDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="8be2ee98-e903-4340-a2d6-278b82de2488" name="Dispatcher 4 - Pollaplos (Good)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_customer_details/100/zwapp_get_customer_details/zwapp_get_customer_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetCustomerDetails>\r
         <BusinessPartnerId>1000001312</BusinessPartnerId>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetCustomerDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_DETAILS/ZWappGetCustomerDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="2d1b77b3-ee98-47f4-a42f-b4b69a508e4f" name="Dispatcher 5 - Pollaplos Child (Good)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_customer_details/100/zwapp_get_customer_details/zwapp_get_customer_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetCustomerDetails>\r
         <BusinessPartnerId>1000005153</BusinessPartnerId>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetCustomerDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_DETAILS/ZWappGetCustomerDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="95972213-5854-475e-9a57-5a1b0f187eeb" wsaVersion="NONE" name="ZWAPP_BP_CONTRACT_DETAILS" type="wsdl" bindingName="{urn:sap-com:document:sap:soap:functions:mc-style}ZWAPP_BP_CONTRACT_DETAILS" soapVersion="1_1" anonymous="optional" definition="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60824ACA8AB384C0E10080010A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60824ACA8AB384C0E10080010A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100"><con:part><con:url>http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60824ACA8AB384C0E10080010A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:n1="urn:sap-com:document:sap:rfc:functions">
  <wsdl:documentation>
    <sidl:sidl xmlns:sidl="http://www.sap.com/2007/03/sidl"/>
  </wsdl:documentation>
  <wsp:UsingPolicy wsdl:required="true"/>
  <wsp:Policy wsu:Id="BN_ZWAPP_BP_CONTRACT_DETAILS">
    <saptrnbnd:OptimizedXMLTransfer uri="http://xml.sap.com/2006/11/esi/esp/binxml" wsp:Optional="true" xmlns:saptrnbnd="http://www.sap.com/webas/710/soap/features/transportbinding/"/>
    <wsaw:UsingAddressing xmlns:wsaw="http://schemas.xmlsoap.org/ws/2004/08/addressing"/>
    <sapattahnd:Enabled xmlns:sapattahnd="http://www.sap.com/710/features/attachment/">false</sapattahnd:Enabled>
    <wsp:ExactlyOne xmlns:sapsp="http://www.sap.com/webas/630/soap/features/security/policy" xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/07/utility">
      <wsp:All>
        <sp:TransportBinding>
          <wsp:Policy>
            <sp:TransportToken>
              <wsp:Policy>
                <sp:HttpsToken>
                  <wsp:Policy>
                    <sp:HttpBasicAuthentication/>
                  </wsp:Policy>
                </sp:HttpsToken>
              </wsp:Policy>
            </sp:TransportToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:TripleDesRsa15/>
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Strict/>
              </wsp:Policy>
            </sp:Layout>
          </wsp:Policy>
        </sp:TransportBinding>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsp:Policy wsu:Id="IF_ZWAPP_BP_CONTRACT_DETAILS">
    <sapsession:Session xmlns:sapsession="http://www.sap.com/webas/630/soap/features/session/">
      <sapsession:enableSession>false</sapsession:enableSession>
    </sapsession:Session>
    <sapcentraladmin:CentralAdministration wsp:Optional="true" xmlns:sapcentraladmin="http://www.sap.com/webas/700/soap/features/CentralAdministration/">
      <sapcentraladmin:BusinessApplicationID>5A2E8A9B2DED2140E10080000A0B126E</sapcentraladmin:BusinessApplicationID>
    </sapcentraladmin:CentralAdministration>
  </wsp:Policy>
  <wsp:Policy wsu:Id="OP_ZWappBpContractDetails">
    <sapcomhnd:enableCommit xmlns:sapcomhnd="http://www.sap.com/NW05/soap/features/commit/">false</sapcomhnd:enableCommit>
    <sapblock:enableBlocking xmlns:sapblock="http://www.sap.com/NW05/soap/features/blocking/">true</sapblock:enableBlocking>
    <saptrhnw05:required xmlns:saptrhnw05="http://www.sap.com/NW05/soap/features/transaction/">no</saptrhnw05:required>
    <saprmnw05:enableWSRM xmlns:saprmnw05="http://www.sap.com/NW05/soap/features/wsrm/">false</saprmnw05:enableWSRM>
  </wsp:Policy>
  <wsdl:types>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:rfc:functions">
      <xsd:simpleType name="char1">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char100">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="100"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char12">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="12"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char14">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="14"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char2">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="2"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char20">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char30">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="30"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char4">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char40">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="40"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char50">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="50"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char60">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="60"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char70">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="70"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char8">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="8"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char80">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="80"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="date10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
          <xsd:pattern value="\d\d\d\d-\d\d-\d\d"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="decimal16.7">
        <xsd:restriction base="xsd:decimal">
          <xsd:totalDigits value="16"/>
          <xsd:fractionDigits value="7"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="numeric2">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="2"/>
          <xsd:pattern value="\d*"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:n0="urn:sap-com:document:sap:rfc:functions">
      <xsd:import namespace="urn:sap-com:document:sap:rfc:functions"/>
      <xsd:simpleType name="char1">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char2">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="2"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char20">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char25">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="25"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char30">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="30"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char4">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char40">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="40"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char5">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="5"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char6">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="6"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char60">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="60"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char8">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="8"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char81">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="81"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="date10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
          <xsd:pattern value="\d\d\d\d-\d\d-\d\d"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="numeric10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
          <xsd:pattern value="\d*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="numeric4">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
          <xsd:pattern value="\d*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="numeric7">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="7"/>
          <xsd:pattern value="\d*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ZwappBpContractDetails">
        <xsd:sequence>
          <xsd:element name="BusinessPartnerId" type="n0:char10"/>
          <xsd:element name="MasterId" type="tns:numeric10"/>
          <xsd:element name="Afm" type="tns:char20"/>
          <xsd:element name="Idnumber" type="tns:char60"/>
          <xsd:element name="CustomerName" type="n0:char80"/>
          <xsd:element name="Titleid" type="tns:char4"/>
          <xsd:element name="Titledesc" type="tns:char30"/>
          <xsd:element name="Name" type="tns:char40"/>
          <xsd:element name="Surname" type="tns:char40"/>
          <xsd:element name="Fthname" type="tns:char40"/>
          <xsd:element name="Companyname" type="tns:char81"/>
          <xsd:element name="Addresses" type="tns:ZwappTabAddressData"/>
          <xsd:element name="Prepaid" type="n0:char1"/>
          <xsd:element name="RfCode" type="n0:numeric2"/>
          <xsd:element name="RfCode25" type="tns:char25"/>
          <xsd:element name="Mru" type="tns:char8"/>
          <xsd:element name="ContractNumber" type="n0:char10"/>
          <xsd:element name="ContracType" type="n0:char2"/>
          <xsd:element name="MoveInDate" type="tns:date10"/>
          <xsd:element name="InstallationType" type="tns:char4"/>
          <xsd:element name="VoltageLevel" type="tns:char4"/>
          <xsd:element name="ContractAccountCategory" type="tns:char2"/>
          <xsd:element name="AccountDeterminationId" type="tns:char2"/>
          <xsd:element name="IncomingPaymentMethod" type="tns:char1"/>
          <xsd:element name="TradingPartner" type="tns:char6"/>
          <xsd:element name="DunningProcedure" type="tns:char2"/>
          <xsd:element name="AlertSmsSelfMetering" type="tns:char1"/>
          <xsd:element name="AlertEmailSelfMetering" type="tns:char1"/>
          <xsd:element name="Status" type="n0:char2"/>
          <xsd:element name="Moveoutdate" type="n0:date10"/>
          <xsd:element name="Pod" type="n0:char20"/>
          <xsd:element name="Tm" type="tns:numeric7"/>
          <xsd:element name="ConstructionYear" type="tns:numeric4"/>
          <xsd:element name="KotCategory" type="n0:char1"/>
          <xsd:element name="KotOperand" type="n0:decimal16.7"/>
          <xsd:element name="KotDescription" type="n0:char14"/>
          <xsd:element name="EyaCategory" type="n0:char1"/>
          <xsd:element name="EyaOperand" type="n0:decimal16.7"/>
          <xsd:element name="EyaDescription" type="n0:char14"/>
          <xsd:element name="TyaCategory" type="n0:char1"/>
          <xsd:element name="TyaOperand" type="n0:decimal16.7"/>
          <xsd:element name="PkyCategory" type="tns:char10"/>
          <xsd:element name="BrancheCode" type="n0:char10"/>
          <xsd:element name="Branche" type="n0:char1"/>
          <xsd:element name="BrancheDescription" type="n0:char100"/>
          <xsd:element name="CollectiveContractAccount" type="n0:char12"/>
          <xsd:element name="LastResort" type="n0:char1"/>
          <xsd:element name="NetMetering" type="n0:char1"/>
          <xsd:element name="Photovoltaic" type="n0:char1"/>
          <xsd:element name="RegisterTypeDay" type="tns:char1"/>
          <xsd:element name="RegisterTypeNight" type="tns:char1"/>
          <xsd:element name="TyposMetriti" type="tns:char5"/>
          <xsd:element name="TarifTyp" type="n0:char10"/>
          <xsd:element name="TarifDescription" type="n0:char40"/>
          <xsd:element name="Segmentation" type="n0:char2"/>
          <xsd:element name="SegmentationName" type="n0:char60"/>
          <xsd:element name="ActiveProduct" type="tns:ZwappActiveProduct"/>
          <xsd:element name="AvailableProducts" type="tns:ZwappAvailableProductT"/>
          <xsd:element name="Addons" type="tns:ZwappAddonT"/>
          <xsd:element name="MonthlyBill" type="n0:char1"/>
          <xsd:element name="EbillOnly" type="n0:char1"/>
          <xsd:element name="EmailNotification" type="n0:char1"/>
          <xsd:element name="SmsNotification" type="n0:char1"/>
          <xsd:element name="PushNotification" type="n0:char1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappStrAddressData">
        <xsd:sequence>
          <xsd:element name="AddressType" type="n0:char10"/>
          <xsd:element name="AddressStreet" type="n0:char60"/>
          <xsd:element name="AddressNumber" type="n0:char10"/>
          <xsd:element name="AddressCity" type="n0:char40"/>
          <xsd:element name="AddressPc" type="n0:char10"/>
          <xsd:element name="AddressPoBox" type="tns:char10"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappActiveProduct">
        <xsd:sequence>
          <xsd:element name="ProductId" type="n0:char2"/>
          <xsd:element name="ProductName" type="n0:char50"/>
          <xsd:element name="ExpirationDate" type="n0:date10"/>
          <xsd:element name="Operands" type="tns:ZwappOperandT"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappOperand">
        <xsd:sequence>
          <xsd:element name="OperandCode" type="n0:char10"/>
          <xsd:element name="OperandType" type="n0:char8"/>
          <xsd:element name="OperandValue" type="n0:char20"/>
          <xsd:element name="TimesliceStart" type="n0:date10"/>
          <xsd:element name="TimesliceEnd" type="n0:date10"/>
          <xsd:element name="OperandDescription" type="n0:char30"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappAvailableProduct">
        <xsd:sequence>
          <xsd:element name="ProductId" type="n0:char2"/>
          <xsd:element name="ProductName" type="n0:char50"/>
          <xsd:element name="TarifTyp" type="n0:char10"/>
          <xsd:element name="TarifDescription" type="n0:char40"/>
          <xsd:element name="Operands" type="tns:ZwappOperandT"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappAddon">
        <xsd:sequence>
          <xsd:element name="Id" type="tns:char10"/>
          <xsd:element name="Name" type="n0:char50"/>
          <xsd:element name="StartDate" type="n0:date10"/>
          <xsd:element name="EndDate" type="n0:date10"/>
          <xsd:element name="Operands" type="tns:ZwappOperandT"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappBpContractDetailsT">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwappBpContractDetails" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappTabAddressData">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwappStrAddressData" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappOperandT">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwappOperand" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappAvailableProductT">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwappAvailableProduct" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappAddonT">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwappAddon" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ZWappBpContractDetails">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="ContractAccount" type="n0:char12"/>
            <xsd:element name="Source" type="n0:char20" minOccurs="0"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ZWappBpContractDetailsResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="ContractsDetails" type="tns:ZwappBpContractDetailsT"/>
            <xsd:element name="ResultCode" type="n0:char4"/>
            <xsd:element name="ResultMessage" type="n0:char70"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ZWappBpContractDetails">
    <wsdl:part name="parameters" element="tns:ZWappBpContractDetails"/>
  </wsdl:message>
  <wsdl:message name="ZWappBpContractDetailsResponse">
    <wsdl:part name="parameter" element="tns:ZWappBpContractDetailsResponse"/>
  </wsdl:message>
  <wsdl:portType name="ZWAPP_BP_CONTRACT_DETAILS">
    <wsp:Policy>
      <wsp:PolicyReference URI="#IF_ZWAPP_BP_CONTRACT_DETAILS"/>
    </wsp:Policy>
    <wsdl:operation name="ZWappBpContractDetails">
      <wsp:Policy>
        <wsp:PolicyReference URI="#OP_ZWappBpContractDetails"/>
      </wsp:Policy>
      <wsdl:input message="tns:ZWappBpContractDetails"/>
      <wsdl:output message="tns:ZWappBpContractDetailsResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ZWAPP_BP_CONTRACT_DETAILS" type="tns:ZWAPP_BP_CONTRACT_DETAILS">
    <wsp:Policy>
      <wsp:PolicyReference URI="#BN_ZWAPP_BP_CONTRACT_DETAILS"/>
    </wsp:Policy>
    <wsa:EndpointReference xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing">
      <wsa:ReferenceParameters/>
    </wsa:EndpointReference>
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="ZWappBpContractDetails">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ZWAPP_BP_CONTRACT_DETAILS">
    <wsdl:port name="ZWAPP_BP_CONTRACT_DETAILS" binding="tns:ZWAPP_BP_CONTRACT_DETAILS">
      <soap:address location="https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint></con:endpoints><con:operation id="07b60c35-b666-4ad1-adf8-328d38dfb311" isOneWay="false" action="" name="ZWappBpContractDetails" bindingOperationName="ZWappBpContractDetails" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="e374cb6c-e0cd-492c-8f7f-93d1ebdba7e6" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>300001411236</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="6b779996-f5c6-4aa3-9992-1d1f72688bcc" name="Request 2 - Pelataki Pollaplou"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>300000001968</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="ee8d0e59-44d9-4f81-bd5b-a5ab9c428b9f" name="Request 3 - CA No Valid Contract"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>300002096042</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="ee636e40-4578-4424-9e48-d22c739674f0" name="Request 4 - CA Pollaplou"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>1000001470</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="81bd5622-4687-4ddd-a8c8-12f9b6f50186" name="Request 5 - CA Normal (Status 14)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>300002164681</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="8f201d05-9157-4b7f-8df1-1be55d4fcac9" name="Request 6 - Boundary Testing - CA Normal(Status 14)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>3000021%4681</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="f1834e82-ab3a-4ce0-a10d-49a01a54d883" name="Request 7 - Boundary Testing Pollaplou"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>100000*043</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="01b85060-234a-4ec0-91b3-be5cacb1c12c" name="Request 1 - AU"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>300001411236</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="04106888-050f-4810-922c-4d1f7ead9ef1" name="Dispatcher 2 - Pelataki Pollaplou"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>300000001968</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="9761f354-76b3-4441-8150-1dead75fd8de" name="Dispatcher 1 - CA Normal (Status14)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>300002164681</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="a77d66ff-f295-4072-9c8a-0c7a02aa63b1" name="Dispatcher 3 - CA Pollaplou"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>1000001470</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="7dd6bd0e-9c29-49f4-ad59-1fa33c641dd2" name="Dispatcher 4 - Pollaplos (Good)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>1000001470</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="9a29d7d6-7a29-46ba-8050-8706727d237f" name="Dispatcher 5 - Pollaplos Child (Good)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>300013206964</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="511040ff-56a7-4d94-b8fc-68b511ceba44" name="Copy of Dispatcher 6 - Pollaplos (Good)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>1000005153</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="8c33327e-698f-419d-a479-43363378a4b6" name="Copy of Dispatcher 4 - Pollaplos (Good)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>1000001107</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="99527f17-c4c0-4c87-815c-29c7e3c5877b" name="Copy of Copy of Dispatcher 6 - Pollaplos (Good)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>1000001470 </ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="2361cdb9-2834-4f1f-a280-e44baaaf0ba4" name="Copy of Copy of Copy of Dispatcher 6 - Pollaplos (Good)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>1000001230</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="d80d7060-a5eb-4835-9c59-e3ada782e22b" name="Dispatcher 6 - Pollaplos (Good - Normal)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>1000001312</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="90acb7f0-14ec-4bf1-b09b-e955413b7ee3" name="Copy of Dispatcher 4 - Pollaplos (Good)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>1000001470</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="f2d7e02b-f389-46f0-847c-a0809276efa3" name="azuredispatchertest"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>1000001470</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="319d2133-260f-43aa-a7f6-8e61eada7b16" name="linakistest"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>300002164681</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WA_F_V1</con:username><con:password>Ppcw3bf0rms!</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="ed4ad06b-f59e-42a4-919c-b6b42d2b82aa" name="RECCO"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>300002164681</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>EC_WS_V1</con:username><con:password>Ppcec0ntr!1</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="c9c8ddfe-5d47-4bbd-b220-e1c84935bc57" name="AZURE Dispatcher 1 - CA Normal (Status14)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>300002127743</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="2a26a66c-a896-4c48-b432-c1ffbb05c2c8" name="reccoCopy of AZURE Dispatcher 1 - CA Normal (Status14)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>300002164681</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>RE_D_V1</con:username><con:password>Ppcws3lta1!</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="740e50f2-c698-4bf7-a009-6d9b688a5c58" name="Copy of AZURE Dispatcher 1 - CA Normal (Status14)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>300002020871</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="eeadbb4c-cb70-4094-ae6b-bb8437246c3a" name="Copy of Copy of AZURE Dispatcher 1 - CA Normal (Status14)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>300012211824</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="078a1564-d4ab-471c-87f1-71463f0957fd" name="Copy of Copy of Copy of AZURE Dispatcher 1 - CA Normal (Status14)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>300012</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="5a1f8ce0-98db-45e3-ac06-39a99a0b4bb6" name="Copy of AZURE Dispatcher 1 - CA Normal (Status14)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>300002127743</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="a690ceb5-b519-4292-a362-7f8571e44fdd" name="Copy of Copy of AZURE Dispatcher 1 - CA Normal (Status14)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapisu-pr.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>300002127743</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="db4acfdb-1e8a-408f-be19-e8de2640c64f" name="Copy of AZURE Dispatcher 1 - CA Normal (Status14)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>700000016014</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="be30da03-bfa8-4cc7-accb-f01fa3cbbb01" name="DR_0910_BPCONTRACTDETAILS_V1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>300002127743</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="e5be4863-607c-49ce-963b-295d7fa14760" name="Copy of AZURE Dispatcher 1 - CA Normal (Status14)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://172.18.71.36:44398/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>300002127743</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="4384e81d-6b9f-4a83-b892-e064e3415669" wsaVersion="NONE" name="ZWAPP_GET_REGIONS" type="wsdl" bindingName="{urn:sap-com:document:sap:soap:functions:mc-style}ZWAPP_GET_REGIONS" soapVersion="1_1" anonymous="optional" definition="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D187D80B096F40E10080510A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D187D80B096F40E10080510A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100"><con:part><con:url>http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D187D80B096F40E10080510A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:n1="urn:sap-com:document:sap:rfc:functions">
  <wsdl:documentation>
    <sidl:sidl xmlns:sidl="http://www.sap.com/2007/03/sidl"/>
  </wsdl:documentation>
  <wsp:UsingPolicy wsdl:required="true"/>
  <wsp:Policy wsu:Id="BN_ZWAPP_GET_REGIONS">
    <wsaw:UsingAddressing xmlns:wsaw="http://schemas.xmlsoap.org/ws/2004/08/addressing"/>
    <saptrnbnd:OptimizedXMLTransfer uri="http://xml.sap.com/2006/11/esi/esp/binxml" wsp:Optional="true" xmlns:saptrnbnd="http://www.sap.com/webas/710/soap/features/transportbinding/"/>
    <sapattahnd:Enabled xmlns:sapattahnd="http://www.sap.com/710/features/attachment/">false</sapattahnd:Enabled>
    <wsp:ExactlyOne xmlns:sapsp="http://www.sap.com/webas/630/soap/features/security/policy" xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/07/utility">
      <wsp:All>
        <sp:TransportBinding>
          <wsp:Policy>
            <sp:TransportToken>
              <wsp:Policy>
                <sp:HttpsToken>
                  <wsp:Policy>
                    <sp:HttpBasicAuthentication/>
                  </wsp:Policy>
                </sp:HttpsToken>
              </wsp:Policy>
            </sp:TransportToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:TripleDesRsa15/>
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Strict/>
              </wsp:Policy>
            </sp:Layout>
          </wsp:Policy>
        </sp:TransportBinding>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsp:Policy wsu:Id="IF_ZWAPP_GET_REGIONS">
    <sapsession:Session xmlns:sapsession="http://www.sap.com/webas/630/soap/features/session/">
      <sapsession:enableSession>false</sapsession:enableSession>
    </sapsession:Session>
    <sapcentraladmin:CentralAdministration wsp:Optional="true" xmlns:sapcentraladmin="http://www.sap.com/webas/700/soap/features/CentralAdministration/">
      <sapcentraladmin:BusinessApplicationID>5A2E8A9B2DED2140E10080000A0B126E</sapcentraladmin:BusinessApplicationID>
    </sapcentraladmin:CentralAdministration>
  </wsp:Policy>
  <wsp:Policy wsu:Id="OP_ZWappGetRegions">
    <sapcomhnd:enableCommit xmlns:sapcomhnd="http://www.sap.com/NW05/soap/features/commit/">false</sapcomhnd:enableCommit>
    <sapblock:enableBlocking xmlns:sapblock="http://www.sap.com/NW05/soap/features/blocking/">true</sapblock:enableBlocking>
    <saptrhnw05:required xmlns:saptrhnw05="http://www.sap.com/NW05/soap/features/transaction/">no</saptrhnw05:required>
    <saprmnw05:enableWSRM xmlns:saprmnw05="http://www.sap.com/NW05/soap/features/wsrm/">false</saprmnw05:enableWSRM>
  </wsp:Policy>
  <wsdl:types>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:rfc:functions">
      <xsd:simpleType name="char20">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char200">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="200"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char3">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="3"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char4">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="lang">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:n0="urn:sap-com:document:sap:rfc:functions">
      <xsd:import namespace="urn:sap-com:document:sap:rfc:functions"/>
      <xsd:complexType name="ZwappRegionCodesS">
        <xsd:sequence>
          <xsd:element name="RegionId" type="n0:char3"/>
          <xsd:element name="Region" type="n0:char20"/>
          <xsd:element name="CountryId" type="n0:char3"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappRegionCodesSt">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwappRegionCodesS" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ZWappGetRegions">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="CountryId" type="n0:char3" minOccurs="0"/>
            <xsd:element name="Language" type="n0:lang" minOccurs="0"/>
            <xsd:element name="Source" type="n0:char20"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ZWappGetRegionsResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="RegionCodes" type="tns:ZwappRegionCodesSt"/>
            <xsd:element name="ResultCode" type="n0:char4"/>
            <xsd:element name="ResultMessage" type="n0:char200"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ZWappGetRegions">
    <wsdl:part name="parameters" element="tns:ZWappGetRegions"/>
  </wsdl:message>
  <wsdl:message name="ZWappGetRegionsResponse">
    <wsdl:part name="parameter" element="tns:ZWappGetRegionsResponse"/>
  </wsdl:message>
  <wsdl:portType name="ZWAPP_GET_REGIONS">
    <wsp:Policy>
      <wsp:PolicyReference URI="#IF_ZWAPP_GET_REGIONS"/>
    </wsp:Policy>
    <wsdl:operation name="ZWappGetRegions">
      <wsp:Policy>
        <wsp:PolicyReference URI="#OP_ZWappGetRegions"/>
      </wsp:Policy>
      <wsdl:input message="tns:ZWappGetRegions"/>
      <wsdl:output message="tns:ZWappGetRegionsResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ZWAPP_GET_REGIONS" type="tns:ZWAPP_GET_REGIONS">
    <wsp:Policy>
      <wsp:PolicyReference URI="#BN_ZWAPP_GET_REGIONS"/>
    </wsp:Policy>
    <wsa:EndpointReference xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing">
      <wsa:ReferenceParameters/>
    </wsa:EndpointReference>
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="ZWappGetRegions">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ZWAPP_GET_REGIONS">
    <wsdl:port name="ZWAPP_GET_REGIONS" binding="tns:ZWAPP_GET_REGIONS">
      <soap:address location="https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_regions/100/zwapp_get_regions/zwapp_get_regions"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_regions/100/zwapp_get_regions/zwapp_get_regions</con:endpoint></con:endpoints><con:operation id="b76dc76e-737a-4302-a0ba-c89cf2b300cc" isOneWay="false" action="" name="ZWappGetRegions" bindingOperationName="ZWappGetRegions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="d1f9ccec-dc0a-4314-97d0-bd6fb355e4ac" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_regions/100/zwapp_get_regions/zwapp_get_regions</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetRegions>\r
         <!--Optional:-->\r
         <CountryId>GR</CountryId>\r
         <!--Optional:-->\r
         <Language>G</Language>\r
         <Source></Source>\r
      </urn:ZWappGetRegions>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_REGIONS/ZWappGetRegionsRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="6e654585-1fa6-4f72-b236-b7b22cfdcd09" wsaVersion="NONE" name="ZWAPP_UPDATE_CUST_DTLS_DOC_ID" type="wsdl" bindingName="{urn:sap-com:document:sap:soap:functions:mc-style}ZWAPP_UPDATE_CUST_DTLS_DOC_ID" soapVersion="1_1" anonymous="optional" definition="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D199C30B097A40E10080000A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D199C30B097A40E10080000A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100"><con:part><con:url>http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D199C30B097A40E10080000A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:n1="urn:sap-com:document:sap:rfc:functions">
  <wsdl:documentation>
    <sidl:sidl xmlns:sidl="http://www.sap.com/2007/03/sidl"/>
  </wsdl:documentation>
  <wsp:UsingPolicy wsdl:required="true"/>
  <wsp:Policy wsu:Id="BN_ZWAPP_UPDATE_CUST_DTLS_DOC_ID">
    <wsaw:UsingAddressing xmlns:wsaw="http://schemas.xmlsoap.org/ws/2004/08/addressing"/>
    <saptrnbnd:OptimizedXMLTransfer uri="http://xml.sap.com/2006/11/esi/esp/binxml" wsp:Optional="true" xmlns:saptrnbnd="http://www.sap.com/webas/710/soap/features/transportbinding/"/>
    <sapattahnd:Enabled xmlns:sapattahnd="http://www.sap.com/710/features/attachment/">false</sapattahnd:Enabled>
    <wsp:ExactlyOne xmlns:sapsp="http://www.sap.com/webas/630/soap/features/security/policy" xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/07/utility">
      <wsp:All>
        <sp:TransportBinding>
          <wsp:Policy>
            <sp:TransportToken>
              <wsp:Policy>
                <sp:HttpsToken>
                  <wsp:Policy>
                    <sp:HttpBasicAuthentication/>
                  </wsp:Policy>
                </sp:HttpsToken>
              </wsp:Policy>
            </sp:TransportToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:TripleDesRsa15/>
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Strict/>
              </wsp:Policy>
            </sp:Layout>
          </wsp:Policy>
        </sp:TransportBinding>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsp:Policy wsu:Id="IF_ZWAPP_UPDATE_CUST_DTLS_DOC_ID">
    <sapsession:Session xmlns:sapsession="http://www.sap.com/webas/630/soap/features/session/">
      <sapsession:enableSession>false</sapsession:enableSession>
    </sapsession:Session>
    <sapcentraladmin:CentralAdministration wsp:Optional="true" xmlns:sapcentraladmin="http://www.sap.com/webas/700/soap/features/CentralAdministration/">
      <sapcentraladmin:BusinessApplicationID>5A2E8A9B2DED2140E10080000A0B126E</sapcentraladmin:BusinessApplicationID>
    </sapcentraladmin:CentralAdministration>
  </wsp:Policy>
  <wsp:Policy wsu:Id="OP_ZWappUpdateCustDtlsDocId">
    <sapcomhnd:enableCommit xmlns:sapcomhnd="http://www.sap.com/NW05/soap/features/commit/">false</sapcomhnd:enableCommit>
    <sapblock:enableBlocking xmlns:sapblock="http://www.sap.com/NW05/soap/features/blocking/">true</sapblock:enableBlocking>
    <saptrhnw05:required xmlns:saptrhnw05="http://www.sap.com/NW05/soap/features/transaction/">no</saptrhnw05:required>
    <saprmnw05:enableWSRM xmlns:saprmnw05="http://www.sap.com/NW05/soap/features/wsrm/">false</saprmnw05:enableWSRM>
  </wsp:Policy>
  <wsdl:types>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:rfc:functions">
      <xsd:simpleType name="char20">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char200">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="200"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char3">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="3"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char4">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char40">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="40"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char6">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="6"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char60">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="60"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="date10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
          <xsd:pattern value="\d\d\d\d-\d\d-\d\d"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:n0="urn:sap-com:document:sap:rfc:functions">
      <xsd:import namespace="urn:sap-com:document:sap:rfc:functions"/>
      <xsd:simpleType name="char1">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="numeric10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
          <xsd:pattern value="\d*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ZwappBpUpdResultS">
        <xsd:sequence>
          <xsd:element name="BusinessPartnerId" type="tns:char10"/>
          <xsd:element name="UpdateFlag" type="tns:char1"/>
          <xsd:element name="BpResultMessage" type="n0:char200"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappBpUpdResultSt">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwappBpUpdResultS" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ZWappUpdateCustDtlsDocId">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Country" type="n0:char3"/>
            <xsd:element name="DocTypeId" type="n0:char6"/>
            <xsd:element name="IdNumber" type="n0:char60"/>
            <xsd:element name="Institute" type="n0:char40"/>
            <xsd:element name="MasterId" type="tns:numeric10"/>
            <xsd:element name="Source" type="n0:char20"/>
            <xsd:element name="ValidDateFrom" type="n0:date10"/>
            <xsd:element name="ValidDateTo" type="n0:date10"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ZWappUpdateCustDtlsDocIdResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="BpUpdates" type="tns:ZwappBpUpdResultSt"/>
            <xsd:element name="ResultCode" type="n0:char4"/>
            <xsd:element name="ResultMessage" type="n0:char200"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ZWappUpdateCustDtlsDocId">
    <wsdl:part name="parameters" element="tns:ZWappUpdateCustDtlsDocId"/>
  </wsdl:message>
  <wsdl:message name="ZWappUpdateCustDtlsDocIdResponse">
    <wsdl:part name="parameter" element="tns:ZWappUpdateCustDtlsDocIdResponse"/>
  </wsdl:message>
  <wsdl:portType name="ZWAPP_UPDATE_CUST_DTLS_DOC_ID">
    <wsp:Policy>
      <wsp:PolicyReference URI="#IF_ZWAPP_UPDATE_CUST_DTLS_DOC_ID"/>
    </wsp:Policy>
    <wsdl:operation name="ZWappUpdateCustDtlsDocId">
      <wsp:Policy>
        <wsp:PolicyReference URI="#OP_ZWappUpdateCustDtlsDocId"/>
      </wsp:Policy>
      <wsdl:input message="tns:ZWappUpdateCustDtlsDocId"/>
      <wsdl:output message="tns:ZWappUpdateCustDtlsDocIdResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ZWAPP_UPDATE_CUST_DTLS_DOC_ID" type="tns:ZWAPP_UPDATE_CUST_DTLS_DOC_ID">
    <wsp:Policy>
      <wsp:PolicyReference URI="#BN_ZWAPP_UPDATE_CUST_DTLS_DOC_ID"/>
    </wsp:Policy>
    <wsa:EndpointReference xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing">
      <wsa:ReferenceParameters/>
    </wsa:EndpointReference>
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="ZWappUpdateCustDtlsDocId">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ZWAPP_UPDATE_CUST_DTLS_DOC_ID">
    <wsdl:port name="ZWAPP_UPDATE_CUST_DTLS_DOC_ID" binding="tns:ZWAPP_UPDATE_CUST_DTLS_DOC_ID">
      <soap:address location="https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_update_cust_dtls_doc_id/100/zwapp_update_cust_dtls_doc_id/zwapp_update_cust_dtls_doc_id"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_update_cust_dtls_doc_id/100/zwapp_update_cust_dtls_doc_id/zwapp_update_cust_dtls_doc_id</con:endpoint></con:endpoints><con:operation id="9b10612c-141c-440a-b1d2-8e9666eb7628" isOneWay="false" action="" name="ZWappUpdateCustDtlsDocId" bindingOperationName="ZWappUpdateCustDtlsDocId" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="841cc2b5-c735-4cfc-aa96-6d00c0514b4e" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_update_cust_dtls_doc_id/100/zwapp_update_cust_dtls_doc_id/zwapp_update_cust_dtls_doc_id</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappUpdateCustDtlsDocId>
         <Country>?</Country>
         <DocTypeId>?</DocTypeId>
         <IdNumber>?</IdNumber>
         <Institute>?</Institute>
         <MasterId>?</MasterId>
         <Source>?</Source>
         <ValidDateFrom>?</ValidDateFrom>
         <ValidDateTo>?</ValidDateTo>
      </urn:ZWappUpdateCustDtlsDocId>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_UPDATE_CUST_DTLS_DOC_ID/ZWappUpdateCustDtlsDocIdRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="a3c278d7-b6f4-42af-b018-e769ed610a84" wsaVersion="NONE" name="ZWAPP_UPDATE_CUSTOMER_GDPR" type="wsdl" bindingName="{urn:sap-com:document:sap:soap:functions:mc-style}ZWAPP_UPDATE_CUSTOMER_GDPR" soapVersion="1_1" anonymous="optional" definition="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D1988A0B097A40E10080000A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D1988A0B097A40E10080000A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100"><con:part><con:url>http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D1988A0B097A40E10080000A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:n1="urn:sap-com:document:sap:rfc:functions">
  <wsdl:documentation>
    <sidl:sidl xmlns:sidl="http://www.sap.com/2007/03/sidl"/>
  </wsdl:documentation>
  <wsp:UsingPolicy wsdl:required="true"/>
  <wsp:Policy wsu:Id="BN_ZWAPP_UPDATE_CUSTOMER_GDPR">
    <wsaw:UsingAddressing xmlns:wsaw="http://schemas.xmlsoap.org/ws/2004/08/addressing"/>
    <saptrnbnd:OptimizedXMLTransfer uri="http://xml.sap.com/2006/11/esi/esp/binxml" wsp:Optional="true" xmlns:saptrnbnd="http://www.sap.com/webas/710/soap/features/transportbinding/"/>
    <sapattahnd:Enabled xmlns:sapattahnd="http://www.sap.com/710/features/attachment/">false</sapattahnd:Enabled>
    <wsp:ExactlyOne xmlns:sapsp="http://www.sap.com/webas/630/soap/features/security/policy" xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/07/utility">
      <wsp:All>
        <sp:TransportBinding>
          <wsp:Policy>
            <sp:TransportToken>
              <wsp:Policy>
                <sp:HttpsToken>
                  <wsp:Policy>
                    <sp:HttpBasicAuthentication/>
                  </wsp:Policy>
                </sp:HttpsToken>
              </wsp:Policy>
            </sp:TransportToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:TripleDesRsa15/>
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Strict/>
              </wsp:Policy>
            </sp:Layout>
          </wsp:Policy>
        </sp:TransportBinding>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsp:Policy wsu:Id="IF_ZWAPP_UPDATE_CUSTOMER_GDPR">
    <sapsession:Session xmlns:sapsession="http://www.sap.com/webas/630/soap/features/session/">
      <sapsession:enableSession>false</sapsession:enableSession>
    </sapsession:Session>
    <sapcentraladmin:CentralAdministration wsp:Optional="true" xmlns:sapcentraladmin="http://www.sap.com/webas/700/soap/features/CentralAdministration/">
      <sapcentraladmin:BusinessApplicationID>5A2E8A9B2DED2140E10080000A0B126E</sapcentraladmin:BusinessApplicationID>
    </sapcentraladmin:CentralAdministration>
  </wsp:Policy>
  <wsp:Policy wsu:Id="OP_ZWappUpdateCustomerGdpr">
    <sapcomhnd:enableCommit xmlns:sapcomhnd="http://www.sap.com/NW05/soap/features/commit/">false</sapcomhnd:enableCommit>
    <sapblock:enableBlocking xmlns:sapblock="http://www.sap.com/NW05/soap/features/blocking/">true</sapblock:enableBlocking>
    <saptrhnw05:required xmlns:saptrhnw05="http://www.sap.com/NW05/soap/features/transaction/">no</saptrhnw05:required>
    <saprmnw05:enableWSRM xmlns:saprmnw05="http://www.sap.com/NW05/soap/features/wsrm/">false</saprmnw05:enableWSRM>
  </wsp:Policy>
  <wsdl:types>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:n0="urn:sap-com:document:sap:rfc:functions">
      <xsd:import namespace="urn:sap-com:document:sap:rfc:functions"/>
      <xsd:simpleType name="char1">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="numeric1">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
          <xsd:pattern value="\d*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="numeric10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
          <xsd:pattern value="\d*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ZwappCustomerGdprInfoS">
        <xsd:sequence>
          <xsd:element name="ExceptionReason" type="tns:numeric1"/>
          <xsd:element name="GdprApproval" type="n0:char1"/>
          <xsd:element name="GdprNotApproval" type="n0:char1"/>
          <xsd:element name="GdprSms" type="n0:char1"/>
          <xsd:element name="GdprEmail" type="n0:char1"/>
          <xsd:element name="GdprPhone" type="n0:char1"/>
          <xsd:element name="GdprPost" type="n0:char1"/>
          <xsd:element name="GdprAll" type="n0:char1"/>
          <xsd:element name="GdprGasApproval" type="n0:char1"/>
          <xsd:element name="GdprGasNotApproval" type="n0:char1"/>
          <xsd:element name="GdprGasSms" type="n0:char1"/>
          <xsd:element name="GdprGasEmail" type="n0:char1"/>
          <xsd:element name="GdprGasPhone" type="n0:char1"/>
          <xsd:element name="GdprGasPost" type="n0:char1"/>
          <xsd:element name="GdprGasAll" type="n0:char1"/>
          <xsd:element name="GdprResearchApproval" type="n0:char1"/>
          <xsd:element name="GdprResearchNotApproval" type="n0:char1"/>
          <xsd:element name="GdprCanceled" type="tns:char1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ZWappUpdateCustomerGdpr">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="GdprInfo" type="tns:ZwappCustomerGdprInfoS"/>
            <xsd:element name="MasterId" type="tns:numeric10"/>
            <xsd:element name="Source" type="n0:char20" minOccurs="0"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ZWappUpdateCustomerGdprResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="ResultCode" type="n0:char4"/>
            <xsd:element name="ResultMessage" type="n0:char200"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:rfc:functions">
      <xsd:simpleType name="char1">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char20">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char200">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="200"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char4">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ZWappUpdateCustomerGdpr">
    <wsdl:part name="parameters" element="tns:ZWappUpdateCustomerGdpr"/>
  </wsdl:message>
  <wsdl:message name="ZWappUpdateCustomerGdprResponse">
    <wsdl:part name="parameter" element="tns:ZWappUpdateCustomerGdprResponse"/>
  </wsdl:message>
  <wsdl:portType name="ZWAPP_UPDATE_CUSTOMER_GDPR">
    <wsp:Policy>
      <wsp:PolicyReference URI="#IF_ZWAPP_UPDATE_CUSTOMER_GDPR"/>
    </wsp:Policy>
    <wsdl:operation name="ZWappUpdateCustomerGdpr">
      <wsp:Policy>
        <wsp:PolicyReference URI="#OP_ZWappUpdateCustomerGdpr"/>
      </wsp:Policy>
      <wsdl:input message="tns:ZWappUpdateCustomerGdpr"/>
      <wsdl:output message="tns:ZWappUpdateCustomerGdprResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ZWAPP_UPDATE_CUSTOMER_GDPR" type="tns:ZWAPP_UPDATE_CUSTOMER_GDPR">
    <wsp:Policy>
      <wsp:PolicyReference URI="#BN_ZWAPP_UPDATE_CUSTOMER_GDPR"/>
    </wsp:Policy>
    <wsa:EndpointReference xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing">
      <wsa:ReferenceParameters/>
    </wsa:EndpointReference>
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="ZWappUpdateCustomerGdpr">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ZWAPP_UPDATE_CUSTOMER_GDPR">
    <wsdl:port name="ZWAPP_UPDATE_CUSTOMER_GDPR" binding="tns:ZWAPP_UPDATE_CUSTOMER_GDPR">
      <soap:address location="https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_update_customer_gdpr/100/zwapp_update_customer_gdpr/zwapp_update_customer_gdpr"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_update_customer_gdpr/100/zwapp_update_customer_gdpr/zwapp_update_customer_gdpr</con:endpoint></con:endpoints><con:operation id="8017db18-b394-4f27-9245-70b0dfc29c1e" isOneWay="false" action="" name="ZWappUpdateCustomerGdpr" bindingOperationName="ZWappUpdateCustomerGdpr" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="af9c6780-efe4-4674-88a3-3df7beb3b894" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_update_customer_gdpr/100/zwapp_update_customer_gdpr/zwapp_update_customer_gdpr</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappUpdateCustomerGdpr>
         <GdprInfo>
            <ExceptionReason>?</ExceptionReason>
            <GdprApproval>?</GdprApproval>
            <GdprNotApproval>?</GdprNotApproval>
            <GdprSms>?</GdprSms>
            <GdprEmail>?</GdprEmail>
            <GdprPhone>?</GdprPhone>
            <GdprPost>?</GdprPost>
            <GdprAll>?</GdprAll>
            <GdprGasApproval>?</GdprGasApproval>
            <GdprGasNotApproval>?</GdprGasNotApproval>
            <GdprGasSms>?</GdprGasSms>
            <GdprGasEmail>?</GdprGasEmail>
            <GdprGasPhone>?</GdprGasPhone>
            <GdprGasPost>?</GdprGasPost>
            <GdprGasAll>?</GdprGasAll>
            <GdprResearchApproval>?</GdprResearchApproval>
            <GdprResearchNotApproval>?</GdprResearchNotApproval>
            <GdprCanceled>?</GdprCanceled>
         </GdprInfo>
         <MasterId>?</MasterId>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappUpdateCustomerGdpr>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_UPDATE_CUSTOMER_GDPR/ZWappUpdateCustomerGdprRequest"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="f43e0e86-ee75-463a-a5fd-4929058e1f7a" wsaVersion="NONE" name="ZWAPP_GET_POLLAPLOI_CODES" type="wsdl" bindingName="{urn:sap-com:document:sap:soap:functions:mc-style}ZWAPP_GET_POLLAPLOI_CODES" soapVersion="1_1" anonymous="optional" definition="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D1173B0B0989C0E10080590A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D1173B0B0989C0E10080590A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100"><con:part><con:url>http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D1173B0B0989C0E10080590A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:n1="urn:sap-com:document:sap:rfc:functions">
  <wsdl:documentation>
    <sidl:sidl xmlns:sidl="http://www.sap.com/2007/03/sidl"/>
  </wsdl:documentation>
  <wsp:UsingPolicy wsdl:required="true"/>
  <wsp:Policy wsu:Id="BN_ZWAPP_GET_POLLAPLOI_CODES">
    <saptrnbnd:OptimizedXMLTransfer uri="http://xml.sap.com/2006/11/esi/esp/binxml" wsp:Optional="true" xmlns:saptrnbnd="http://www.sap.com/webas/710/soap/features/transportbinding/"/>
    <wsaw:UsingAddressing xmlns:wsaw="http://schemas.xmlsoap.org/ws/2004/08/addressing"/>
    <sapattahnd:Enabled xmlns:sapattahnd="http://www.sap.com/710/features/attachment/">false</sapattahnd:Enabled>
    <wsp:ExactlyOne xmlns:sapsp="http://www.sap.com/webas/630/soap/features/security/policy" xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/07/utility">
      <wsp:All>
        <sp:TransportBinding>
          <wsp:Policy>
            <sp:TransportToken>
              <wsp:Policy>
                <sp:HttpsToken>
                  <wsp:Policy>
                    <sp:HttpBasicAuthentication/>
                  </wsp:Policy>
                </sp:HttpsToken>
              </wsp:Policy>
            </sp:TransportToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:TripleDesRsa15/>
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Strict/>
              </wsp:Policy>
            </sp:Layout>
          </wsp:Policy>
        </sp:TransportBinding>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsp:Policy wsu:Id="IF_ZWAPP_GET_POLLAPLOI_CODES">
    <sapsession:Session xmlns:sapsession="http://www.sap.com/webas/630/soap/features/session/">
      <sapsession:enableSession>false</sapsession:enableSession>
    </sapsession:Session>
    <sapcentraladmin:CentralAdministration wsp:Optional="true" xmlns:sapcentraladmin="http://www.sap.com/webas/700/soap/features/CentralAdministration/">
      <sapcentraladmin:BusinessApplicationID>5A2E8A9B2DED2140E10080000A0B126E</sapcentraladmin:BusinessApplicationID>
    </sapcentraladmin:CentralAdministration>
  </wsp:Policy>
  <wsp:Policy wsu:Id="OP_ZWappGetPollaploiCodes">
    <sapcomhnd:enableCommit xmlns:sapcomhnd="http://www.sap.com/NW05/soap/features/commit/">false</sapcomhnd:enableCommit>
    <sapblock:enableBlocking xmlns:sapblock="http://www.sap.com/NW05/soap/features/blocking/">true</sapblock:enableBlocking>
    <saptrhnw05:required xmlns:saptrhnw05="http://www.sap.com/NW05/soap/features/transaction/">no</saptrhnw05:required>
    <saprmnw05:enableWSRM xmlns:saprmnw05="http://www.sap.com/NW05/soap/features/wsrm/">false</saprmnw05:enableWSRM>
  </wsp:Policy>
  <wsdl:types>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:rfc:functions">
      <xsd:simpleType name="char10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char20">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char4">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char70">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="70"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:n0="urn:sap-com:document:sap:rfc:functions">
      <xsd:import namespace="urn:sap-com:document:sap:rfc:functions"/>
      <xsd:simpleType name="char12">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="12"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Zpollaploi">
        <xsd:sequence>
          <xsd:element name="item" type="tns:char12" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ZWappGetPollaploiCodes">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="BusinessPartnerId" type="n0:char10"/>
            <xsd:element name="Source" type="n0:char20" minOccurs="0"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ZWappGetPollaploiCodesResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Pollaploi" type="tns:Zpollaploi"/>
            <xsd:element name="ResultCode" type="n0:char4"/>
            <xsd:element name="ResultMessage" type="n0:char70"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ZWappGetPollaploiCodes">
    <wsdl:part name="parameters" element="tns:ZWappGetPollaploiCodes"/>
  </wsdl:message>
  <wsdl:message name="ZWappGetPollaploiCodesResponse">
    <wsdl:part name="parameter" element="tns:ZWappGetPollaploiCodesResponse"/>
  </wsdl:message>
  <wsdl:portType name="ZWAPP_GET_POLLAPLOI_CODES">
    <wsp:Policy>
      <wsp:PolicyReference URI="#IF_ZWAPP_GET_POLLAPLOI_CODES"/>
    </wsp:Policy>
    <wsdl:operation name="ZWappGetPollaploiCodes">
      <wsp:Policy>
        <wsp:PolicyReference URI="#OP_ZWappGetPollaploiCodes"/>
      </wsp:Policy>
      <wsdl:input message="tns:ZWappGetPollaploiCodes"/>
      <wsdl:output message="tns:ZWappGetPollaploiCodesResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ZWAPP_GET_POLLAPLOI_CODES" type="tns:ZWAPP_GET_POLLAPLOI_CODES">
    <wsp:Policy>
      <wsp:PolicyReference URI="#BN_ZWAPP_GET_POLLAPLOI_CODES"/>
    </wsp:Policy>
    <wsa:EndpointReference xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing">
      <wsa:ReferenceParameters/>
    </wsa:EndpointReference>
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="ZWappGetPollaploiCodes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ZWAPP_GET_POLLAPLOI_CODES">
    <wsdl:port name="ZWAPP_GET_POLLAPLOI_CODES" binding="tns:ZWAPP_GET_POLLAPLOI_CODES">
      <soap:address location="https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_pollaploi_codes/100/zwapp_get_pollaploi_codes/zwapp_get_pollaploi_codes"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_pollaploi_codes/100/zwapp_get_pollaploi_codes/zwapp_get_pollaploi_codes</con:endpoint></con:endpoints><con:operation id="9a955a37-3231-464d-894e-cd061b22ebf1" isOneWay="false" action="" name="ZWappGetPollaploiCodes" bindingOperationName="ZWappGetPollaploiCodes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="47dc660b-ab9c-4552-87a4-601a33301768" name="Request 1 - Pollaplos"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_pollaploi_codes/100/zwapp_get_pollaploi_codes/zwapp_get_pollaploi_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetPollaploiCodes>\r
         <BusinessPartnerId>1000001461</BusinessPartnerId>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetPollaploiCodes>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POLLAPLOI_CODES/ZWappGetPollaploiCodesRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="8609fe98-2271-408b-acd0-d925f6312b09" name="Request 2 - Not Pollaplos"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_pollaploi_codes/100/zwapp_get_pollaploi_codes/zwapp_get_pollaploi_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetPollaploiCodes>\r
         <BusinessPartnerId>1000031111</BusinessPartnerId>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetPollaploiCodes>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POLLAPLOI_CODES/ZWappGetPollaploiCodesRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="037c7d9e-d2e0-4385-b67c-03b9fb7bebd9" name="Dispatcher 1 - Pollaplos"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_pollaploi_codes/100/zwapp_get_pollaploi_codes/zwapp_get_pollaploi_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetPollaploiCodes>\r
         <BusinessPartnerId>1000001461</BusinessPartnerId>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetPollaploiCodes>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POLLAPLOI_CODES/ZWappGetPollaploiCodesRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="b990f460-2afd-41d1-93da-01c0d5add81b" name="Dispatcher 2 - Not Pollaplos"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_pollaploi_codes/100/zwapp_get_pollaploi_codes/zwapp_get_pollaploi_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetPollaploiCodes>\r
         <BusinessPartnerId>1000031111</BusinessPartnerId>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetPollaploiCodes>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POLLAPLOI_CODES/ZWappGetPollaploiCodesRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="e861f9e2-f5d9-4691-98ff-9fa09188e0b7" name="Dispatcher 3 - Pollaplos (Good)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_pollaploi_codes/100/zwapp_get_pollaploi_codes/zwapp_get_pollaploi_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetPollaploiCodes>\r
         <BusinessPartnerId>1000001312</BusinessPartnerId>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetPollaploiCodes>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POLLAPLOI_CODES/ZWappGetPollaploiCodesRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="55f2ea91-6dbc-437d-a6c0-72cd9e01975b" name="Dispatcher 4 - Pollaplos Child (Good)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_pollaploi_codes/100/zwapp_get_pollaploi_codes/zwapp_get_pollaploi_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetPollaploiCodes>\r
         <BusinessPartnerId>1000005153</BusinessPartnerId>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetPollaploiCodes>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POLLAPLOI_CODES/ZWappGetPollaploiCodesRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="3edd346b-e23e-4391-97f8-9fb86a0d2bf4" name="Copy of Dispatcher 3 - Pollaplos (Good)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_pollaploi_codes/100/zwapp_get_pollaploi_codes/zwapp_get_pollaploi_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetPollaploiCodes>\r
         <BusinessPartnerId>1000001107</BusinessPartnerId>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetPollaploiCodes>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POLLAPLOI_CODES/ZWappGetPollaploiCodesRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="54ab631d-2d05-47e6-a61b-6ea37fa80df8" name="Copy of Copy of Dispatcher 3 - Pollaplos (Good)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_pollaploi_codes/100/zwapp_get_pollaploi_codes/zwapp_get_pollaploi_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetPollaploiCodes>\r
         <BusinessPartnerId>1000001107</BusinessPartnerId>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetPollaploiCodes>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POLLAPLOI_CODES/ZWappGetPollaploiCodesRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="dbfbd5fa-f2d3-4333-bf05-ea107e628362" wsaVersion="NONE" name="ZWAPP_UPDATE_CONTRACT_ACCOUNT" type="wsdl" bindingName="{urn:sap-com:document:sap:soap:functions:mc-style}ZWAPP_UPDATE_CONTRACT_ACCOUNT" soapVersion="1_1" anonymous="optional" definition="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D118CADF5058C0E10080320A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D118CADF5058C0E10080320A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100"><con:part><con:url>http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D118CADF5058C0E10080320A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:n1="urn:sap-com:document:sap:rfc:functions">
  <wsdl:documentation>
    <sidl:sidl xmlns:sidl="http://www.sap.com/2007/03/sidl"/>
  </wsdl:documentation>
  <wsp:UsingPolicy wsdl:required="true"/>
  <wsp:Policy wsu:Id="BN_ZWAPP_UPDATE_CONTRACT_ACCOUNT">
    <wsaw:UsingAddressing xmlns:wsaw="http://schemas.xmlsoap.org/ws/2004/08/addressing"/>
    <saptrnbnd:OptimizedXMLTransfer uri="http://xml.sap.com/2006/11/esi/esp/binxml" wsp:Optional="true" xmlns:saptrnbnd="http://www.sap.com/webas/710/soap/features/transportbinding/"/>
    <sapattahnd:Enabled xmlns:sapattahnd="http://www.sap.com/710/features/attachment/">false</sapattahnd:Enabled>
    <wsp:ExactlyOne xmlns:sapsp="http://www.sap.com/webas/630/soap/features/security/policy" xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/07/utility">
      <wsp:All>
        <sp:TransportBinding>
          <wsp:Policy>
            <sp:TransportToken>
              <wsp:Policy>
                <sp:HttpsToken>
                  <wsp:Policy>
                    <sp:HttpBasicAuthentication/>
                  </wsp:Policy>
                </sp:HttpsToken>
              </wsp:Policy>
            </sp:TransportToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:TripleDesRsa15/>
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Strict/>
              </wsp:Policy>
            </sp:Layout>
          </wsp:Policy>
        </sp:TransportBinding>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsp:Policy wsu:Id="IF_ZWAPP_UPDATE_CONTRACT_ACCOUNT">
    <sapsession:Session xmlns:sapsession="http://www.sap.com/webas/630/soap/features/session/">
      <sapsession:enableSession>false</sapsession:enableSession>
    </sapsession:Session>
    <sapcentraladmin:CentralAdministration wsp:Optional="true" xmlns:sapcentraladmin="http://www.sap.com/webas/700/soap/features/CentralAdministration/">
      <sapcentraladmin:BusinessApplicationID>5A2E8A9B2DED2140E10080000A0B126E</sapcentraladmin:BusinessApplicationID>
    </sapcentraladmin:CentralAdministration>
  </wsp:Policy>
  <wsp:Policy wsu:Id="OP_ZWappUpdateContractAccount">
    <sapcomhnd:enableCommit xmlns:sapcomhnd="http://www.sap.com/NW05/soap/features/commit/">false</sapcomhnd:enableCommit>
    <sapblock:enableBlocking xmlns:sapblock="http://www.sap.com/NW05/soap/features/blocking/">true</sapblock:enableBlocking>
    <saptrhnw05:required xmlns:saptrhnw05="http://www.sap.com/NW05/soap/features/transaction/">no</saptrhnw05:required>
    <saprmnw05:enableWSRM xmlns:saprmnw05="http://www.sap.com/NW05/soap/features/wsrm/">false</saprmnw05:enableWSRM>
  </wsp:Policy>
  <wsdl:types>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:rfc:functions">
      <xsd:simpleType name="char1">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char12">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="12"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char20">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:n0="urn:sap-com:document:sap:rfc:functions">
      <xsd:import namespace="urn:sap-com:document:sap:rfc:functions"/>
      <xsd:simpleType name="char220">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="220"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char23">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="23"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ZcontractAccountFlags">
        <xsd:sequence>
          <xsd:element name="MonthlyBill" type="n0:char1"/>
          <xsd:element name="EbillOnly" type="n0:char1"/>
          <xsd:element name="EmailNotification" type="n0:char1"/>
          <xsd:element name="SmsNotification" type="n0:char1"/>
          <xsd:element name="PushNotification" type="n0:char1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwebappResult">
        <xsd:sequence>
          <xsd:element name="Code" type="tns:char23"/>
          <xsd:element name="Message" type="tns:char220"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwebappResults">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwebappResult" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ZWappUpdateContractAccount">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="ContractAccount" type="n0:char12"/>
            <xsd:element name="Flags" type="tns:ZcontractAccountFlags"/>
            <xsd:element name="Source" type="n0:char20" minOccurs="0"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ZWappUpdateContractAccountResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Results" type="tns:ZwebappResults"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ZWappUpdateContractAccount">
    <wsdl:part name="parameters" element="tns:ZWappUpdateContractAccount"/>
  </wsdl:message>
  <wsdl:message name="ZWappUpdateContractAccountResponse">
    <wsdl:part name="parameter" element="tns:ZWappUpdateContractAccountResponse"/>
  </wsdl:message>
  <wsdl:portType name="ZWAPP_UPDATE_CONTRACT_ACCOUNT">
    <wsp:Policy>
      <wsp:PolicyReference URI="#IF_ZWAPP_UPDATE_CONTRACT_ACCOUNT"/>
    </wsp:Policy>
    <wsdl:operation name="ZWappUpdateContractAccount">
      <wsp:Policy>
        <wsp:PolicyReference URI="#OP_ZWappUpdateContractAccount"/>
      </wsp:Policy>
      <wsdl:input message="tns:ZWappUpdateContractAccount"/>
      <wsdl:output message="tns:ZWappUpdateContractAccountResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ZWAPP_UPDATE_CONTRACT_ACCOUNT" type="tns:ZWAPP_UPDATE_CONTRACT_ACCOUNT">
    <wsp:Policy>
      <wsp:PolicyReference URI="#BN_ZWAPP_UPDATE_CONTRACT_ACCOUNT"/>
    </wsp:Policy>
    <wsa:EndpointReference xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing">
      <wsa:ReferenceParameters/>
    </wsa:EndpointReference>
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="ZWappUpdateContractAccount">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ZWAPP_UPDATE_CONTRACT_ACCOUNT">
    <wsdl:port name="ZWAPP_UPDATE_CONTRACT_ACCOUNT" binding="tns:ZWAPP_UPDATE_CONTRACT_ACCOUNT">
      <soap:address location="https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_update_contract_account/100/zwapp_update_contract_account/zwapp_update_contract_account"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_update_contract_account/100/zwapp_update_contract_account/zwapp_update_contract_account</con:endpoint></con:endpoints><con:operation id="e94f6f3c-3b59-4315-89e5-c2f0ef1f8ad8" isOneWay="false" action="" name="ZWappUpdateContractAccount" bindingOperationName="ZWappUpdateContractAccount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="60c53af6-6da9-470a-86cb-381a08d3ef47" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_update_contract_account/100/zwapp_update_contract_account/zwapp_update_contract_account</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappUpdateContractAccount>\r
         <ContractAccount>?</ContractAccount>\r
         <Flags>\r
            <MonthlyBill>?</MonthlyBill>\r
            <EbillOnly>?</EbillOnly>\r
            <EmailNotification>?</EmailNotification>\r
            <SmsNotification>?</SmsNotification>\r
            <PushNotification>?</PushNotification>\r
         </Flags>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappUpdateContractAccount>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_UPDATE_CONTRACT_ACCOUNT/ZWappUpdateContractAccountRequest"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="d1585e1e-4ca8-401e-8182-13c284610b49" wsaVersion="NONE" name="ZWAPP_UPDATE_CONTRACT_PRODUCT" type="wsdl" bindingName="{urn:sap-com:document:sap:soap:functions:mc-style}ZWAPP_UPDATE_CONTRACT_PRODUCT" soapVersion="1_1" anonymous="optional" definition="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D12D29D18F6000E100801C0A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D12D29D18F6000E100801C0A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100"><con:part><con:url>http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D12D29D18F6000E100801C0A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:n1="urn:sap-com:document:sap:rfc:functions">
  <wsdl:documentation>
    <sidl:sidl xmlns:sidl="http://www.sap.com/2007/03/sidl"/>
  </wsdl:documentation>
  <wsp:UsingPolicy wsdl:required="true"/>
  <wsp:Policy wsu:Id="BN_ZWAPP_UPDATE_CONTRACT_PRODUCT">
    <wsaw:UsingAddressing xmlns:wsaw="http://schemas.xmlsoap.org/ws/2004/08/addressing"/>
    <saptrnbnd:OptimizedXMLTransfer uri="http://xml.sap.com/2006/11/esi/esp/binxml" wsp:Optional="true" xmlns:saptrnbnd="http://www.sap.com/webas/710/soap/features/transportbinding/"/>
    <sapattahnd:Enabled xmlns:sapattahnd="http://www.sap.com/710/features/attachment/">false</sapattahnd:Enabled>
    <wsp:ExactlyOne xmlns:sapsp="http://www.sap.com/webas/630/soap/features/security/policy" xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/07/utility">
      <wsp:All>
        <sp:TransportBinding>
          <wsp:Policy>
            <sp:TransportToken>
              <wsp:Policy>
                <sp:HttpsToken>
                  <wsp:Policy>
                    <sp:HttpBasicAuthentication/>
                  </wsp:Policy>
                </sp:HttpsToken>
              </wsp:Policy>
            </sp:TransportToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:TripleDesRsa15/>
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Strict/>
              </wsp:Policy>
            </sp:Layout>
          </wsp:Policy>
        </sp:TransportBinding>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsp:Policy wsu:Id="IF_ZWAPP_UPDATE_CONTRACT_PRODUCT">
    <sapsession:Session xmlns:sapsession="http://www.sap.com/webas/630/soap/features/session/">
      <sapsession:enableSession>false</sapsession:enableSession>
    </sapsession:Session>
    <sapcentraladmin:CentralAdministration wsp:Optional="true" xmlns:sapcentraladmin="http://www.sap.com/webas/700/soap/features/CentralAdministration/">
      <sapcentraladmin:BusinessApplicationID>5A2E8A9B2DED2140E10080000A0B126E</sapcentraladmin:BusinessApplicationID>
    </sapcentraladmin:CentralAdministration>
  </wsp:Policy>
  <wsp:Policy wsu:Id="OP_ZWappUpdateContractProduct">
    <sapcomhnd:enableCommit xmlns:sapcomhnd="http://www.sap.com/NW05/soap/features/commit/">false</sapcomhnd:enableCommit>
    <sapblock:enableBlocking xmlns:sapblock="http://www.sap.com/NW05/soap/features/blocking/">true</sapblock:enableBlocking>
    <saptrhnw05:required xmlns:saptrhnw05="http://www.sap.com/NW05/soap/features/transaction/">no</saptrhnw05:required>
    <saprmnw05:enableWSRM xmlns:saprmnw05="http://www.sap.com/NW05/soap/features/wsrm/">false</saprmnw05:enableWSRM>
  </wsp:Policy>
  <wsdl:types>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:rfc:functions">
      <xsd:simpleType name="char12">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="12"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char2">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="2"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char20">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="date10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
          <xsd:pattern value="\d\d\d\d-\d\d-\d\d"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:n0="urn:sap-com:document:sap:rfc:functions">
      <xsd:import namespace="urn:sap-com:document:sap:rfc:functions"/>
      <xsd:simpleType name="char220">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="220"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char23">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="23"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ZwebappResult">
        <xsd:sequence>
          <xsd:element name="Code" type="tns:char23"/>
          <xsd:element name="Message" type="tns:char220"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwebappResults">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwebappResult" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ZWappUpdateContractProduct">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="ContractAccount" type="n0:char12"/>
            <xsd:element name="ProductId" type="n0:char2"/>
            <xsd:element name="Source" type="n0:char20" minOccurs="0"/>
            <xsd:element name="StartDate" type="n0:date10"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ZWappUpdateContractProductResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Results" type="tns:ZwebappResults"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ZWappUpdateContractProduct">
    <wsdl:part name="parameters" element="tns:ZWappUpdateContractProduct"/>
  </wsdl:message>
  <wsdl:message name="ZWappUpdateContractProductResponse">
    <wsdl:part name="parameter" element="tns:ZWappUpdateContractProductResponse"/>
  </wsdl:message>
  <wsdl:portType name="ZWAPP_UPDATE_CONTRACT_PRODUCT">
    <wsp:Policy>
      <wsp:PolicyReference URI="#IF_ZWAPP_UPDATE_CONTRACT_PRODUCT"/>
    </wsp:Policy>
    <wsdl:operation name="ZWappUpdateContractProduct">
      <wsp:Policy>
        <wsp:PolicyReference URI="#OP_ZWappUpdateContractProduct"/>
      </wsp:Policy>
      <wsdl:input message="tns:ZWappUpdateContractProduct"/>
      <wsdl:output message="tns:ZWappUpdateContractProductResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ZWAPP_UPDATE_CONTRACT_PRODUCT" type="tns:ZWAPP_UPDATE_CONTRACT_PRODUCT">
    <wsp:Policy>
      <wsp:PolicyReference URI="#BN_ZWAPP_UPDATE_CONTRACT_PRODUCT"/>
    </wsp:Policy>
    <wsa:EndpointReference xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing">
      <wsa:ReferenceParameters/>
    </wsa:EndpointReference>
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="ZWappUpdateContractProduct">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ZWAPP_UPDATE_CONTRACT_PRODUCT">
    <wsdl:port name="ZWAPP_UPDATE_CONTRACT_PRODUCT" binding="tns:ZWAPP_UPDATE_CONTRACT_PRODUCT">
      <soap:address location="https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_update_contract_product/100/zwapp_update_contract_product/zwapp_update_contract_product"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_update_contract_product/100/zwapp_update_contract_product/zwapp_update_contract_product</con:endpoint></con:endpoints><con:operation id="e56ae63e-f2c4-4995-a5b1-25c0b9e2ed01" isOneWay="false" action="" name="ZWappUpdateContractProduct" bindingOperationName="ZWappUpdateContractProduct" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="2f750578-a26b-41d9-bbff-b008d488f47c" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_update_contract_product/100/zwapp_update_contract_product/zwapp_update_contract_product</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappUpdateContractProduct>\r
         <ContractAccount>?</ContractAccount>\r
         <ProductId>?</ProductId>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
         <StartDate>?</StartDate>\r
      </urn:ZWappUpdateContractProduct>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_UPDATE_CONTRACT_PRODUCT/ZWappUpdateContractProductRequest"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="f8bb25c2-1026-4b5d-b3e0-b0f2ab53508e" wsaVersion="NONE" name="ZWAPP_UPDATE_CONTRACT_ADDONS" type="wsdl" bindingName="{urn:sap-com:document:sap:soap:functions:mc-style}ZWAPP_UPDATE_CONTRACT_ADDONS" soapVersion="1_1" anonymous="optional" definition="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D11A4DDF5058C0E10080320A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D11A4DDF5058C0E10080320A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100"><con:part><con:url>http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D11A4DDF5058C0E10080320A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:n1="urn:sap-com:document:sap:rfc:functions">
  <wsdl:documentation>
    <sidl:sidl xmlns:sidl="http://www.sap.com/2007/03/sidl"/>
  </wsdl:documentation>
  <wsp:UsingPolicy wsdl:required="true"/>
  <wsp:Policy wsu:Id="BN_ZWAPP_UPDATE_CONTRACT_ADDONS">
    <wsaw:UsingAddressing xmlns:wsaw="http://schemas.xmlsoap.org/ws/2004/08/addressing"/>
    <saptrnbnd:OptimizedXMLTransfer uri="http://xml.sap.com/2006/11/esi/esp/binxml" wsp:Optional="true" xmlns:saptrnbnd="http://www.sap.com/webas/710/soap/features/transportbinding/"/>
    <sapattahnd:Enabled xmlns:sapattahnd="http://www.sap.com/710/features/attachment/">false</sapattahnd:Enabled>
    <wsp:ExactlyOne xmlns:sapsp="http://www.sap.com/webas/630/soap/features/security/policy" xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/07/utility">
      <wsp:All>
        <sp:TransportBinding>
          <wsp:Policy>
            <sp:TransportToken>
              <wsp:Policy>
                <sp:HttpsToken>
                  <wsp:Policy>
                    <sp:HttpBasicAuthentication/>
                  </wsp:Policy>
                </sp:HttpsToken>
              </wsp:Policy>
            </sp:TransportToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:TripleDesRsa15/>
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Strict/>
              </wsp:Policy>
            </sp:Layout>
          </wsp:Policy>
        </sp:TransportBinding>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsp:Policy wsu:Id="IF_ZWAPP_UPDATE_CONTRACT_ADDONS">
    <sapsession:Session xmlns:sapsession="http://www.sap.com/webas/630/soap/features/session/">
      <sapsession:enableSession>false</sapsession:enableSession>
    </sapsession:Session>
    <sapcentraladmin:CentralAdministration wsp:Optional="true" xmlns:sapcentraladmin="http://www.sap.com/webas/700/soap/features/CentralAdministration/">
      <sapcentraladmin:BusinessApplicationID>5A2E8A9B2DED2140E10080000A0B126E</sapcentraladmin:BusinessApplicationID>
    </sapcentraladmin:CentralAdministration>
  </wsp:Policy>
  <wsp:Policy wsu:Id="OP_ZWappUpdateContractAddons">
    <sapcomhnd:enableCommit xmlns:sapcomhnd="http://www.sap.com/NW05/soap/features/commit/">false</sapcomhnd:enableCommit>
    <sapblock:enableBlocking xmlns:sapblock="http://www.sap.com/NW05/soap/features/blocking/">true</sapblock:enableBlocking>
    <saptrhnw05:required xmlns:saptrhnw05="http://www.sap.com/NW05/soap/features/transaction/">no</saptrhnw05:required>
    <saprmnw05:enableWSRM xmlns:saprmnw05="http://www.sap.com/NW05/soap/features/wsrm/">false</saprmnw05:enableWSRM>
  </wsp:Policy>
  <wsdl:types>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:rfc:functions">
      <xsd:simpleType name="char10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char12">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="12"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char20">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="date10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
          <xsd:pattern value="\d\d\d\d-\d\d-\d\d"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:n0="urn:sap-com:document:sap:rfc:functions">
      <xsd:import namespace="urn:sap-com:document:sap:rfc:functions"/>
      <xsd:simpleType name="char1">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char220">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="220"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char23">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="23"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ZwebappResult">
        <xsd:sequence>
          <xsd:element name="Code" type="tns:char23"/>
          <xsd:element name="Message" type="tns:char220"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwebappResults">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwebappResult" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ZWappUpdateContractAddons">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="AddonId" type="n0:char10"/>
            <xsd:element name="ContractAccount" type="n0:char12"/>
            <xsd:element name="Deactivate" type="tns:char1" minOccurs="0"/>
            <xsd:element name="Source" type="n0:char20" minOccurs="0"/>
            <xsd:element name="StartDate" type="n0:date10"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ZWappUpdateContractAddonsResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Results" type="tns:ZwebappResults"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ZWappUpdateContractAddons">
    <wsdl:part name="parameters" element="tns:ZWappUpdateContractAddons"/>
  </wsdl:message>
  <wsdl:message name="ZWappUpdateContractAddonsResponse">
    <wsdl:part name="parameter" element="tns:ZWappUpdateContractAddonsResponse"/>
  </wsdl:message>
  <wsdl:portType name="ZWAPP_UPDATE_CONTRACT_ADDONS">
    <wsp:Policy>
      <wsp:PolicyReference URI="#IF_ZWAPP_UPDATE_CONTRACT_ADDONS"/>
    </wsp:Policy>
    <wsdl:operation name="ZWappUpdateContractAddons">
      <wsp:Policy>
        <wsp:PolicyReference URI="#OP_ZWappUpdateContractAddons"/>
      </wsp:Policy>
      <wsdl:input message="tns:ZWappUpdateContractAddons"/>
      <wsdl:output message="tns:ZWappUpdateContractAddonsResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ZWAPP_UPDATE_CONTRACT_ADDONS" type="tns:ZWAPP_UPDATE_CONTRACT_ADDONS">
    <wsp:Policy>
      <wsp:PolicyReference URI="#BN_ZWAPP_UPDATE_CONTRACT_ADDONS"/>
    </wsp:Policy>
    <wsa:EndpointReference xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing">
      <wsa:ReferenceParameters/>
    </wsa:EndpointReference>
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="ZWappUpdateContractAddons">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ZWAPP_UPDATE_CONTRACT_ADDONS">
    <wsdl:port name="ZWAPP_UPDATE_CONTRACT_ADDONS" binding="tns:ZWAPP_UPDATE_CONTRACT_ADDONS">
      <soap:address location="https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_update_contract_addons/100/zwapp_update_contract_addons/zwapp_update_contract_addons"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_update_contract_addons/100/zwapp_update_contract_addons/zwapp_update_contract_addons</con:endpoint></con:endpoints><con:operation id="fd3efab2-f804-4c61-882a-fef441c21b9a" isOneWay="false" action="" name="ZWappUpdateContractAddons" bindingOperationName="ZWappUpdateContractAddons" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="93ec054c-24a4-4c46-b533-6ae8047ee3ce" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_update_contract_addons/100/zwapp_update_contract_addons/zwapp_update_contract_addons</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappUpdateContractAddons>
         <AddonId>FH</AddonId>
         <ContractAccount>300001357364</ContractAccount>
         <!--Optional:-->
         <Deactivate>?</Deactivate>
         <!--Optional:-->
         <Source>?</Source>
         <StartDate>2023-09-23</StartDate>
      </urn:ZWappUpdateContractAddons>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>webapp</con:username><con:password>asd234</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_UPDATE_CONTRACT_ADDONS/ZWappUpdateContractAddonsRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="21107094-4909-4cca-8941-137f27c553d2" wsaVersion="NONE" name="ZWAPP_GET_CA_FINANCIAL_DATA" type="wsdl" bindingName="{urn:sap-com:document:sap:soap:functions:mc-style}ZWAPP_GET_CA_FINANCIAL_DATA" soapVersion="1_1" anonymous="optional" definition="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D17E420B096F40E10080510A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D17E420B096F40E10080510A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100"><con:part><con:url>http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D17E420B096F40E10080510A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:n1="urn:sap-com:document:sap:rfc:functions">
  <wsdl:documentation>
    <sidl:sidl xmlns:sidl="http://www.sap.com/2007/03/sidl"/>
  </wsdl:documentation>
  <wsp:UsingPolicy wsdl:required="true"/>
  <wsp:Policy wsu:Id="BN_ZWAPP_GET_CA_FINANCIAL_DATA">
    <saptrnbnd:OptimizedXMLTransfer uri="http://xml.sap.com/2006/11/esi/esp/binxml" wsp:Optional="true" xmlns:saptrnbnd="http://www.sap.com/webas/710/soap/features/transportbinding/"/>
    <wsaw:UsingAddressing xmlns:wsaw="http://schemas.xmlsoap.org/ws/2004/08/addressing"/>
    <sapattahnd:Enabled xmlns:sapattahnd="http://www.sap.com/710/features/attachment/">false</sapattahnd:Enabled>
    <wsp:ExactlyOne xmlns:sapsp="http://www.sap.com/webas/630/soap/features/security/policy" xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/07/utility">
      <wsp:All>
        <sp:TransportBinding>
          <wsp:Policy>
            <sp:TransportToken>
              <wsp:Policy>
                <sp:HttpsToken>
                  <wsp:Policy>
                    <sp:HttpBasicAuthentication/>
                  </wsp:Policy>
                </sp:HttpsToken>
              </wsp:Policy>
            </sp:TransportToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:TripleDesRsa15/>
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Strict/>
              </wsp:Policy>
            </sp:Layout>
          </wsp:Policy>
        </sp:TransportBinding>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsp:Policy wsu:Id="IF_ZWAPP_GET_CA_FINANCIAL_DATA">
    <sapsession:Session xmlns:sapsession="http://www.sap.com/webas/630/soap/features/session/">
      <sapsession:enableSession>false</sapsession:enableSession>
    </sapsession:Session>
    <sapcentraladmin:CentralAdministration wsp:Optional="true" xmlns:sapcentraladmin="http://www.sap.com/webas/700/soap/features/CentralAdministration/">
      <sapcentraladmin:BusinessApplicationID>5A2E8A9B2DED2140E10080000A0B126E</sapcentraladmin:BusinessApplicationID>
    </sapcentraladmin:CentralAdministration>
  </wsp:Policy>
  <wsp:Policy wsu:Id="OP_ZWappGetCaFinancialData">
    <sapcomhnd:enableCommit xmlns:sapcomhnd="http://www.sap.com/NW05/soap/features/commit/">false</sapcomhnd:enableCommit>
    <sapblock:enableBlocking xmlns:sapblock="http://www.sap.com/NW05/soap/features/blocking/">true</sapblock:enableBlocking>
    <saptrhnw05:required xmlns:saptrhnw05="http://www.sap.com/NW05/soap/features/transaction/">no</saptrhnw05:required>
    <saprmnw05:enableWSRM xmlns:saprmnw05="http://www.sap.com/NW05/soap/features/wsrm/">false</saprmnw05:enableWSRM>
  </wsp:Policy>
  <wsdl:types>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:rfc:functions">
      <xsd:simpleType name="char10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char12">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="12"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char15">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="15"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char16">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="16"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char2">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="2"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char20">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char200">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="200"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char4">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="curr13.2">
        <xsd:restriction base="xsd:decimal">
          <xsd:totalDigits value="13"/>
          <xsd:fractionDigits value="2"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="date10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
          <xsd:pattern value="\d\d\d\d-\d\d-\d\d"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="decimal31.14">
        <xsd:restriction base="xsd:decimal">
          <xsd:totalDigits value="31"/>
          <xsd:fractionDigits value="14"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:n0="urn:sap-com:document:sap:rfc:functions">
      <xsd:import namespace="urn:sap-com:document:sap:rfc:functions"/>
      <xsd:simpleType name="char1">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char12">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="12"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char30">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="30"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="curr13.2">
        <xsd:restriction base="xsd:decimal">
          <xsd:totalDigits value="13"/>
          <xsd:fractionDigits value="2"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="date10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
          <xsd:pattern value="\d\d\d\d-\d\d-\d\d"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="numeric3">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="3"/>
          <xsd:pattern value="\d*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ZwappContrAccFiDataDeepS">
        <xsd:sequence>
          <xsd:element name="BusinessPartnerId" type="n0:char10"/>
          <xsd:element name="ContractAccount" type="n0:char12"/>
          <xsd:element name="ContractType" type="n0:char2"/>
          <xsd:element name="LegacyKey" type="n0:char20"/>
          <xsd:element name="Installation" type="n0:char10"/>
          <xsd:element name="QcAssignment" type="tns:char1"/>
          <xsd:element name="CaConsum" type="tns:ZwappCaConsumInfoSt"/>
          <xsd:element name="CaBill" type="tns:ZwappCaBillInfoSt"/>
          <xsd:element name="CaSettlement" type="tns:ZwappCaSettlementInfoSt"/>
          <xsd:element name="CaPayment" type="tns:ZwappCaPaymentInfoSt"/>
          <xsd:element name="OpenAmount" type="tns:curr13.2"/>
          <xsd:element name="OverdueAmount" type="tns:curr13.2"/>
          <xsd:element name="OpenAllSettleAmount" type="tns:curr13.2"/>
          <xsd:element name="OverdueSettleAmount" type="tns:curr13.2"/>
          <xsd:element name="PendingInstNo" type="tns:numeric3"/>
          <xsd:element name="TotalBalance" type="tns:curr13.2"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappCaConsumInfoS">
        <xsd:sequence>
          <xsd:element name="DocumentNumber" type="n0:char16"/>
          <xsd:element name="BillNo" type="tns:char12"/>
          <xsd:element name="IssueDate" type="n0:date10"/>
          <xsd:element name="ConsumDateFrom" type="n0:date10"/>
          <xsd:element name="ConsumDateTo" type="n0:date10"/>
          <xsd:element name="KwhDay" type="n0:decimal31.14"/>
          <xsd:element name="KwhNight" type="n0:decimal31.14"/>
          <xsd:element name="KwIsxis" type="n0:decimal31.14"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappCaBillInfoS">
        <xsd:sequence>
          <xsd:element name="BillNo" type="tns:char12"/>
          <xsd:element name="DocumentNumber" type="n0:char16"/>
          <xsd:element name="InvoiceType" type="n0:char15"/>
          <xsd:element name="InvTypeId" type="tns:char1"/>
          <xsd:element name="IssueDate" type="n0:date10"/>
          <xsd:element name="RegistrationDate" type="n0:date10"/>
          <xsd:element name="DueDate" type="n0:date10"/>
          <xsd:element name="TotalAmount" type="n0:curr13.2"/>
          <xsd:element name="UnpaidAmount" type="n0:curr13.2"/>
          <xsd:element name="OtherAmount1" type="n0:curr13.2"/>
          <xsd:element name="OtherAmount2" type="n0:curr13.2"/>
          <xsd:element name="OtherAmount3" type="n0:curr13.2"/>
          <xsd:element name="OtherAmount4" type="n0:curr13.2"/>
          <xsd:element name="OtherAmount5" type="n0:curr13.2"/>
          <xsd:element name="OtherAmount6" type="n0:curr13.2"/>
          <xsd:element name="InvoiceStatus" type="n0:char20"/>
          <xsd:element name="InvoiceStatusId" type="tns:char1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappCaSettlementInfoS">
        <xsd:sequence>
          <xsd:element name="InstPlanNo" type="tns:char12"/>
          <xsd:element name="CreationDate" type="tns:date10"/>
          <xsd:element name="StartDate" type="tns:date10"/>
          <xsd:element name="EndDate" type="tns:date10"/>
          <xsd:element name="InstAmount" type="tns:curr13.2"/>
          <xsd:element name="UnpaidInstAmount" type="tns:curr13.2"/>
          <xsd:element name="InstNumber" type="tns:numeric3"/>
          <xsd:element name="TotalInst" type="tns:numeric3"/>
          <xsd:element name="InstNumberDesc" type="n0:char20"/>
          <xsd:element name="InstStatus" type="n0:char20"/>
          <xsd:element name="InstStatusId" type="tns:char1"/>
          <xsd:element name="InstDueDate" type="n0:date10"/>
          <xsd:element name="SettlStatus" type="n0:char20"/>
          <xsd:element name="SettlStatusId" type="tns:char1"/>
          <xsd:element name="DeactivInd" type="tns:char1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappCaPaymentInfoS">
        <xsd:sequence>
          <xsd:element name="PaymDoc" type="tns:char12"/>
          <xsd:element name="PaymentDate" type="tns:date10"/>
          <xsd:element name="PaymentAmount" type="tns:curr13.2"/>
          <xsd:element name="CollectionChannel" type="tns:char30"/>
          <xsd:element name="RevPaymDoc" type="tns:char12"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappCaConsumInfoSt">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwappCaConsumInfoS" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappCaBillInfoSt">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwappCaBillInfoS" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappCaSettlementInfoSt">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwappCaSettlementInfoS" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappCaPaymentInfoSt">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwappCaPaymentInfoS" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ZWappGetCaFinancialData">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="ContractAccount" type="n0:char12"/>
            <xsd:element name="Entries" type="tns:numeric3" minOccurs="0"/>
            <xsd:element name="FromDate" type="tns:date10" minOccurs="0"/>
            <xsd:element name="Page" type="tns:numeric3" minOccurs="0"/>
            <xsd:element name="Source" type="n0:char20" minOccurs="0"/>
            <xsd:element name="ToDate" type="tns:date10" minOccurs="0"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ZWappGetCaFinancialDataResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="CaFinancialData" type="tns:ZwappContrAccFiDataDeepS"/>
            <xsd:element name="ResultCode" type="n0:char4"/>
            <xsd:element name="ResultMessage" type="n0:char200"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ZWappGetCaFinancialData">
    <wsdl:part name="parameters" element="tns:ZWappGetCaFinancialData"/>
  </wsdl:message>
  <wsdl:message name="ZWappGetCaFinancialDataResponse">
    <wsdl:part name="parameter" element="tns:ZWappGetCaFinancialDataResponse"/>
  </wsdl:message>
  <wsdl:portType name="ZWAPP_GET_CA_FINANCIAL_DATA">
    <wsp:Policy>
      <wsp:PolicyReference URI="#IF_ZWAPP_GET_CA_FINANCIAL_DATA"/>
    </wsp:Policy>
    <wsdl:operation name="ZWappGetCaFinancialData">
      <wsp:Policy>
        <wsp:PolicyReference URI="#OP_ZWappGetCaFinancialData"/>
      </wsp:Policy>
      <wsdl:input message="tns:ZWappGetCaFinancialData"/>
      <wsdl:output message="tns:ZWappGetCaFinancialDataResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ZWAPP_GET_CA_FINANCIAL_DATA" type="tns:ZWAPP_GET_CA_FINANCIAL_DATA">
    <wsp:Policy>
      <wsp:PolicyReference URI="#BN_ZWAPP_GET_CA_FINANCIAL_DATA"/>
    </wsp:Policy>
    <wsa:EndpointReference xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing">
      <wsa:ReferenceParameters/>
    </wsa:EndpointReference>
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="ZWappGetCaFinancialData">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ZWAPP_GET_CA_FINANCIAL_DATA">
    <wsdl:port name="ZWAPP_GET_CA_FINANCIAL_DATA" binding="tns:ZWAPP_GET_CA_FINANCIAL_DATA">
      <soap:address location="https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint></con:endpoints><con:operation id="b1139b0c-a454-4da2-8f13-c932af4f7e5d" isOneWay="false" action="" name="ZWappGetCaFinancialData" bindingOperationName="ZWappGetCaFinancialData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="c2e586d6-cc2b-4f30-bb33-ec0a88b1f6e3" name="Request 1 - AU"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>300001411236</ContractAccount>
         <!--Optional:-->
         <Entries/>
         <!--Optional:-->
         <FromDate>?</FromDate>
         <!--Optional:-->
         <Page/>
         <!--Optional:-->
         <Source>?</Source>
         <!--Optional:-->
         <ToDate>?</ToDate>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="67a47094-ea35-49de-a269-9407b8843f38" name="Dispatcher 1 - AU"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>300001411236</ContractAccount>
         <!--Optional:-->
         <Entries>1</Entries>
         <!--Optional:-->
         <FromDate></FromDate>
         <!--Optional:-->
         <Page>1</Page>
         <!--Optional:-->
         <Source></Source>
         <!--Optional:-->
         <ToDate></ToDate>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="a8cde295-f5c2-4148-96bc-904b5846dc3e" name="Dispatcher 2 - Pelataki Pollaplou"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>300000001968</ContractAccount>
         <!--Optional:-->
         <Entries>1</Entries>
         <!--Optional:-->
         <FromDate></FromDate>
         <!--Optional:-->
         <Page>1</Page>
         <!--Optional:-->
         <Source/>
         <!--Optional:-->
         <ToDate></ToDate>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="7c74d077-6c21-48a8-ae6b-f68f4e9fb529" name="Dispatcher 3 - Normal (CA Status 14)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>300002164681</ContractAccount>
         <!--Optional:-->
         <Entries/>
         <!--Optional:-->
         <FromDate></FromDate>
         <!--Optional:-->
         <Page/>
         <!--Optional:-->
         <Source></Source>
         <!--Optional:-->
         <ToDate></ToDate>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="f3a9426f-870b-45c8-ae0a-e85aaf8bbc8a" name="Dispatcher 4 - Pollaplos (Good)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>1000001470</ContractAccount>
         <!--Optional:-->
         <Entries/>
         <!--Optional:-->
         <FromDate></FromDate>
         <!--Optional:-->
         <Page/>
         <!--Optional:-->
         <Source></Source>
         <!--Optional:-->
         <ToDate></ToDate>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="ae67e4f0-dbe9-4e9f-8f4a-f3a90343b418" name="Dispatcher 5 - Pollaplos Child (Good)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>300013206964</ContractAccount>
         <!--Optional:-->
         <Entries/>
         <!--Optional:-->
         <FromDate></FromDate>
         <!--Optional:-->
         <Page/>
         <!--Optional:-->
         <Source></Source>
         <!--Optional:-->
         <ToDate></ToDate>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="9c666dea-9537-4e15-9a7b-8c8435bcba68" name="Copy of Dispatcher 5 - Pollaplos Child (Good)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>3000132</ContractAccount>
         <!--Optional:-->
         <Entries/>
         <!--Optional:-->
         <FromDate></FromDate>
         <!--Optional:-->
         <Page/>
         <!--Optional:-->
         <Source></Source>
         <!--Optional:-->
         <ToDate></ToDate>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="88739163-5108-4518-b9fb-83b390c84ae9" name="Dispatcher 6 - Pollaplos Child (Good) 2"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>300008135628</ContractAccount>
         <!--Optional:-->
         <Entries/>
         <!--Optional:-->
         <FromDate></FromDate>
         <!--Optional:-->
         <Page/>
         <!--Optional:-->
         <Source></Source>
         <!--Optional:-->
         <ToDate></ToDate>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="47cfc867-07dd-449e-bad1-e2777f3e69a1" name="Copy of Dispatcher 4 - Pollaplos (Good)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>1000001470</ContractAccount>
         <!--Optional:-->
         <Entries/>
         <!--Optional:-->
         <FromDate></FromDate>
         <!--Optional:-->
         <Page/>
         <!--Optional:-->
         <Source></Source>
         <!--Optional:-->
         <ToDate></ToDate>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="df7b867c-4e13-4692-872a-683f2db0abf7" name="Copy of Copy of Dispatcher 4 - Pollaplos (Good)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>1000001470</ContractAccount>
         <!--Optional:-->
         <Entries>1</Entries>
         <!--Optional:-->
         <FromDate></FromDate>
         <!--Optional:-->
         <Page>1</Page>
         <!--Optional:-->
         <Source></Source>
         <!--Optional:-->
         <ToDate></ToDate>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="3beb87c5-706b-42bb-bdd1-6dd6e1d4dba3" name="Copy of Copy of Dispatcher 5 - Pollaplos Child (Good)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>1000000474</ContractAccount>
         <!--Optional:-->
         <Entries/>
         <!--Optional:-->
         <FromDate></FromDate>
         <!--Optional:-->
         <Page/>
         <!--Optional:-->
         <Source></Source>
         <!--Optional:-->
         <ToDate></ToDate>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="986fb1f0-c223-454a-9b95-02ec21566972" name="Azure Dispatcher 3 - Normal (CA Status 14)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>300000032013</ContractAccount>
         <!--Optional:-->
         <Entries/>
         <!--Optional:-->
         <FromDate></FromDate>
         <!--Optional:-->
         <Page/>
         <!--Optional:-->
         <Source></Source>
         <!--Optional:-->
         <ToDate></ToDate>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="8af2da21-160b-42c8-97bd-11a249fdd547" name="Copy of Azure Dispatcher 3 - Normal (CA Status 14)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>300003505228</ContractAccount>
         <!--Optional:-->
         <Entries>10</Entries>
         <!--Optional:-->
         <FromDate></FromDate>
         <!--Optional:-->
         <Page>1</Page>
         <!--Optional:-->
         <Source></Source>
         <!--Optional:-->
         <ToDate></ToDate>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="dad5823e-bca0-4aa8-8b63-201200741e4b" name="Copy of Azure Dispatcher 3 - Normal (CA Status 14)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>300002020871</ContractAccount>
         <!--Optional:-->
         <Entries/>
         <!--Optional:-->
         <FromDate></FromDate>
         <!--Optional:-->
         <Page/>
         <!--Optional:-->
         <Source></Source>
         <!--Optional:-->
         <ToDate></ToDate>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="9c572242-275f-4b1b-aaaf-4b2ea079aa3d" name="Copy of Copy of Azure Dispatcher 3 - Normal (CA Status 14)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>300008866197</ContractAccount>
         <!--Optional:-->
         <Entries/>
         <!--Optional:-->
         <FromDate></FromDate>
         <!--Optional:-->
         <Page/>
         <!--Optional:-->
         <Source></Source>
         <!--Optional:-->
         <ToDate></ToDate>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="99dc8154-4647-4faf-bf65-91fe43096108" name="Copy of Copy of Copy of Azure Dispatcher 3 - Normal (CA Status 14)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>300013245465</ContractAccount>
         <!--Optional:-->
         <Entries/>
         <!--Optional:-->
         <FromDate></FromDate>
         <!--Optional:-->
         <Page/>
         <!--Optional:-->
         <Source></Source>
         <!--Optional:-->
         <ToDate></ToDate>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="623c42fb-3c5d-4ef1-815b-7762268c9c07" name="DR_GETCAFINANCIALDATA"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>300001578816</ContractAccount>
         <!--Optional:-->
         <Entries/>
         <!--Optional:-->
         <FromDate></FromDate>
         <!--Optional:-->
         <Page/>
         <!--Optional:-->
         <Source></Source>
         <!--Optional:-->
         <ToDate></ToDate>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="016059d2-9b2a-4dc2-8ba6-9e663bad9b2e" wsaVersion="NONE" name="ZWAPP_GET_METERGIN_DATA" type="wsdl" bindingName="{urn:sap-com:document:sap:soap:functions:mc-style}ZWAPP_GET_METERGIN_DATA" soapVersion="1_1" anonymous="optional" definition="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D115A30B0989C0E10080590A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D115A30B0989C0E10080590A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100"><con:part><con:url>http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D115A30B0989C0E10080590A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:n1="urn:sap-com:document:sap:rfc:functions">
  <wsdl:documentation>
    <sidl:sidl xmlns:sidl="http://www.sap.com/2007/03/sidl"/>
  </wsdl:documentation>
  <wsp:UsingPolicy wsdl:required="true"/>
  <wsp:Policy wsu:Id="BN_ZWAPP_GET_METERGIN_DATA">
    <saptrnbnd:OptimizedXMLTransfer uri="http://xml.sap.com/2006/11/esi/esp/binxml" wsp:Optional="true" xmlns:saptrnbnd="http://www.sap.com/webas/710/soap/features/transportbinding/"/>
    <wsaw:UsingAddressing xmlns:wsaw="http://schemas.xmlsoap.org/ws/2004/08/addressing"/>
    <sapattahnd:Enabled xmlns:sapattahnd="http://www.sap.com/710/features/attachment/">false</sapattahnd:Enabled>
    <wsp:ExactlyOne xmlns:sapsp="http://www.sap.com/webas/630/soap/features/security/policy" xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/07/utility">
      <wsp:All>
        <sp:TransportBinding>
          <wsp:Policy>
            <sp:TransportToken>
              <wsp:Policy>
                <sp:HttpsToken>
                  <wsp:Policy>
                    <sp:HttpBasicAuthentication/>
                  </wsp:Policy>
                </sp:HttpsToken>
              </wsp:Policy>
            </sp:TransportToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:TripleDesRsa15/>
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Strict/>
              </wsp:Policy>
            </sp:Layout>
          </wsp:Policy>
        </sp:TransportBinding>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsp:Policy wsu:Id="IF_ZWAPP_GET_METERGIN_DATA">
    <sapsession:Session xmlns:sapsession="http://www.sap.com/webas/630/soap/features/session/">
      <sapsession:enableSession>false</sapsession:enableSession>
    </sapsession:Session>
    <sapcentraladmin:CentralAdministration wsp:Optional="true" xmlns:sapcentraladmin="http://www.sap.com/webas/700/soap/features/CentralAdministration/">
      <sapcentraladmin:BusinessApplicationID>5A2E8A9B2DED2140E10080000A0B126E</sapcentraladmin:BusinessApplicationID>
    </sapcentraladmin:CentralAdministration>
  </wsp:Policy>
  <wsp:Policy wsu:Id="OP_ZWappGetMeterginData">
    <sapcomhnd:enableCommit xmlns:sapcomhnd="http://www.sap.com/NW05/soap/features/commit/">false</sapcomhnd:enableCommit>
    <sapblock:enableBlocking xmlns:sapblock="http://www.sap.com/NW05/soap/features/blocking/">true</sapblock:enableBlocking>
    <saptrhnw05:required xmlns:saptrhnw05="http://www.sap.com/NW05/soap/features/transaction/">no</saptrhnw05:required>
    <saprmnw05:enableWSRM xmlns:saprmnw05="http://www.sap.com/NW05/soap/features/wsrm/">false</saprmnw05:enableWSRM>
  </wsp:Policy>
  <wsdl:types>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:rfc:functions">
      <xsd:simpleType name="char1">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char12">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="12"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char18">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="18"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char2">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="2"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char20">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char200">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="200"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char4">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char8">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="8"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="date10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
          <xsd:pattern value="\d\d\d\d-\d\d-\d\d"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="numeric2">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="2"/>
          <xsd:pattern value="\d*"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:n0="urn:sap-com:document:sap:rfc:functions">
      <xsd:import namespace="urn:sap-com:document:sap:rfc:functions"/>
      <xsd:simpleType name="char1">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char15">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="15"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char2">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="2"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char40">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="40"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="decimal17.0">
        <xsd:restriction base="xsd:decimal">
          <xsd:totalDigits value="17"/>
          <xsd:fractionDigits value="0"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="decimal25.14">
        <xsd:restriction base="xsd:decimal">
          <xsd:totalDigits value="25"/>
          <xsd:fractionDigits value="14"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="numeric2">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="2"/>
          <xsd:pattern value="\d*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ZwappCaMeterginDataDeepS">
        <xsd:sequence>
          <xsd:element name="Installation" type="n0:char10"/>
          <xsd:element name="Pod" type="n0:char20"/>
          <xsd:element name="LegacyKey" type="n0:char20"/>
          <xsd:element name="ContractAccount" type="n0:char12"/>
          <xsd:element name="Contract" type="n0:char10"/>
          <xsd:element name="ContractType" type="n0:char2"/>
          <xsd:element name="SerialNo" type="n0:char18"/>
          <xsd:element name="Mru" type="n0:char8"/>
          <xsd:element name="SchdlMrDate" type="n0:date10"/>
          <xsd:element name="IvrDateOpen" type="n0:date10"/>
          <xsd:element name="IvrDateClose" type="n0:date10"/>
          <xsd:element name="RegisterTypeDay" type="n0:char1"/>
          <xsd:element name="RegisterTypeNight" type="n0:char1"/>
          <xsd:element name="CaMrResult" type="tns:ZwappCaMrResultSt"/>
          <xsd:element name="LimitMrDay" type="tns:decimal17.0"/>
          <xsd:element name="LimitMrNight" type="tns:decimal17.0"/>
          <xsd:element name="Sms" type="n0:char1"/>
          <xsd:element name="Email" type="n0:char1"/>
          <xsd:element name="PredecimalPlacesDay" type="n0:numeric2"/>
          <xsd:element name="PredecimalPlacesNight" type="n0:numeric2"/>
          <xsd:element name="NextMrDateOpen" type="n0:date10"/>
          <xsd:element name="NextMrDateClose" type="n0:date10"/>
          <xsd:element name="CaSelfMtrngResult" type="tns:ZwappCaSelfMeterResultSt"/>
          <xsd:element name="LastMrDate" type="n0:date10"/>
          <xsd:element name="LastMrDay" type="tns:decimal25.14"/>
          <xsd:element name="LastMrNight" type="tns:decimal25.14"/>
          <xsd:element name="LastInvTypeId" type="tns:char1"/>
          <xsd:element name="LastInvTypeDesc" type="tns:char15"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappCaMrResultS">
        <xsd:sequence>
          <xsd:element name="SerialNo" type="n0:char18"/>
          <xsd:element name="RegisterType" type="tns:char2"/>
          <xsd:element name="MrDayResult" type="tns:decimal25.14"/>
          <xsd:element name="MrNightResult" type="tns:decimal25.14"/>
          <xsd:element name="MrDayType" type="n0:char2"/>
          <xsd:element name="MrDayTypeDesc" type="tns:char40"/>
          <xsd:element name="MrNightType" type="n0:char2"/>
          <xsd:element name="MrNightTypeDesc" type="tns:char40"/>
          <xsd:element name="MrDate" type="n0:date10"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappCaSelfMeterResultS">
        <xsd:sequence>
          <xsd:element name="CmrDayResult" type="tns:decimal17.0"/>
          <xsd:element name="CmrNightResult" type="tns:decimal17.0"/>
          <xsd:element name="CmrDate" type="n0:date10"/>
          <xsd:element name="CmrStatus" type="n0:numeric2"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappCaMrResultSt">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwappCaMrResultS" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappCaSelfMeterResultSt">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwappCaSelfMeterResultS" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ZWappGetMeterginData">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="ContractAccount" type="n0:char12"/>
            <xsd:element name="MrYears" type="tns:numeric2" minOccurs="0"/>
            <xsd:element name="PCmrChecks" type="tns:char1" minOccurs="0"/>
            <xsd:element name="Source" type="n0:char20" minOccurs="0"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ZWappGetMeterginDataResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="CaMeterginData" type="tns:ZwappCaMeterginDataDeepS"/>
            <xsd:element name="ResultCode" type="n0:char4"/>
            <xsd:element name="ResultMessage" type="n0:char200"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ZWappGetMeterginData">
    <wsdl:part name="parameters" element="tns:ZWappGetMeterginData"/>
  </wsdl:message>
  <wsdl:message name="ZWappGetMeterginDataResponse">
    <wsdl:part name="parameter" element="tns:ZWappGetMeterginDataResponse"/>
  </wsdl:message>
  <wsdl:portType name="ZWAPP_GET_METERGIN_DATA">
    <wsp:Policy>
      <wsp:PolicyReference URI="#IF_ZWAPP_GET_METERGIN_DATA"/>
    </wsp:Policy>
    <wsdl:operation name="ZWappGetMeterginData">
      <wsp:Policy>
        <wsp:PolicyReference URI="#OP_ZWappGetMeterginData"/>
      </wsp:Policy>
      <wsdl:input message="tns:ZWappGetMeterginData"/>
      <wsdl:output message="tns:ZWappGetMeterginDataResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ZWAPP_GET_METERGIN_DATA" type="tns:ZWAPP_GET_METERGIN_DATA">
    <wsp:Policy>
      <wsp:PolicyReference URI="#BN_ZWAPP_GET_METERGIN_DATA"/>
    </wsp:Policy>
    <wsa:EndpointReference xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing">
      <wsa:ReferenceParameters/>
    </wsa:EndpointReference>
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="ZWappGetMeterginData">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ZWAPP_GET_METERGIN_DATA">
    <wsdl:port name="ZWAPP_GET_METERGIN_DATA" binding="tns:ZWAPP_GET_METERGIN_DATA">
      <soap:address location="https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_metergin_data/100/zwapp_get_metergin_data/zwapp_get_metergin_data"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_metergin_data/100/zwapp_get_metergin_data/zwapp_get_metergin_data</con:endpoint></con:endpoints><con:operation id="0255d41b-5052-4a11-b9ec-b63bba714a44" isOneWay="false" action="" name="ZWappGetMeterginData" bindingOperationName="ZWappGetMeterginData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ac8a656c-d9ab-433c-b59c-3ea0b39ae0a7" name="Request 1 - Light"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_metergin_data/100/zwapp_get_metergin_data/zwapp_get_metergin_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetMeterginData>\r
         <ContractAccount>300002164681</ContractAccount>\r
         <!--Optional:-->\r
         <MrYears>10</MrYears>\r
         <!--Optional:-->\r
         <PCmrChecks></PCmrChecks>\r
         <!--Optional:-->\r
         <Source></Source>\r
      </urn:ZWappGetMeterginData>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_METERGIN_DATA/ZWappGetMeterginDataRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="d3f48915-f694-42ff-82fc-a3c4e7628c81" name="Request 2 - Hvy"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_metergin_data/100/zwapp_get_metergin_data/zwapp_get_metergin_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetMeterginData>\r
         <ContractAccount>300000036254</ContractAccount>\r
         <!--Optional:-->\r
         <MrYears>10</MrYears>\r
         <!--Optional:-->\r
         <PCmrChecks>X</PCmrChecks>\r
         <!--Optional:-->\r
         <Source></Source>\r
      </urn:ZWappGetMeterginData>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_METERGIN_DATA/ZWappGetMeterginDataRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="89bb920e-3dbb-4203-b8ae-b9633586c6ce" name="Dispatcher 2 - Hvy"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_metergin_data/100/zwapp_get_metergin_data/zwapp_get_metergin_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetMeterginData>\r
         <ContractAccount>300000036254</ContractAccount>\r
         <!--Optional:-->\r
         <MrYears>10</MrYears>\r
         <!--Optional:-->\r
         <PCmrChecks>X</PCmrChecks>\r
         <!--Optional:-->\r
         <Source></Source>\r
      </urn:ZWappGetMeterginData>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_METERGIN_DATA/ZWappGetMeterginDataRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="9f85079d-0755-431e-ad84-219932e079b1" name="Dispatcher 1 - Light"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_metergin_data/100/zwapp_get_metergin_data/zwapp_get_metergin_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetMeterginData>\r
         <ContractAccount>300002164681</ContractAccount>\r
         <!--Optional:-->\r
         <MrYears>10</MrYears>\r
         <!--Optional:-->\r
         <PCmrChecks></PCmrChecks>\r
         <!--Optional:-->\r
         <Source></Source>\r
      </urn:ZWappGetMeterginData>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_METERGIN_DATA/ZWappGetMeterginDataRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="76715faa-ac1a-467d-9241-03fce758bfe0" name="Dispatcher 3 - Pollaplos (Good)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_metergin_data/100/zwapp_get_metergin_data/zwapp_get_metergin_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetMeterginData>\r
         <ContractAccount>1000001470</ContractAccount>\r
         <!--Optional:-->\r
         <MrYears>10</MrYears>\r
         <!--Optional:-->\r
         <PCmrChecks>X</PCmrChecks>\r
         <!--Optional:-->\r
         <Source></Source>\r
      </urn:ZWappGetMeterginData>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_METERGIN_DATA/ZWappGetMeterginDataRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="73f5f9c7-6f14-4f32-82d8-815bc669725e" name="Dispatcher 4 - Pollaplos Child (Good)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_metergin_data/100/zwapp_get_metergin_data/zwapp_get_metergin_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetMeterginData>\r
         <ContractAccount>300013206964</ContractAccount>\r
         <!--Optional:-->\r
         <MrYears>10</MrYears>\r
         <!--Optional:-->\r
         <PCmrChecks>X</PCmrChecks>\r
         <!--Optional:-->\r
         <Source></Source>\r
      </urn:ZWappGetMeterginData>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_METERGIN_DATA/ZWappGetMeterginDataRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="aac41357-00a4-4adb-9d4d-dc54717814ec" name="DR_0910_GET_METERING_DATA"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_get_metergin_data/100/zwapp_get_metergin_data/zwapp_get_metergin_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetMeterginData>\r
         <ContractAccount>300002164681</ContractAccount>\r
         <!--Optional:-->\r
         <MrYears>10</MrYears>\r
         <!--Optional:-->\r
         <PCmrChecks></PCmrChecks>\r
         <!--Optional:-->\r
         <Source></Source>\r
      </urn:ZWappGetMeterginData>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_METERGIN_DATA/ZWappGetMeterginDataRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="d9f1ac1d-e45d-4133-aba7-95fcb0fe1216" name="Copy of DR_0910_GET_METERING_DATA"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_get_metergin_data/100/zwapp_get_metergin_data/zwapp_get_metergin_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetMeterginData>\r
         <ContractAccount>300001578816</ContractAccount>\r
         <!--Optional:-->\r
         <MrYears>10</MrYears>\r
         <!--Optional:-->\r
         <PCmrChecks></PCmrChecks>\r
         <!--Optional:-->\r
         <Source></Source>\r
      </urn:ZWappGetMeterginData>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_METERGIN_DATA/ZWappGetMeterginDataRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="1e0cbbef-50c6-42eb-ac22-0d5136819746" wsaVersion="NONE" name="ZWAPP_GET_POD_INFO" type="wsdl" bindingName="{urn:sap-com:document:sap:soap:functions:mc-style}ZWAPP_GET_POD_INFO" soapVersion="1_1" anonymous="optional" definition="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D116DD0B0989C0E10080590A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D116DD0B0989C0E10080590A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100"><con:part><con:url>http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D116DD0B0989C0E10080590A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:n1="urn:sap-com:document:sap:rfc:functions">
  <wsdl:documentation>
    <sidl:sidl xmlns:sidl="http://www.sap.com/2007/03/sidl"/>
  </wsdl:documentation>
  <wsp:UsingPolicy wsdl:required="true"/>
  <wsp:Policy wsu:Id="BN_ZWAPP_GET_POD_INFO">
    <saptrnbnd:OptimizedXMLTransfer uri="http://xml.sap.com/2006/11/esi/esp/binxml" wsp:Optional="true" xmlns:saptrnbnd="http://www.sap.com/webas/710/soap/features/transportbinding/"/>
    <wsaw:UsingAddressing xmlns:wsaw="http://schemas.xmlsoap.org/ws/2004/08/addressing"/>
    <sapattahnd:Enabled xmlns:sapattahnd="http://www.sap.com/710/features/attachment/">false</sapattahnd:Enabled>
    <wsp:ExactlyOne xmlns:sapsp="http://www.sap.com/webas/630/soap/features/security/policy" xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/07/utility">
      <wsp:All>
        <sp:TransportBinding>
          <wsp:Policy>
            <sp:TransportToken>
              <wsp:Policy>
                <sp:HttpsToken>
                  <wsp:Policy>
                    <sp:HttpBasicAuthentication/>
                  </wsp:Policy>
                </sp:HttpsToken>
              </wsp:Policy>
            </sp:TransportToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:TripleDesRsa15/>
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Strict/>
              </wsp:Policy>
            </sp:Layout>
          </wsp:Policy>
        </sp:TransportBinding>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsp:Policy wsu:Id="IF_ZWAPP_GET_POD_INFO">
    <sapsession:Session xmlns:sapsession="http://www.sap.com/webas/630/soap/features/session/">
      <sapsession:enableSession>false</sapsession:enableSession>
    </sapsession:Session>
    <sapcentraladmin:CentralAdministration wsp:Optional="true" xmlns:sapcentraladmin="http://www.sap.com/webas/700/soap/features/CentralAdministration/">
      <sapcentraladmin:BusinessApplicationID>5A2E8A9B2DED2140E10080000A0B126E</sapcentraladmin:BusinessApplicationID>
    </sapcentraladmin:CentralAdministration>
  </wsp:Policy>
  <wsp:Policy wsu:Id="OP_ZWappGetPodInfo">
    <sapcomhnd:enableCommit xmlns:sapcomhnd="http://www.sap.com/NW05/soap/features/commit/">false</sapcomhnd:enableCommit>
    <sapblock:enableBlocking xmlns:sapblock="http://www.sap.com/NW05/soap/features/blocking/">true</sapblock:enableBlocking>
    <saptrhnw05:required xmlns:saptrhnw05="http://www.sap.com/NW05/soap/features/transaction/">no</saptrhnw05:required>
    <saprmnw05:enableWSRM xmlns:saprmnw05="http://www.sap.com/NW05/soap/features/wsrm/">false</saprmnw05:enableWSRM>
  </wsp:Policy>
  <wsdl:types>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:rfc:functions">
      <xsd:simpleType name="char10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char12">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="12"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char2">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="2"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char20">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char4">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char70">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="70"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char8">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="8"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="date10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
          <xsd:pattern value="\d\d\d\d-\d\d-\d\d"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:n0="urn:sap-com:document:sap:rfc:functions">
      <xsd:import namespace="urn:sap-com:document:sap:rfc:functions"/>
      <xsd:simpleType name="char1">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char2">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="2"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char30">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="30"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char4">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char5">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="5"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ZwappPodInfo">
        <xsd:sequence>
          <xsd:element name="Installation" type="n0:char10"/>
          <xsd:element name="InstallationType" type="tns:char4"/>
          <xsd:element name="InstallationDescription" type="tns:char30"/>
          <xsd:element name="EpipedoTasis" type="n0:char4"/>
          <xsd:element name="Mru" type="n0:char8"/>
          <xsd:element name="Grid" type="n0:char10"/>
          <xsd:element name="PodInfoCa" type="tns:ZwappPodInfoCaT"/>
          <xsd:element name="PkyCategory" type="tns:char10"/>
          <xsd:element name="Branche" type="tns:char10"/>
          <xsd:element name="Status" type="tns:char2"/>
          <xsd:element name="RegisterTypeDay" type="tns:char1"/>
          <xsd:element name="RegisterTypeNight" type="tns:char1"/>
          <xsd:element name="TyposMetriti" type="tns:char5"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappPodInfoCa">
        <xsd:sequence>
          <xsd:element name="ContractAccount" type="n0:char12"/>
          <xsd:element name="ContractType" type="n0:char2"/>
          <xsd:element name="Contract" type="n0:char10"/>
          <xsd:element name="LegacyKey" type="n0:char20"/>
          <xsd:element name="MoveinDate" type="n0:date10"/>
          <xsd:element name="MoveoutDate" type="n0:date10"/>
          <xsd:element name="RegisterTypeDay" type="tns:char1"/>
          <xsd:element name="RegisterTypeNight" type="tns:char1"/>
          <xsd:element name="TyposMetriti" type="tns:char5"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappPodInfoCaT">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwappPodInfoCa" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ZWappGetPodInfo">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Pod" type="n0:char20"/>
            <xsd:element name="Source" type="n0:char20" minOccurs="0"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ZWappGetPodInfoResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="PodInfo" type="tns:ZwappPodInfo"/>
            <xsd:element name="ResultCode" type="n0:char4"/>
            <xsd:element name="ResultMessage" type="n0:char70"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ZWappGetPodInfo">
    <wsdl:part name="parameters" element="tns:ZWappGetPodInfo"/>
  </wsdl:message>
  <wsdl:message name="ZWappGetPodInfoResponse">
    <wsdl:part name="parameter" element="tns:ZWappGetPodInfoResponse"/>
  </wsdl:message>
  <wsdl:portType name="ZWAPP_GET_POD_INFO">
    <wsp:Policy>
      <wsp:PolicyReference URI="#IF_ZWAPP_GET_POD_INFO"/>
    </wsp:Policy>
    <wsdl:operation name="ZWappGetPodInfo">
      <wsp:Policy>
        <wsp:PolicyReference URI="#OP_ZWappGetPodInfo"/>
      </wsp:Policy>
      <wsdl:input message="tns:ZWappGetPodInfo"/>
      <wsdl:output message="tns:ZWappGetPodInfoResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ZWAPP_GET_POD_INFO" type="tns:ZWAPP_GET_POD_INFO">
    <wsp:Policy>
      <wsp:PolicyReference URI="#BN_ZWAPP_GET_POD_INFO"/>
    </wsp:Policy>
    <wsa:EndpointReference xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing">
      <wsa:ReferenceParameters/>
    </wsa:EndpointReference>
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="ZWappGetPodInfo">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ZWAPP_GET_POD_INFO">
    <wsdl:port name="ZWAPP_GET_POD_INFO" binding="tns:ZWAPP_GET_POD_INFO">
      <soap:address location="https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_pod_info/100/zwapp_get_pod_info/zwapp_get_pod_info"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_pod_info/100/zwapp_get_pod_info/zwapp_get_pod_info</con:endpoint></con:endpoints><con:operation id="d45892a6-8e89-4049-b1d7-1ed48195a177" isOneWay="false" action="" name="ZWappGetPodInfo" bindingOperationName="ZWappGetPodInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="169571d1-411c-4385-a5cf-e850d855a368" name="Request 1 - No Debt"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_pod_info/100/zwapp_get_pod_info/zwapp_get_pod_info</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetPodInfo>\r
         <Pod>935536104011</Pod>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetPodInfo>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POD_INFO/ZWappGetPodInfoRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="1360a71d-e3f6-43d9-b0e6-926284351824" name="Request 2 - Debt"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_pod_info/100/zwapp_get_pod_info/zwapp_get_pod_info</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetPodInfo>\r
         <Pod>221502650024</Pod>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetPodInfo>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POD_INFO/ZWappGetPodInfoRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="22af25f6-341c-4112-b38a-3397246afed9" name="Dispatcher 1 - No Debt"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_pod_info/100/zwapp_get_pod_info/zwapp_get_pod_info</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetPodInfo>\r
         <Pod>935536104011</Pod>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetPodInfo>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POD_INFO/ZWappGetPodInfoRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="3af5000c-4b55-45bd-9ef8-a41899d3f299" name="Dispatcher 2 - Debt"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_pod_info/100/zwapp_get_pod_info/zwapp_get_pod_info</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetPodInfo>\r
         <Pod>221502650024</Pod>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetPodInfo>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POD_INFO/ZWappGetPodInfoRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="7bb02b05-adbe-4284-857f-b9d33136a787" name="Dispatcher 3 - Pollaplos (Good)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_pod_info/100/zwapp_get_pod_info/zwapp_get_pod_info</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetPodInfo>\r
         <Pod>221502650024</Pod>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetPodInfo>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POD_INFO/ZWappGetPodInfoRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="1c4e3999-c560-4d57-8fad-3bcfe4114dd1" name="Dispatcher 4 - Pollaplos Child (Good)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_pod_info/100/zwapp_get_pod_info/zwapp_get_pod_info</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetPodInfo>\r
         <Pod>33056196101</Pod>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetPodInfo>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POD_INFO/ZWappGetPodInfoRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="04264182-6c51-4575-8303-09998d356135" name="Copy of Dispatcher 1 - LINAKIS USER"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_pod_info/100/zwapp_get_pod_info/zwapp_get_pod_info</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetPodInfo>\r
         <Pod>935536104011</Pod>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetPodInfo>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WA_F_V1</con:username><con:password>Ppcw3bf0rms!</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POD_INFO/ZWappGetPodInfoRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="08430134-4ef6-4061-94ec-a02d2d160a3e" name="Copy of Copy of Dispatcher 1 - LINAKIS USER"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_get_pod_info/100/zwapp_get_pod_info/zwapp_get_pod_info</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetPodInfo>\r
         <Pod>107108569</Pod>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetPodInfo>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>EC_WS_V1</con:username><con:password>Ppcec0ntr!1</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POD_INFO/ZWappGetPodInfoRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="657ad006-718e-416a-bbd2-d2b099ece8e0" name="DR_0910_GET_POD_INFO"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_get_pod_info/100/zwapp_get_pod_info/zwapp_get_pod_info</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetPodInfo>\r
         <Pod>935536104011</Pod>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetPodInfo>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>EC_WS_V1</con:username><con:password>Ppcec0ntr!1</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POD_INFO/ZWappGetPodInfoRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="634c4b86-9dbb-40fe-a257-a7d94647c3c7" wsaVersion="NONE" name="ZWAPP_GET_POD_FINANCIAL_DATA" type="wsdl" bindingName="{urn:sap-com:document:sap:soap:functions:mc-style}ZWAPP_GET_POD_FINANCIAL_DATA" soapVersion="1_1" anonymous="optional" definition="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D116550B0989C0E10080590A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D116550B0989C0E10080590A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100"><con:part><con:url>http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D116550B0989C0E10080590A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:n1="urn:sap-com:document:sap:rfc:functions">
  <wsdl:documentation>
    <sidl:sidl xmlns:sidl="http://www.sap.com/2007/03/sidl"/>
  </wsdl:documentation>
  <wsp:UsingPolicy wsdl:required="true"/>
  <wsp:Policy wsu:Id="BN_ZWAPP_GET_POD_FINANCIAL_DATA">
    <saptrnbnd:OptimizedXMLTransfer uri="http://xml.sap.com/2006/11/esi/esp/binxml" wsp:Optional="true" xmlns:saptrnbnd="http://www.sap.com/webas/710/soap/features/transportbinding/"/>
    <wsaw:UsingAddressing xmlns:wsaw="http://schemas.xmlsoap.org/ws/2004/08/addressing"/>
    <sapattahnd:Enabled xmlns:sapattahnd="http://www.sap.com/710/features/attachment/">false</sapattahnd:Enabled>
    <wsp:ExactlyOne xmlns:sapsp="http://www.sap.com/webas/630/soap/features/security/policy" xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/07/utility">
      <wsp:All>
        <sp:TransportBinding>
          <wsp:Policy>
            <sp:TransportToken>
              <wsp:Policy>
                <sp:HttpsToken>
                  <wsp:Policy>
                    <sp:HttpBasicAuthentication/>
                  </wsp:Policy>
                </sp:HttpsToken>
              </wsp:Policy>
            </sp:TransportToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:TripleDesRsa15/>
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Strict/>
              </wsp:Policy>
            </sp:Layout>
          </wsp:Policy>
        </sp:TransportBinding>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsp:Policy wsu:Id="IF_ZWAPP_GET_POD_FINANCIAL_DATA">
    <sapsession:Session xmlns:sapsession="http://www.sap.com/webas/630/soap/features/session/">
      <sapsession:enableSession>false</sapsession:enableSession>
    </sapsession:Session>
    <sapcentraladmin:CentralAdministration wsp:Optional="true" xmlns:sapcentraladmin="http://www.sap.com/webas/700/soap/features/CentralAdministration/">
      <sapcentraladmin:BusinessApplicationID>5A2E8A9B2DED2140E10080000A0B126E</sapcentraladmin:BusinessApplicationID>
    </sapcentraladmin:CentralAdministration>
  </wsp:Policy>
  <wsp:Policy wsu:Id="OP_ZWappGetPodFinancialData">
    <sapcomhnd:enableCommit xmlns:sapcomhnd="http://www.sap.com/NW05/soap/features/commit/">false</sapcomhnd:enableCommit>
    <sapblock:enableBlocking xmlns:sapblock="http://www.sap.com/NW05/soap/features/blocking/">true</sapblock:enableBlocking>
    <saptrhnw05:required xmlns:saptrhnw05="http://www.sap.com/NW05/soap/features/transaction/">no</saptrhnw05:required>
    <saprmnw05:enableWSRM xmlns:saprmnw05="http://www.sap.com/NW05/soap/features/wsrm/">false</saprmnw05:enableWSRM>
  </wsp:Policy>
  <wsdl:types>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:rfc:functions">
      <xsd:simpleType name="char12">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="12"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char2">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="2"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char20">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char4">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char70">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="70"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="curr13.2">
        <xsd:restriction base="xsd:decimal">
          <xsd:totalDigits value="13"/>
          <xsd:fractionDigits value="2"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:n0="urn:sap-com:document:sap:rfc:functions">
      <xsd:import namespace="urn:sap-com:document:sap:rfc:functions"/>
      <xsd:simpleType name="char20">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ZwappPodFinancialData">
        <xsd:sequence>
          <xsd:element name="Details" type="tns:ZwappPodFinDataDetailT"/>
          <xsd:element name="TotalDebtAmount" type="n0:curr13.2"/>
          <xsd:element name="TotalSettledAmount" type="n0:curr13.2"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappPodFinDataDetail">
        <xsd:sequence>
          <xsd:element name="ContractAccount" type="n0:char12"/>
          <xsd:element name="ContractType" type="n0:char2"/>
          <xsd:element name="LegacyKey" type="tns:char20"/>
          <xsd:element name="Bstatus" type="n0:char2"/>
          <xsd:element name="TotalOpenItems" type="n0:curr13.2"/>
          <xsd:element name="SettledAmount" type="n0:curr13.2"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappPodFinDataDetailT">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwappPodFinDataDetail" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ZWappGetPodFinancialData">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Pod" type="n0:char20"/>
            <xsd:element name="Source" type="n0:char20" minOccurs="0"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ZWappGetPodFinancialDataResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="PodFinancialData" type="tns:ZwappPodFinancialData"/>
            <xsd:element name="ResultCode" type="n0:char4"/>
            <xsd:element name="ResultMessage" type="n0:char70"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ZWappGetPodFinancialData">
    <wsdl:part name="parameters" element="tns:ZWappGetPodFinancialData"/>
  </wsdl:message>
  <wsdl:message name="ZWappGetPodFinancialDataResponse">
    <wsdl:part name="parameter" element="tns:ZWappGetPodFinancialDataResponse"/>
  </wsdl:message>
  <wsdl:portType name="ZWAPP_GET_POD_FINANCIAL_DATA">
    <wsp:Policy>
      <wsp:PolicyReference URI="#IF_ZWAPP_GET_POD_FINANCIAL_DATA"/>
    </wsp:Policy>
    <wsdl:operation name="ZWappGetPodFinancialData">
      <wsp:Policy>
        <wsp:PolicyReference URI="#OP_ZWappGetPodFinancialData"/>
      </wsp:Policy>
      <wsdl:input message="tns:ZWappGetPodFinancialData"/>
      <wsdl:output message="tns:ZWappGetPodFinancialDataResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ZWAPP_GET_POD_FINANCIAL_DATA" type="tns:ZWAPP_GET_POD_FINANCIAL_DATA">
    <wsp:Policy>
      <wsp:PolicyReference URI="#BN_ZWAPP_GET_POD_FINANCIAL_DATA"/>
    </wsp:Policy>
    <wsa:EndpointReference xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing">
      <wsa:ReferenceParameters/>
    </wsa:EndpointReference>
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="ZWappGetPodFinancialData">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ZWAPP_GET_POD_FINANCIAL_DATA">
    <wsdl:port name="ZWAPP_GET_POD_FINANCIAL_DATA" binding="tns:ZWAPP_GET_POD_FINANCIAL_DATA">
      <soap:address location="https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_pod_financial_data/100/zwapp_get_pod_financial_data/zwapp_get_pod_financial_data"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_pod_financial_data/100/zwapp_get_pod_financial_data/zwapp_get_pod_financial_data</con:endpoint></con:endpoints><con:operation id="c1409066-2080-4ab0-a112-74855d8af7da" isOneWay="false" action="" name="ZWappGetPodFinancialData" bindingOperationName="ZWappGetPodFinancialData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="2c86db04-b661-4a3e-8854-7fcc028aa9d8" name="Request 1 - No Debt"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_pod_financial_data/100/zwapp_get_pod_financial_data/zwapp_get_pod_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetPodFinancialData>\r
         <Pod>935536104011</Pod>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetPodFinancialData>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POD_FINANCIAL_DATA/ZWappGetPodFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="ce629783-1f2e-40ab-b77d-f45949f6675e" name="Request 2 - Debt"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_pod_financial_data/100/zwapp_get_pod_financial_data/zwapp_get_pod_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetPodFinancialData>\r
         <Pod>221502650024</Pod>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetPodFinancialData>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POD_FINANCIAL_DATA/ZWappGetPodFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="409ecf03-f508-4d3b-9a0c-b495c3e2b907" name="Dispatcher 1 - No Debt"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_pod_financial_data/100/zwapp_get_pod_financial_data/zwapp_get_pod_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetPodFinancialData>\r
         <Pod>935536104011</Pod>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetPodFinancialData>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POD_FINANCIAL_DATA/ZWappGetPodFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="b79792e1-1f78-4ba3-88d6-144133f75271" name="Dispatcher 2 - Debt"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_pod_financial_data/100/zwapp_get_pod_financial_data/zwapp_get_pod_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetPodFinancialData>\r
         <Pod>221502650024</Pod>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetPodFinancialData>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POD_FINANCIAL_DATA/ZWappGetPodFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="b6f0856c-76af-428c-8d7d-f3889dde1be6" name="Dispatcher 3 - Pollaplos (Good)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_pod_financial_data/100/zwapp_get_pod_financial_data/zwapp_get_pod_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetPodFinancialData>\r
         <Pod>935536104011</Pod>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetPodFinancialData>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POD_FINANCIAL_DATA/ZWappGetPodFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="aadab14d-eefc-4922-ada3-e1ebfcce073e" name="Dispatcher 4 - Pollaplos Child (Good)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_pod_financial_data/100/zwapp_get_pod_financial_data/zwapp_get_pod_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetPodFinancialData>\r
         <Pod>33056196101</Pod>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetPodFinancialData>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POD_FINANCIAL_DATA/ZWappGetPodFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="c5ebd44f-d32b-4564-bfd6-c3bbfc49924d" wsaVersion="NONE" name="ZWAPP_GET_VAT_FINANCIAL_DATA" type="wsdl" bindingName="{urn:sap-com:document:sap:soap:functions:mc-style}ZWAPP_GET_VAT_FINANCIAL_DATA" soapVersion="1_1" anonymous="optional" definition="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D1754E0B093500E10080300A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D1754E0B093500E10080300A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100"><con:part><con:url>http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D1754E0B093500E10080300A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:n1="urn:sap-com:document:sap:rfc:functions">
  <wsdl:documentation>
    <sidl:sidl xmlns:sidl="http://www.sap.com/2007/03/sidl"/>
  </wsdl:documentation>
  <wsp:UsingPolicy wsdl:required="true"/>
  <wsp:Policy wsu:Id="BN_ZWAPP_GET_VAT_FINANCIAL_DATA">
    <saptrnbnd:OptimizedXMLTransfer uri="http://xml.sap.com/2006/11/esi/esp/binxml" wsp:Optional="true" xmlns:saptrnbnd="http://www.sap.com/webas/710/soap/features/transportbinding/"/>
    <wsaw:UsingAddressing xmlns:wsaw="http://schemas.xmlsoap.org/ws/2004/08/addressing"/>
    <sapattahnd:Enabled xmlns:sapattahnd="http://www.sap.com/710/features/attachment/">false</sapattahnd:Enabled>
    <wsp:ExactlyOne xmlns:sapsp="http://www.sap.com/webas/630/soap/features/security/policy" xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/07/utility">
      <wsp:All>
        <sp:TransportBinding>
          <wsp:Policy>
            <sp:TransportToken>
              <wsp:Policy>
                <sp:HttpsToken>
                  <wsp:Policy>
                    <sp:HttpBasicAuthentication/>
                  </wsp:Policy>
                </sp:HttpsToken>
              </wsp:Policy>
            </sp:TransportToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:TripleDesRsa15/>
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Strict/>
              </wsp:Policy>
            </sp:Layout>
          </wsp:Policy>
        </sp:TransportBinding>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsp:Policy wsu:Id="IF_ZWAPP_GET_VAT_FINANCIAL_DATA">
    <sapsession:Session xmlns:sapsession="http://www.sap.com/webas/630/soap/features/session/">
      <sapsession:enableSession>false</sapsession:enableSession>
    </sapsession:Session>
    <sapcentraladmin:CentralAdministration wsp:Optional="true" xmlns:sapcentraladmin="http://www.sap.com/webas/700/soap/features/CentralAdministration/">
      <sapcentraladmin:BusinessApplicationID>5A2E8A9B2DED2140E10080000A0B126E</sapcentraladmin:BusinessApplicationID>
    </sapcentraladmin:CentralAdministration>
  </wsp:Policy>
  <wsp:Policy wsu:Id="OP_ZWappGetVatFinancialData">
    <sapcomhnd:enableCommit xmlns:sapcomhnd="http://www.sap.com/NW05/soap/features/commit/">false</sapcomhnd:enableCommit>
    <sapblock:enableBlocking xmlns:sapblock="http://www.sap.com/NW05/soap/features/blocking/">true</sapblock:enableBlocking>
    <saptrhnw05:required xmlns:saptrhnw05="http://www.sap.com/NW05/soap/features/transaction/">no</saptrhnw05:required>
    <saprmnw05:enableWSRM xmlns:saprmnw05="http://www.sap.com/NW05/soap/features/wsrm/">false</saprmnw05:enableWSRM>
  </wsp:Policy>
  <wsdl:types>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:rfc:functions" xmlns:tns="urn:sap-com:document:sap:rfc:functions">
      <xsd:simpleType name="char10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char12">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="12"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char2">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="2"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char20">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char4">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char70">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="70"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="curr13.2">
        <xsd:restriction base="xsd:decimal">
          <xsd:totalDigits value="13"/>
          <xsd:fractionDigits value="2"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:n0="urn:sap-com:document:sap:rfc:functions">
      <xsd:import namespace="urn:sap-com:document:sap:rfc:functions"/>
      <xsd:simpleType name="char20">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char6">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="6"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ZwappVatFinancialData">
        <xsd:sequence>
          <xsd:element name="BusinessPartners" type="tns:ZwappVatBpFinancialDataT"/>
          <xsd:element name="SumTotalOpenItems" type="n0:curr13.2"/>
          <xsd:element name="TotalOpenSettledAmount" type="n0:curr13.2"/>
          <xsd:element name="TotalOverdue" type="n0:curr13.2"/>
          <xsd:element name="TotalOverdueSettledAmount" type="n0:curr13.2"/>
          <xsd:element name="TotalDifference" type="n0:curr13.2"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappVatBpFinancialData">
        <xsd:sequence>
          <xsd:element name="BusinessPartner" type="n0:char10"/>
          <xsd:element name="Details" type="tns:ZwappVatFinDataDetailT"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappVatFinDataDetail">
        <xsd:sequence>
          <xsd:element name="ContractAccount" type="n0:char12"/>
          <xsd:element name="LegacyKey" type="tns:char20"/>
          <xsd:element name="Bstatus" type="n0:char2"/>
          <xsd:element name="Vbund" type="tns:char6"/>
          <xsd:element name="TotalOpenItems" type="n0:curr13.2"/>
          <xsd:element name="OpenSettledAmount" type="n0:curr13.2"/>
          <xsd:element name="Overdue" type="n0:curr13.2"/>
          <xsd:element name="OverdueSettledAmount" type="n0:curr13.2"/>
          <xsd:element name="Difference" type="n0:curr13.2"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappVatBpFinancialDataT">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwappVatBpFinancialData" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappVatFinDataDetailT">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwappVatFinDataDetail" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ZWappGetVatFinancialData">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Afm" type="n0:char20"/>
            <xsd:element name="Source" type="n0:char20" minOccurs="0"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ZWappGetVatFinancialDataResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="ResultCode" type="n0:char4"/>
            <xsd:element name="ResultMessage" type="n0:char70"/>
            <xsd:element name="VatFinancialData" type="tns:ZwappVatFinancialData"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ZWappGetVatFinancialData">
    <wsdl:part name="parameters" element="tns:ZWappGetVatFinancialData"/>
  </wsdl:message>
  <wsdl:message name="ZWappGetVatFinancialDataResponse">
    <wsdl:part name="parameter" element="tns:ZWappGetVatFinancialDataResponse"/>
  </wsdl:message>
  <wsdl:portType name="ZWAPP_GET_VAT_FINANCIAL_DATA">
    <wsp:Policy>
      <wsp:PolicyReference URI="#IF_ZWAPP_GET_VAT_FINANCIAL_DATA"/>
    </wsp:Policy>
    <wsdl:operation name="ZWappGetVatFinancialData">
      <wsp:Policy>
        <wsp:PolicyReference URI="#OP_ZWappGetVatFinancialData"/>
      </wsp:Policy>
      <wsdl:input message="tns:ZWappGetVatFinancialData"/>
      <wsdl:output message="tns:ZWappGetVatFinancialDataResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ZWAPP_GET_VAT_FINANCIAL_DATA" type="tns:ZWAPP_GET_VAT_FINANCIAL_DATA">
    <wsp:Policy>
      <wsp:PolicyReference URI="#BN_ZWAPP_GET_VAT_FINANCIAL_DATA"/>
    </wsp:Policy>
    <wsa:EndpointReference xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing">
      <wsa:ReferenceParameters/>
    </wsa:EndpointReference>
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="ZWappGetVatFinancialData">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ZWAPP_GET_VAT_FINANCIAL_DATA">
    <wsdl:port name="ZWAPP_GET_VAT_FINANCIAL_DATA" binding="tns:ZWAPP_GET_VAT_FINANCIAL_DATA">
      <soap:address location="https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_vat_financial_data/100/zwapp_get_vat_financial_data/zwapp_get_vat_financial_data"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_vat_financial_data/100/zwapp_get_vat_financial_data/zwapp_get_vat_financial_data</con:endpoint></con:endpoints><con:operation id="c492f92f-986d-4d2d-b0c2-766355738c7d" isOneWay="false" action="" name="ZWappGetVatFinancialData" bindingOperationName="ZWappGetVatFinancialData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="36f2ecdd-06f0-4ca8-a633-cdfe00b66b95" name="Request 1 - Light"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_vat_financial_data/100/zwapp_get_vat_financial_data/zwapp_get_vat_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetVatFinancialData>\r
         <Afm>109750410</Afm>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetVatFinancialData>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_VAT_FINANCIAL_DATA/ZWappGetVatFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="29994a57-d93e-4938-973f-1472b67b5dfd" name="Request 2 - Heavy"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_vat_financial_data/100/zwapp_get_vat_financial_data/zwapp_get_vat_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetVatFinancialData>\r
         <Afm>094199842</Afm>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetVatFinancialData>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_VAT_FINANCIAL_DATA/ZWappGetVatFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="75613b1d-5869-4dde-9cf0-59e8cef44202" name="Dispatcher 1 - Light"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_vat_financial_data/100/zwapp_get_vat_financial_data/zwapp_get_vat_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetVatFinancialData>\r
         <Afm>109750410</Afm>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetVatFinancialData>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_VAT_FINANCIAL_DATA/ZWappGetVatFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="380f30ee-8a32-48af-8216-7c0701c60500" name="Dispatcher 2 - Heavy"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_vat_financial_data/100/zwapp_get_vat_financial_data/zwapp_get_vat_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetVatFinancialData>\r
         <Afm>094199842</Afm>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetVatFinancialData>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_VAT_FINANCIAL_DATA/ZWappGetVatFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="a153fd1b-ea20-4d09-bfb9-74983a687222" name="Dispatcher 3 - Normal"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_vat_financial_data/100/zwapp_get_vat_financial_data/zwapp_get_vat_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetVatFinancialData>\r
         <Afm>109750410</Afm>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetVatFinancialData>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_VAT_FINANCIAL_DATA/ZWappGetVatFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="bf5f2c40-d13f-4fab-b22f-582b29d2c5ee" name="Dispatcher 4 - Pollaplos (Good)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_vat_financial_data/100/zwapp_get_vat_financial_data/zwapp_get_vat_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetVatFinancialData>\r
         <Afm>094449128</Afm>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetVatFinancialData>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_VAT_FINANCIAL_DATA/ZWappGetVatFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="713a6be8-8197-4b13-a61d-39b428d78a4e" name="Dispatcher 5 - Pollaplos Paidaki (Good)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_vat_financial_data/100/zwapp_get_vat_financial_data/zwapp_get_vat_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetVatFinancialData>\r
         <Afm>996763330</Afm>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetVatFinancialData>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_VAT_FINANCIAL_DATA/ZWappGetVatFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="ca2b97e8-50b2-4010-af04-9f77645d6c0c" name="Dispatcher 6 - Pollaplos Hvy 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_vat_financial_data/100/zwapp_get_vat_financial_data/zwapp_get_vat_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetVatFinancialData>\r
         <Afm>094493766</Afm>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetVatFinancialData>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_VAT_FINANCIAL_DATA/ZWappGetVatFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="cbea081a-8822-408d-a8ea-3901c2a853cb" name="Dispatcher 7 - Pollaplos Hvy 2"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_vat_financial_data/100/zwapp_get_vat_financial_data/zwapp_get_vat_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetVatFinancialData>\r
         <Afm>094019245</Afm>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetVatFinancialData>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_VAT_FINANCIAL_DATA/ZWappGetVatFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="764d8c63-63b5-4237-ad8c-0cecc225f979" name="azure dispatcher - light"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_vat_financial_data/100/zwapp_get_vat_financial_data/zwapp_get_vat_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetVatFinancialData>\r
         <Afm>109750410</Afm>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetVatFinancialData>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_VAT_FINANCIAL_DATA/ZWappGetVatFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="4ef268f0-eebf-4e2e-b4b9-3c5658eb0da3" name="DR_0910_GET_VAT_FINANCIAL_DATA"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_get_vat_financial_data/100/zwapp_get_vat_financial_data/zwapp_get_vat_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetVatFinancialData>\r
         <Afm>013153841</Afm>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetVatFinancialData>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_VAT_FINANCIAL_DATA/ZWappGetVatFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="a1bf6b20-286a-4419-8dad-7cf141a0b146" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_vat_financial_data/100/zwapp_get_vat_financial_data/zwapp_get_vat_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetVatFinancialData>\r
         <Afm>?</Afm>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetVatFinancialData>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_VAT_FINANCIAL_DATA/ZWappGetVatFinancialDataRequest"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="4ac1e125-8570-4284-a103-7c0db3207481" wsaVersion="NONE" name="ZWAPP_INSERT_MANDATE_CARD_CA" type="wsdl" bindingName="{urn:sap-com:document:sap:soap:functions:mc-style}ZWAPP_INSERT_MANDATE_CARD_CA" soapVersion="1_1" anonymous="optional" definition="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D109C50AFE3580E100801C0A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D109C50AFE3580E100801C0A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100"><con:part><con:url>http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D109C50AFE3580E100801C0A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:n1="urn:sap-com:document:sap:rfc:functions">
  <wsdl:documentation>
    <sidl:sidl xmlns:sidl="http://www.sap.com/2007/03/sidl"/>
  </wsdl:documentation>
  <wsp:UsingPolicy wsdl:required="true"/>
  <wsp:Policy wsu:Id="BN_ZWAPP_INSERT_MANDATE_CARD_CA">
    <saptrnbnd:OptimizedXMLTransfer uri="http://xml.sap.com/2006/11/esi/esp/binxml" wsp:Optional="true" xmlns:saptrnbnd="http://www.sap.com/webas/710/soap/features/transportbinding/"/>
    <wsaw:UsingAddressing xmlns:wsaw="http://schemas.xmlsoap.org/ws/2004/08/addressing"/>
    <sapattahnd:Enabled xmlns:sapattahnd="http://www.sap.com/710/features/attachment/">false</sapattahnd:Enabled>
    <wsp:ExactlyOne xmlns:sapsp="http://www.sap.com/webas/630/soap/features/security/policy" xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/07/utility">
      <wsp:All>
        <sp:TransportBinding>
          <wsp:Policy>
            <sp:TransportToken>
              <wsp:Policy>
                <sp:HttpsToken>
                  <wsp:Policy>
                    <sp:HttpBasicAuthentication/>
                  </wsp:Policy>
                </sp:HttpsToken>
              </wsp:Policy>
            </sp:TransportToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:TripleDesRsa15/>
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Strict/>
              </wsp:Policy>
            </sp:Layout>
          </wsp:Policy>
        </sp:TransportBinding>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsp:Policy wsu:Id="IF_ZWAPP_INSERT_MANDATE_CARD_CA">
    <sapsession:Session xmlns:sapsession="http://www.sap.com/webas/630/soap/features/session/">
      <sapsession:enableSession>false</sapsession:enableSession>
    </sapsession:Session>
    <sapcentraladmin:CentralAdministration wsp:Optional="true" xmlns:sapcentraladmin="http://www.sap.com/webas/700/soap/features/CentralAdministration/">
      <sapcentraladmin:BusinessApplicationID>5A2E8A9B2DED2140E10080000A0B126E</sapcentraladmin:BusinessApplicationID>
    </sapcentraladmin:CentralAdministration>
  </wsp:Policy>
  <wsp:Policy wsu:Id="OP_ZWappInsertMandateCardCa">
    <sapcomhnd:enableCommit xmlns:sapcomhnd="http://www.sap.com/NW05/soap/features/commit/">false</sapcomhnd:enableCommit>
    <sapblock:enableBlocking xmlns:sapblock="http://www.sap.com/NW05/soap/features/blocking/">true</sapblock:enableBlocking>
    <saptrhnw05:required xmlns:saptrhnw05="http://www.sap.com/NW05/soap/features/transaction/">no</saptrhnw05:required>
    <saprmnw05:enableWSRM xmlns:saprmnw05="http://www.sap.com/NW05/soap/features/wsrm/">false</saprmnw05:enableWSRM>
  </wsp:Policy>
  <wsdl:types>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:rfc:functions">
      <xsd:simpleType name="char1">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char12">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="12"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char16">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="16"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char20">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char200">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="200"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char24">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="24"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char4">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char40">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="40"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="date10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
          <xsd:pattern value="\d\d\d\d-\d\d-\d\d"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="numeric4">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
          <xsd:pattern value="\d*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="time">
        <xsd:restriction base="xsd:time">
          <xsd:pattern value="[0-9]{2}:[0-9]{2}:[0-9]{2}"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:n0="urn:sap-com:document:sap:rfc:functions">
      <xsd:import namespace="urn:sap-com:document:sap:rfc:functions"/>
      <xsd:element name="ZWappInsertMandateCardCa">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="AgreeId" type="n0:char24"/>
            <xsd:element name="BankId" type="n0:char4"/>
            <xsd:element name="CardBrand" type="n0:char40"/>
            <xsd:element name="CardExpDate" type="n0:numeric4"/>
            <xsd:element name="CardNbr" type="n0:char16"/>
            <xsd:element name="ContractAccount" type="n0:char12"/>
            <xsd:element name="CustName" type="n0:char40" minOccurs="0"/>
            <xsd:element name="Ds3Id" type="n0:char16"/>
            <xsd:element name="InpPayCode" type="n0:char1"/>
            <xsd:element name="MandateDate" type="n0:date10"/>
            <xsd:element name="MandateTime" type="n0:time"/>
            <xsd:element name="Source" type="n0:char20"/>
            <xsd:element name="TokenId" type="n0:char16"/>
            <xsd:element name="TranType" type="n0:char1"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ZWappInsertMandateCardCaResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="ResultCode" type="n0:char4"/>
            <xsd:element name="ResultMessage" type="n0:char200"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ZWappInsertMandateCardCa">
    <wsdl:part name="parameters" element="tns:ZWappInsertMandateCardCa"/>
  </wsdl:message>
  <wsdl:message name="ZWappInsertMandateCardCaResponse">
    <wsdl:part name="parameter" element="tns:ZWappInsertMandateCardCaResponse"/>
  </wsdl:message>
  <wsdl:portType name="ZWAPP_INSERT_MANDATE_CARD_CA">
    <wsp:Policy>
      <wsp:PolicyReference URI="#IF_ZWAPP_INSERT_MANDATE_CARD_CA"/>
    </wsp:Policy>
    <wsdl:operation name="ZWappInsertMandateCardCa">
      <wsp:Policy>
        <wsp:PolicyReference URI="#OP_ZWappInsertMandateCardCa"/>
      </wsp:Policy>
      <wsdl:input message="tns:ZWappInsertMandateCardCa"/>
      <wsdl:output message="tns:ZWappInsertMandateCardCaResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ZWAPP_INSERT_MANDATE_CARD_CA" type="tns:ZWAPP_INSERT_MANDATE_CARD_CA">
    <wsp:Policy>
      <wsp:PolicyReference URI="#BN_ZWAPP_INSERT_MANDATE_CARD_CA"/>
    </wsp:Policy>
    <wsa:EndpointReference xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing">
      <wsa:ReferenceParameters/>
    </wsa:EndpointReference>
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="ZWappInsertMandateCardCa">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ZWAPP_INSERT_MANDATE_CARD_CA">
    <wsdl:port name="ZWAPP_INSERT_MANDATE_CARD_CA" binding="tns:ZWAPP_INSERT_MANDATE_CARD_CA">
      <soap:address location="https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_insert_mandate_card_ca/100/zwapp_insert_mandate_card_ca/zwapp_insert_mandate_card_ca"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_insert_mandate_card_ca/100/zwapp_insert_mandate_card_ca/zwapp_insert_mandate_card_ca</con:endpoint></con:endpoints><con:operation id="89abdd3c-0c79-40eb-b37d-ac64ad5ac4d7" isOneWay="false" action="" name="ZWappInsertMandateCardCa" bindingOperationName="ZWappInsertMandateCardCa" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="93763bad-5b9d-4c99-8e14-7b48339344db" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_insert_mandate_card_ca/100/zwapp_insert_mandate_card_ca/zwapp_insert_mandate_card_ca</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappInsertMandateCardCa>\r
         <AgreeId>?</AgreeId>\r
         <BankId>?</BankId>\r
         <CardBrand>?</CardBrand>\r
         <CardExpDate>?</CardExpDate>\r
         <CardNbr>?</CardNbr>\r
         <ContractAccount>?</ContractAccount>\r
         <!--Optional:-->\r
         <CustName>?</CustName>\r
         <Ds3Id>?</Ds3Id>\r
         <InpPayCode>?</InpPayCode>\r
         <MandateDate>?</MandateDate>\r
         <MandateTime>?</MandateTime>\r
         <Source>?</Source>\r
         <TokenId>?</TokenId>\r
         <TranType>?</TranType>\r
      </urn:ZWappInsertMandateCardCa>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_INSERT_MANDATE_CARD_CA/ZWappInsertMandateCardCaRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="23b05949-6715-49a9-9b26-9d92484077e9" name="Copy of Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_insert_mandate_card_ca/100/zwapp_insert_mandate_card_ca/zwapp_insert_mandate_card_ca</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappInsertMandateCardCa>\r
         <AgreeId>?</AgreeId>\r
         <BankId>?</BankId>\r
         <CardBrand>?</CardBrand>\r
         <CardExpDate>?</CardExpDate>\r
         <CardNbr>?</CardNbr>\r
         <ContractAccount>?</ContractAccount>\r
         <!--Optional:-->\r
         <CustName>?</CustName>\r
         <Ds3Id>?</Ds3Id>\r
         <InpPayCode>?</InpPayCode>\r
         <MandateDate>?</MandateDate>\r
         <MandateTime>?</MandateTime>\r
         <Source>?</Source>\r
         <TokenId>?</TokenId>\r
         <TranType>?</TranType>\r
      </urn:ZWappInsertMandateCardCa>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>ECA_WS</con:username><con:password>Ec@rPPC1!</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_INSERT_MANDATE_CARD_CA/ZWappInsertMandateCardCaRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="c36b15c6-25c5-4bd8-b437-ae3c2a3f0303" wsaVersion="NONE" name="ZWAPP_GET_MANDATE_CARD_CA" type="wsdl" bindingName="{urn:sap-com:document:sap:soap:functions:mc-style}ZWAPP_GET_MANDATE_CARD_CA" soapVersion="1_1" anonymous="optional" definition="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D1FCB80B098440E10080470A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D1FCB80B098440E10080470A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100"><con:part><con:url>http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D1FCB80B098440E10080470A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:n1="urn:sap-com:document:sap:rfc:functions">
  <wsdl:documentation>
    <sidl:sidl xmlns:sidl="http://www.sap.com/2007/03/sidl"/>
  </wsdl:documentation>
  <wsp:UsingPolicy wsdl:required="true"/>
  <wsp:Policy wsu:Id="BN_ZWAPP_GET_MANDATE_CARD_CA">
    <saptrnbnd:OptimizedXMLTransfer uri="http://xml.sap.com/2006/11/esi/esp/binxml" wsp:Optional="true" xmlns:saptrnbnd="http://www.sap.com/webas/710/soap/features/transportbinding/"/>
    <wsaw:UsingAddressing xmlns:wsaw="http://schemas.xmlsoap.org/ws/2004/08/addressing"/>
    <sapattahnd:Enabled xmlns:sapattahnd="http://www.sap.com/710/features/attachment/">false</sapattahnd:Enabled>
    <wsp:ExactlyOne xmlns:sapsp="http://www.sap.com/webas/630/soap/features/security/policy" xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/07/utility">
      <wsp:All>
        <sp:TransportBinding>
          <wsp:Policy>
            <sp:TransportToken>
              <wsp:Policy>
                <sp:HttpsToken>
                  <wsp:Policy>
                    <sp:HttpBasicAuthentication/>
                  </wsp:Policy>
                </sp:HttpsToken>
              </wsp:Policy>
            </sp:TransportToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:TripleDesRsa15/>
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Strict/>
              </wsp:Policy>
            </sp:Layout>
          </wsp:Policy>
        </sp:TransportBinding>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsp:Policy wsu:Id="IF_ZWAPP_GET_MANDATE_CARD_CA">
    <sapsession:Session xmlns:sapsession="http://www.sap.com/webas/630/soap/features/session/">
      <sapsession:enableSession>false</sapsession:enableSession>
    </sapsession:Session>
    <sapcentraladmin:CentralAdministration wsp:Optional="true" xmlns:sapcentraladmin="http://www.sap.com/webas/700/soap/features/CentralAdministration/">
      <sapcentraladmin:BusinessApplicationID>5A2E8A9B2DED2140E10080000A0B126E</sapcentraladmin:BusinessApplicationID>
    </sapcentraladmin:CentralAdministration>
  </wsp:Policy>
  <wsp:Policy wsu:Id="OP_ZWappGetMandateCardCa">
    <sapcomhnd:enableCommit xmlns:sapcomhnd="http://www.sap.com/NW05/soap/features/commit/">false</sapcomhnd:enableCommit>
    <sapblock:enableBlocking xmlns:sapblock="http://www.sap.com/NW05/soap/features/blocking/">true</sapblock:enableBlocking>
    <saptrhnw05:required xmlns:saptrhnw05="http://www.sap.com/NW05/soap/features/transaction/">no</saptrhnw05:required>
    <saprmnw05:enableWSRM xmlns:saprmnw05="http://www.sap.com/NW05/soap/features/wsrm/">false</saprmnw05:enableWSRM>
  </wsp:Policy>
  <wsdl:types>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:rfc:functions">
      <xsd:simpleType name="char1">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char12">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="12"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char16">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="16"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char20">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char200">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="200"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char24">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="24"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char4">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char40">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="40"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="date10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
          <xsd:pattern value="\d\d\d\d-\d\d-\d\d"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="numeric4">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
          <xsd:pattern value="\d*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="time">
        <xsd:restriction base="xsd:time">
          <xsd:pattern value="[0-9]{2}:[0-9]{2}:[0-9]{2}"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:n0="urn:sap-com:document:sap:rfc:functions">
      <xsd:import namespace="urn:sap-com:document:sap:rfc:functions"/>
      <xsd:element name="ZWappGetMandateCardCa">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="ContractAccount" type="n0:char12"/>
            <xsd:element name="Source" type="n0:char20"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ZWappGetMandateCardCaResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="AgreeId" type="n0:char24"/>
            <xsd:element name="BankId" type="n0:char4"/>
            <xsd:element name="CardBrand" type="n0:char40"/>
            <xsd:element name="CardExpDate" type="n0:numeric4"/>
            <xsd:element name="CardNbr" type="n0:char16"/>
            <xsd:element name="CustName" type="n0:char40"/>
            <xsd:element name="Ds3Id" type="n0:char16"/>
            <xsd:element name="InpPayCode" type="n0:char1"/>
            <xsd:element name="MandateDate" type="n0:date10"/>
            <xsd:element name="MandateTime" type="n0:time"/>
            <xsd:element name="ResultCode" type="n0:char4"/>
            <xsd:element name="ResultMessage" type="n0:char200"/>
            <xsd:element name="TokenId" type="n0:char16"/>
            <xsd:element name="TranType" type="n0:char1"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ZWappGetMandateCardCa">
    <wsdl:part name="parameters" element="tns:ZWappGetMandateCardCa"/>
  </wsdl:message>
  <wsdl:message name="ZWappGetMandateCardCaResponse">
    <wsdl:part name="parameter" element="tns:ZWappGetMandateCardCaResponse"/>
  </wsdl:message>
  <wsdl:portType name="ZWAPP_GET_MANDATE_CARD_CA">
    <wsp:Policy>
      <wsp:PolicyReference URI="#IF_ZWAPP_GET_MANDATE_CARD_CA"/>
    </wsp:Policy>
    <wsdl:operation name="ZWappGetMandateCardCa">
      <wsp:Policy>
        <wsp:PolicyReference URI="#OP_ZWappGetMandateCardCa"/>
      </wsp:Policy>
      <wsdl:input message="tns:ZWappGetMandateCardCa"/>
      <wsdl:output message="tns:ZWappGetMandateCardCaResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ZWAPP_GET_MANDATE_CARD_CA" type="tns:ZWAPP_GET_MANDATE_CARD_CA">
    <wsp:Policy>
      <wsp:PolicyReference URI="#BN_ZWAPP_GET_MANDATE_CARD_CA"/>
    </wsp:Policy>
    <wsa:EndpointReference xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing">
      <wsa:ReferenceParameters/>
    </wsa:EndpointReference>
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="ZWappGetMandateCardCa">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ZWAPP_GET_MANDATE_CARD_CA">
    <wsdl:port name="ZWAPP_GET_MANDATE_CARD_CA" binding="tns:ZWAPP_GET_MANDATE_CARD_CA">
      <soap:address location="https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_mandate_card_ca/100/zwapp_get_mandate_card_ca/zwapp_get_mandate_card_ca"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_mandate_card_ca/100/zwapp_get_mandate_card_ca/zwapp_get_mandate_card_ca</con:endpoint></con:endpoints><con:operation id="ca3c409f-8565-4b77-afeb-508c9aa171a6" isOneWay="false" action="" name="ZWappGetMandateCardCa" bindingOperationName="ZWappGetMandateCardCa" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="25838f7b-886d-489a-9a7f-a3d14d2ddc03" name="Request 1 - C"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_mandate_card_ca/100/zwapp_get_mandate_card_ca/zwapp_get_mandate_card_ca</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetMandateCardCa>\r
         <ContractAccount>300002164681</ContractAccount>\r
         <Source>?</Source>\r
      </urn:ZWappGetMandateCardCa>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_MANDATE_CARD_CA/ZWappGetMandateCardCaRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="69b58c00-8c4d-4f6c-99f7-1818daeef392" name="Dispatcher 1 - C"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_get_mandate_card_ca/100/zwapp_get_mandate_card_ca/zwapp_get_mandate_card_ca</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetMandateCardCa>\r
         <ContractAccount>300002164681</ContractAccount>\r
         <Source>?</Source>\r
      </urn:ZWappGetMandateCardCa>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_MANDATE_CARD_CA/ZWappGetMandateCardCaRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="db048dbf-d360-49d9-997c-ad93afbdd89f" name="Dispatcher 2 - W"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_mandate_card_ca/100/zwapp_get_mandate_card_ca/zwapp_get_mandate_card_ca</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetMandateCardCa>\r
         <ContractAccount>300000036254</ContractAccount>\r
         <Source>?</Source>\r
      </urn:ZWappGetMandateCardCa>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_MANDATE_CARD_CA/ZWappGetMandateCardCaRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="d4d9ac74-6d02-49c2-aa8c-101e74f51ef2" wsaVersion="NONE" name="ZWAPP_UPDATE_MANDATE_REVOKE" type="wsdl" bindingName="{urn:sap-com:document:sap:soap:functions:mc-style}ZWAPP_UPDATE_MANDATE_REVOKE" soapVersion="1_1" anonymous="optional" definition="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D19A8F0B097A40E10080000A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D19A8F0B097A40E10080000A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100"><con:part><con:url>http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D19A8F0B097A40E10080000A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:n1="urn:sap-com:document:sap:rfc:functions">
  <wsdl:documentation>
    <sidl:sidl xmlns:sidl="http://www.sap.com/2007/03/sidl"/>
  </wsdl:documentation>
  <wsp:UsingPolicy wsdl:required="true"/>
  <wsp:Policy wsu:Id="BN_ZWAPP_UPDATE_MANDATE_REVOKE">
    <wsaw:UsingAddressing xmlns:wsaw="http://schemas.xmlsoap.org/ws/2004/08/addressing"/>
    <saptrnbnd:OptimizedXMLTransfer uri="http://xml.sap.com/2006/11/esi/esp/binxml" wsp:Optional="true" xmlns:saptrnbnd="http://www.sap.com/webas/710/soap/features/transportbinding/"/>
    <sapattahnd:Enabled xmlns:sapattahnd="http://www.sap.com/710/features/attachment/">false</sapattahnd:Enabled>
    <wsp:ExactlyOne xmlns:sapsp="http://www.sap.com/webas/630/soap/features/security/policy" xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/07/utility">
      <wsp:All>
        <sp:TransportBinding>
          <wsp:Policy>
            <sp:TransportToken>
              <wsp:Policy>
                <sp:HttpsToken>
                  <wsp:Policy>
                    <sp:HttpBasicAuthentication/>
                  </wsp:Policy>
                </sp:HttpsToken>
              </wsp:Policy>
            </sp:TransportToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:TripleDesRsa15/>
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Strict/>
              </wsp:Policy>
            </sp:Layout>
          </wsp:Policy>
        </sp:TransportBinding>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsp:Policy wsu:Id="IF_ZWAPP_UPDATE_MANDATE_REVOKE">
    <sapsession:Session xmlns:sapsession="http://www.sap.com/webas/630/soap/features/session/">
      <sapsession:enableSession>false</sapsession:enableSession>
    </sapsession:Session>
    <sapcentraladmin:CentralAdministration wsp:Optional="true" xmlns:sapcentraladmin="http://www.sap.com/webas/700/soap/features/CentralAdministration/">
      <sapcentraladmin:BusinessApplicationID>5A2E8A9B2DED2140E10080000A0B126E</sapcentraladmin:BusinessApplicationID>
    </sapcentraladmin:CentralAdministration>
  </wsp:Policy>
  <wsp:Policy wsu:Id="OP_ZWappUpdateMandateRevoke">
    <sapcomhnd:enableCommit xmlns:sapcomhnd="http://www.sap.com/NW05/soap/features/commit/">false</sapcomhnd:enableCommit>
    <sapblock:enableBlocking xmlns:sapblock="http://www.sap.com/NW05/soap/features/blocking/">true</sapblock:enableBlocking>
    <saptrhnw05:required xmlns:saptrhnw05="http://www.sap.com/NW05/soap/features/transaction/">no</saptrhnw05:required>
    <saprmnw05:enableWSRM xmlns:saprmnw05="http://www.sap.com/NW05/soap/features/wsrm/">false</saprmnw05:enableWSRM>
  </wsp:Policy>
  <wsdl:types>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:rfc:functions">
      <xsd:simpleType name="char1">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char12">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="12"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char20">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char200">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="200"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char4">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="date10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
          <xsd:pattern value="\d\d\d\d-\d\d-\d\d"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="time">
        <xsd:restriction base="xsd:time">
          <xsd:pattern value="[0-9]{2}:[0-9]{2}:[0-9]{2}"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:n0="urn:sap-com:document:sap:rfc:functions">
      <xsd:import namespace="urn:sap-com:document:sap:rfc:functions"/>
      <xsd:element name="ZWappUpdateMandateRevoke">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="BankId" type="n0:char4"/>
            <xsd:element name="ContractAccount" type="n0:char12"/>
            <xsd:element name="MandateDate" type="n0:date10"/>
            <xsd:element name="MandateTime" type="n0:time"/>
            <xsd:element name="Source" type="n0:char20" minOccurs="0"/>
            <xsd:element name="TranType" type="n0:char1" minOccurs="0"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ZWappUpdateMandateRevokeResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="ResultCode" type="n0:char4"/>
            <xsd:element name="ResultMessage" type="n0:char200"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ZWappUpdateMandateRevoke">
    <wsdl:part name="parameters" element="tns:ZWappUpdateMandateRevoke"/>
  </wsdl:message>
  <wsdl:message name="ZWappUpdateMandateRevokeResponse">
    <wsdl:part name="parameter" element="tns:ZWappUpdateMandateRevokeResponse"/>
  </wsdl:message>
  <wsdl:portType name="ZWAPP_UPDATE_MANDATE_REVOKE">
    <wsp:Policy>
      <wsp:PolicyReference URI="#IF_ZWAPP_UPDATE_MANDATE_REVOKE"/>
    </wsp:Policy>
    <wsdl:operation name="ZWappUpdateMandateRevoke">
      <wsp:Policy>
        <wsp:PolicyReference URI="#OP_ZWappUpdateMandateRevoke"/>
      </wsp:Policy>
      <wsdl:input message="tns:ZWappUpdateMandateRevoke"/>
      <wsdl:output message="tns:ZWappUpdateMandateRevokeResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ZWAPP_UPDATE_MANDATE_REVOKE" type="tns:ZWAPP_UPDATE_MANDATE_REVOKE">
    <wsp:Policy>
      <wsp:PolicyReference URI="#BN_ZWAPP_UPDATE_MANDATE_REVOKE"/>
    </wsp:Policy>
    <wsa:EndpointReference xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing">
      <wsa:ReferenceParameters/>
    </wsa:EndpointReference>
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="ZWappUpdateMandateRevoke">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ZWAPP_UPDATE_MANDATE_REVOKE">
    <wsdl:port name="ZWAPP_UPDATE_MANDATE_REVOKE" binding="tns:ZWAPP_UPDATE_MANDATE_REVOKE">
      <soap:address location="https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_update_mandate_revoke/100/zwapp_update_mandate_revoke/zwapp_update_mandate_revoke"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_update_mandate_revoke/100/zwapp_update_mandate_revoke/zwapp_update_mandate_revoke</con:endpoint></con:endpoints><con:operation id="7d0b6852-d610-4bc0-90d3-21a1d08e70f4" isOneWay="false" action="" name="ZWappUpdateMandateRevoke" bindingOperationName="ZWappUpdateMandateRevoke" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="5cd8b7bc-d254-404f-a1b0-6a58ac829417" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_update_mandate_revoke/100/zwapp_update_mandate_revoke/zwapp_update_mandate_revoke</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappUpdateMandateRevoke>\r
         <BankId>?</BankId>\r
         <ContractAccount>?</ContractAccount>\r
         <MandateDate>?</MandateDate>\r
         <MandateTime>?</MandateTime>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
         <!--Optional:-->\r
         <TranType>?</TranType>\r
      </urn:ZWappUpdateMandateRevoke>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_UPDATE_MANDATE_REVOKE/ZWappUpdateMandateRevokeRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="91a19c7f-dfa9-4d62-9ac3-31a8c66fcf1d" wsaVersion="NONE" name="ZWAPP_SIGNUP_CHECK_FYSIKO" type="wsdl" bindingName="{urn:sap-com:document:sap:soap:functions:mc-style}ZWAPP_SIGNUP_CHECK_FYSIKO" soapVersion="1_1" anonymous="optional" definition="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D1F2E30B095780E100807E0A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D1F2E30B095780E100807E0A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100"><con:part><con:url>http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D1F2E30B095780E100807E0A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:n1="urn:sap-com:document:sap:rfc:functions">
  <wsdl:documentation>
    <sidl:sidl xmlns:sidl="http://www.sap.com/2007/03/sidl"/>
  </wsdl:documentation>
  <wsp:UsingPolicy wsdl:required="true"/>
  <wsp:Policy wsu:Id="BN_ZWAPP_SIGNUP_CHECK_FYSIKO">
    <saptrnbnd:OptimizedXMLTransfer uri="http://xml.sap.com/2006/11/esi/esp/binxml" wsp:Optional="true" xmlns:saptrnbnd="http://www.sap.com/webas/710/soap/features/transportbinding/"/>
    <wsaw:UsingAddressing xmlns:wsaw="http://schemas.xmlsoap.org/ws/2004/08/addressing"/>
    <sapattahnd:Enabled xmlns:sapattahnd="http://www.sap.com/710/features/attachment/">false</sapattahnd:Enabled>
    <wsp:ExactlyOne xmlns:sapsp="http://www.sap.com/webas/630/soap/features/security/policy" xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/07/utility">
      <wsp:All>
        <sp:TransportBinding>
          <wsp:Policy>
            <sp:TransportToken>
              <wsp:Policy>
                <sp:HttpsToken>
                  <wsp:Policy>
                    <sp:HttpBasicAuthentication/>
                  </wsp:Policy>
                </sp:HttpsToken>
              </wsp:Policy>
            </sp:TransportToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:TripleDesRsa15/>
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Strict/>
              </wsp:Policy>
            </sp:Layout>
          </wsp:Policy>
        </sp:TransportBinding>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsp:Policy wsu:Id="IF_ZWAPP_SIGNUP_CHECK_FYSIKO">
    <sapsession:Session xmlns:sapsession="http://www.sap.com/webas/630/soap/features/session/">
      <sapsession:enableSession>false</sapsession:enableSession>
    </sapsession:Session>
    <sapcentraladmin:CentralAdministration wsp:Optional="true" xmlns:sapcentraladmin="http://www.sap.com/webas/700/soap/features/CentralAdministration/">
      <sapcentraladmin:BusinessApplicationID>5A2E8A9B2DED2140E10080000A0B126E</sapcentraladmin:BusinessApplicationID>
    </sapcentraladmin:CentralAdministration>
  </wsp:Policy>
  <wsp:Policy wsu:Id="OP_ZWappSignupCheckFysiko">
    <sapcomhnd:enableCommit xmlns:sapcomhnd="http://www.sap.com/NW05/soap/features/commit/">false</sapcomhnd:enableCommit>
    <sapblock:enableBlocking xmlns:sapblock="http://www.sap.com/NW05/soap/features/blocking/">true</sapblock:enableBlocking>
    <saptrhnw05:required xmlns:saptrhnw05="http://www.sap.com/NW05/soap/features/transaction/">no</saptrhnw05:required>
    <saprmnw05:enableWSRM xmlns:saprmnw05="http://www.sap.com/NW05/soap/features/wsrm/">false</saprmnw05:enableWSRM>
  </wsp:Policy>
  <wsdl:types>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:n0="urn:sap-com:document:sap:rfc:functions">
      <xsd:import namespace="urn:sap-com:document:sap:rfc:functions"/>
      <xsd:simpleType name="numeric10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
          <xsd:pattern value="\d*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="numeric4">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
          <xsd:pattern value="\d*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ZwebappResult">
        <xsd:sequence>
          <xsd:element name="Code" type="n0:char23"/>
          <xsd:element name="Message" type="n0:char220"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwebappResults">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwebappResult" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ZWappSignupCheckFysiko">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Adt" type="tns:numeric4"/>
            <xsd:element name="Afm" type="n0:char20"/>
            <xsd:element name="BusinessPartnerId" type="n0:char10"/>
            <xsd:element name="Source" type="n0:char20" minOccurs="0"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ZWappSignupCheckFysikoResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="MasterId" type="tns:numeric10"/>
            <xsd:element name="Results" type="tns:ZwebappResults"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:rfc:functions">
      <xsd:simpleType name="char10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char20">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char220">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="220"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char23">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="23"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ZWappSignupCheckFysiko">
    <wsdl:part name="parameters" element="tns:ZWappSignupCheckFysiko"/>
  </wsdl:message>
  <wsdl:message name="ZWappSignupCheckFysikoResponse">
    <wsdl:part name="parameter" element="tns:ZWappSignupCheckFysikoResponse"/>
  </wsdl:message>
  <wsdl:portType name="ZWAPP_SIGNUP_CHECK_FYSIKO">
    <wsp:Policy>
      <wsp:PolicyReference URI="#IF_ZWAPP_SIGNUP_CHECK_FYSIKO"/>
    </wsp:Policy>
    <wsdl:operation name="ZWappSignupCheckFysiko">
      <wsp:Policy>
        <wsp:PolicyReference URI="#OP_ZWappSignupCheckFysiko"/>
      </wsp:Policy>
      <wsdl:input message="tns:ZWappSignupCheckFysiko"/>
      <wsdl:output message="tns:ZWappSignupCheckFysikoResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ZWAPP_SIGNUP_CHECK_FYSIKO" type="tns:ZWAPP_SIGNUP_CHECK_FYSIKO">
    <wsp:Policy>
      <wsp:PolicyReference URI="#BN_ZWAPP_SIGNUP_CHECK_FYSIKO"/>
    </wsp:Policy>
    <wsa:EndpointReference xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing">
      <wsa:ReferenceParameters/>
    </wsa:EndpointReference>
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="ZWappSignupCheckFysiko">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ZWAPP_SIGNUP_CHECK_FYSIKO">
    <wsdl:port name="ZWAPP_SIGNUP_CHECK_FYSIKO" binding="tns:ZWAPP_SIGNUP_CHECK_FYSIKO">
      <soap:address location="https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_signup_check_fysiko/100/zwapp_signup_check_fysiko/zwapp_signup_check_fysiko"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_signup_check_fysiko/100/zwapp_signup_check_fysiko/zwapp_signup_check_fysiko</con:endpoint></con:endpoints><con:operation id="092e5e4c-48a2-4623-8850-376c8add654e" isOneWay="false" action="" name="ZWappSignupCheckFysiko" bindingOperationName="ZWappSignupCheckFysiko" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="6ff238d9-fde4-405c-847a-4b9b4e468103" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_signup_check_fysiko/100/zwapp_signup_check_fysiko/zwapp_signup_check_fysiko</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappSignupCheckFysiko>\r
         <Adt>?</Adt>\r
         <Afm>?</Afm>\r
         <BusinessPartnerId>?</BusinessPartnerId>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappSignupCheckFysiko>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_SIGNUP_CHECK_FYSIKO/ZWappSignupCheckFysikoRequest"/></con:call><con:call id="7af4143e-c4ba-456d-a43f-badb2b865d25" name="Copy of Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcstg.dei.gr:6443/sap/bc/srt/rfc/sap/zwfdig_insert_document/100/zwfdig_insert_document/zwfdig_insert_document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappSignupCheckFysiko>\r
         <Adt>XT55051</Adt>\r
         <Afm>115463608</Afm>\r
         <BusinessPartnerId>19000012345</BusinessPartnerId>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappSignupCheckFysiko>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>webapp</con:username><con:password>asd234</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_SIGNUP_CHECK_FYSIKO/ZWappSignupCheckFysikoRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="d7c16845-0f47-431e-8446-c925f374706c" wsaVersion="NONE" name="ZWAPP_SIGNUP_CHECK_NOMIKO" type="wsdl" bindingName="{urn:sap-com:document:sap:soap:functions:mc-style}ZWAPP_SIGNUP_CHECK_NOMIKO" soapVersion="1_1" anonymous="optional" definition="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D13A370B0989C0E10080590A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D13A370B0989C0E10080590A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100"><con:part><con:url>http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D13A370B0989C0E10080590A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:n1="urn:sap-com:document:sap:rfc:functions">
  <wsdl:documentation>
    <sidl:sidl xmlns:sidl="http://www.sap.com/2007/03/sidl"/>
  </wsdl:documentation>
  <wsp:UsingPolicy wsdl:required="true"/>
  <wsp:Policy wsu:Id="BN_ZWAPP_SIGNUP_CHECK_NOMIKO">
    <saptrnbnd:OptimizedXMLTransfer uri="http://xml.sap.com/2006/11/esi/esp/binxml" wsp:Optional="true" xmlns:saptrnbnd="http://www.sap.com/webas/710/soap/features/transportbinding/"/>
    <wsaw:UsingAddressing xmlns:wsaw="http://schemas.xmlsoap.org/ws/2004/08/addressing"/>
    <sapattahnd:Enabled xmlns:sapattahnd="http://www.sap.com/710/features/attachment/">false</sapattahnd:Enabled>
    <wsp:ExactlyOne xmlns:sapsp="http://www.sap.com/webas/630/soap/features/security/policy" xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/07/utility">
      <wsp:All>
        <sp:TransportBinding>
          <wsp:Policy>
            <sp:TransportToken>
              <wsp:Policy>
                <sp:HttpsToken>
                  <wsp:Policy>
                    <sp:HttpBasicAuthentication/>
                  </wsp:Policy>
                </sp:HttpsToken>
              </wsp:Policy>
            </sp:TransportToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:TripleDesRsa15/>
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Strict/>
              </wsp:Policy>
            </sp:Layout>
          </wsp:Policy>
        </sp:TransportBinding>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsp:Policy wsu:Id="IF_ZWAPP_SIGNUP_CHECK_NOMIKO">
    <sapsession:Session xmlns:sapsession="http://www.sap.com/webas/630/soap/features/session/">
      <sapsession:enableSession>false</sapsession:enableSession>
    </sapsession:Session>
    <sapcentraladmin:CentralAdministration wsp:Optional="true" xmlns:sapcentraladmin="http://www.sap.com/webas/700/soap/features/CentralAdministration/">
      <sapcentraladmin:BusinessApplicationID>5A2E8A9B2DED2140E10080000A0B126E</sapcentraladmin:BusinessApplicationID>
    </sapcentraladmin:CentralAdministration>
  </wsp:Policy>
  <wsp:Policy wsu:Id="OP_ZWappSignupCheckNomiko">
    <sapcomhnd:enableCommit xmlns:sapcomhnd="http://www.sap.com/NW05/soap/features/commit/">false</sapcomhnd:enableCommit>
    <sapblock:enableBlocking xmlns:sapblock="http://www.sap.com/NW05/soap/features/blocking/">true</sapblock:enableBlocking>
    <saptrhnw05:required xmlns:saptrhnw05="http://www.sap.com/NW05/soap/features/transaction/">no</saptrhnw05:required>
    <saprmnw05:enableWSRM xmlns:saprmnw05="http://www.sap.com/NW05/soap/features/wsrm/">false</saprmnw05:enableWSRM>
  </wsp:Policy>
  <wsdl:types>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:rfc:functions">
      <xsd:simpleType name="char10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char20">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char220">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="220"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char23">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="23"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:n0="urn:sap-com:document:sap:rfc:functions">
      <xsd:import namespace="urn:sap-com:document:sap:rfc:functions"/>
      <xsd:simpleType name="numeric10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
          <xsd:pattern value="\d*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ZwebappResult">
        <xsd:sequence>
          <xsd:element name="Code" type="n0:char23"/>
          <xsd:element name="Message" type="n0:char220"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwebappResults">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwebappResult" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ZWappSignupCheckNomiko">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Afm" type="n0:char20"/>
            <xsd:element name="BusinessPartnerId" type="n0:char10"/>
            <xsd:element name="Source" type="n0:char20" minOccurs="0"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ZWappSignupCheckNomikoResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="MasterId" type="tns:numeric10"/>
            <xsd:element name="Results" type="tns:ZwebappResults"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ZWappSignupCheckNomiko">
    <wsdl:part name="parameters" element="tns:ZWappSignupCheckNomiko"/>
  </wsdl:message>
  <wsdl:message name="ZWappSignupCheckNomikoResponse">
    <wsdl:part name="parameter" element="tns:ZWappSignupCheckNomikoResponse"/>
  </wsdl:message>
  <wsdl:portType name="ZWAPP_SIGNUP_CHECK_NOMIKO">
    <wsp:Policy>
      <wsp:PolicyReference URI="#IF_ZWAPP_SIGNUP_CHECK_NOMIKO"/>
    </wsp:Policy>
    <wsdl:operation name="ZWappSignupCheckNomiko">
      <wsp:Policy>
        <wsp:PolicyReference URI="#OP_ZWappSignupCheckNomiko"/>
      </wsp:Policy>
      <wsdl:input message="tns:ZWappSignupCheckNomiko"/>
      <wsdl:output message="tns:ZWappSignupCheckNomikoResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ZWAPP_SIGNUP_CHECK_NOMIKO" type="tns:ZWAPP_SIGNUP_CHECK_NOMIKO">
    <wsp:Policy>
      <wsp:PolicyReference URI="#BN_ZWAPP_SIGNUP_CHECK_NOMIKO"/>
    </wsp:Policy>
    <wsa:EndpointReference xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing">
      <wsa:ReferenceParameters/>
    </wsa:EndpointReference>
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="ZWappSignupCheckNomiko">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ZWAPP_SIGNUP_CHECK_NOMIKO">
    <wsdl:port name="ZWAPP_SIGNUP_CHECK_NOMIKO" binding="tns:ZWAPP_SIGNUP_CHECK_NOMIKO">
      <soap:address location="https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_signup_check_nomiko/100/zwapp_signup_check_nomiko/zwapp_signup_check_nomiko"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_signup_check_nomiko/100/zwapp_signup_check_nomiko/zwapp_signup_check_nomiko</con:endpoint></con:endpoints><con:operation id="46883767-b615-4c9b-a338-154460de5d7c" isOneWay="false" action="" name="ZWappSignupCheckNomiko" bindingOperationName="ZWappSignupCheckNomiko" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="631d6e56-3ac8-4e79-93f2-23f63bd01d13" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_signup_check_nomiko/100/zwapp_signup_check_nomiko/zwapp_signup_check_nomiko</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappSignupCheckNomiko>\r
         <Afm>?</Afm>\r
         <BusinessPartnerId>?</BusinessPartnerId>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappSignupCheckNomiko>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_SIGNUP_CHECK_NOMIKO/ZWappSignupCheckNomikoRequest"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="89ae0887-db42-4562-b868-49c7fa4816f0" wsaVersion="NONE" name="ZWAPP_SIGNUP_CHECK_POLLAPLOS" type="wsdl" bindingName="{urn:sap-com:document:sap:soap:functions:mc-style}ZWAPP_SIGNUP_CHECK_POLLAPLOS" soapVersion="1_1" anonymous="optional" definition="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D13A610B0989C0E10080590A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D13A610B0989C0E10080590A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100"><con:part><con:url>http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D13A610B0989C0E10080590A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:n1="urn:sap-com:document:sap:rfc:functions">
  <wsdl:documentation>
    <sidl:sidl xmlns:sidl="http://www.sap.com/2007/03/sidl"/>
  </wsdl:documentation>
  <wsp:UsingPolicy wsdl:required="true"/>
  <wsp:Policy wsu:Id="BN_ZWAPP_SIGNUP_CHECK_POLLAPLOS">
    <saptrnbnd:OptimizedXMLTransfer uri="http://xml.sap.com/2006/11/esi/esp/binxml" wsp:Optional="true" xmlns:saptrnbnd="http://www.sap.com/webas/710/soap/features/transportbinding/"/>
    <wsaw:UsingAddressing xmlns:wsaw="http://schemas.xmlsoap.org/ws/2004/08/addressing"/>
    <sapattahnd:Enabled xmlns:sapattahnd="http://www.sap.com/710/features/attachment/">false</sapattahnd:Enabled>
    <wsp:ExactlyOne xmlns:sapsp="http://www.sap.com/webas/630/soap/features/security/policy" xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/07/utility">
      <wsp:All>
        <sp:TransportBinding>
          <wsp:Policy>
            <sp:TransportToken>
              <wsp:Policy>
                <sp:HttpsToken>
                  <wsp:Policy>
                    <sp:HttpBasicAuthentication/>
                  </wsp:Policy>
                </sp:HttpsToken>
              </wsp:Policy>
            </sp:TransportToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:TripleDesRsa15/>
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Strict/>
              </wsp:Policy>
            </sp:Layout>
          </wsp:Policy>
        </sp:TransportBinding>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsp:Policy wsu:Id="IF_ZWAPP_SIGNUP_CHECK_POLLAPLOS">
    <sapsession:Session xmlns:sapsession="http://www.sap.com/webas/630/soap/features/session/">
      <sapsession:enableSession>false</sapsession:enableSession>
    </sapsession:Session>
    <sapcentraladmin:CentralAdministration wsp:Optional="true" xmlns:sapcentraladmin="http://www.sap.com/webas/700/soap/features/CentralAdministration/">
      <sapcentraladmin:BusinessApplicationID>5A2E8A9B2DED2140E10080000A0B126E</sapcentraladmin:BusinessApplicationID>
    </sapcentraladmin:CentralAdministration>
  </wsp:Policy>
  <wsp:Policy wsu:Id="OP_ZWappSignupCheckPollaplos">
    <sapcomhnd:enableCommit xmlns:sapcomhnd="http://www.sap.com/NW05/soap/features/commit/">false</sapcomhnd:enableCommit>
    <sapblock:enableBlocking xmlns:sapblock="http://www.sap.com/NW05/soap/features/blocking/">true</sapblock:enableBlocking>
    <saptrhnw05:required xmlns:saptrhnw05="http://www.sap.com/NW05/soap/features/transaction/">no</saptrhnw05:required>
    <saprmnw05:enableWSRM xmlns:saprmnw05="http://www.sap.com/NW05/soap/features/wsrm/">false</saprmnw05:enableWSRM>
  </wsp:Policy>
  <wsdl:types>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:rfc:functions">
      <xsd:simpleType name="char10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char20">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char220">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="220"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char23">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="23"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:n0="urn:sap-com:document:sap:rfc:functions">
      <xsd:import namespace="urn:sap-com:document:sap:rfc:functions"/>
      <xsd:simpleType name="char12">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="12"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="numeric10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
          <xsd:pattern value="\d*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ZwebappResult">
        <xsd:sequence>
          <xsd:element name="Code" type="n0:char23"/>
          <xsd:element name="Message" type="n0:char220"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwebappResults">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwebappResult" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ZWappSignupCheckPollaplos">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Afm" type="n0:char20"/>
            <xsd:element name="BusinessPartnerId" type="n0:char10"/>
            <xsd:element name="Pollaplos" type="tns:char12"/>
            <xsd:element name="Source" type="n0:char20" minOccurs="0"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ZWappSignupCheckPollaplosResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="MasterId" type="tns:numeric10"/>
            <xsd:element name="Results" type="tns:ZwebappResults"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ZWappSignupCheckPollaplos">
    <wsdl:part name="parameters" element="tns:ZWappSignupCheckPollaplos"/>
  </wsdl:message>
  <wsdl:message name="ZWappSignupCheckPollaplosResponse">
    <wsdl:part name="parameter" element="tns:ZWappSignupCheckPollaplosResponse"/>
  </wsdl:message>
  <wsdl:portType name="ZWAPP_SIGNUP_CHECK_POLLAPLOS">
    <wsp:Policy>
      <wsp:PolicyReference URI="#IF_ZWAPP_SIGNUP_CHECK_POLLAPLOS"/>
    </wsp:Policy>
    <wsdl:operation name="ZWappSignupCheckPollaplos">
      <wsp:Policy>
        <wsp:PolicyReference URI="#OP_ZWappSignupCheckPollaplos"/>
      </wsp:Policy>
      <wsdl:input message="tns:ZWappSignupCheckPollaplos"/>
      <wsdl:output message="tns:ZWappSignupCheckPollaplosResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ZWAPP_SIGNUP_CHECK_POLLAPLOS" type="tns:ZWAPP_SIGNUP_CHECK_POLLAPLOS">
    <wsp:Policy>
      <wsp:PolicyReference URI="#BN_ZWAPP_SIGNUP_CHECK_POLLAPLOS"/>
    </wsp:Policy>
    <wsa:EndpointReference xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing">
      <wsa:ReferenceParameters/>
    </wsa:EndpointReference>
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="ZWappSignupCheckPollaplos">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ZWAPP_SIGNUP_CHECK_POLLAPLOS">
    <wsdl:port name="ZWAPP_SIGNUP_CHECK_POLLAPLOS" binding="tns:ZWAPP_SIGNUP_CHECK_POLLAPLOS">
      <soap:address location="https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_signup_check_pollaplos/100/zwapp_signup_check_pollaplos/zwapp_signup_check_pollaplos"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_signup_check_pollaplos/100/zwapp_signup_check_pollaplos/zwapp_signup_check_pollaplos</con:endpoint></con:endpoints><con:operation id="62599d08-9402-41f8-b692-a3f7afe84f64" isOneWay="false" action="" name="ZWappSignupCheckPollaplos" bindingOperationName="ZWappSignupCheckPollaplos" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="5fb6474e-5c3b-466e-b283-fcef91e68138" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_signup_check_pollaplos/100/zwapp_signup_check_pollaplos/zwapp_signup_check_pollaplos</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappSignupCheckPollaplos>\r
         <Afm>?</Afm>\r
         <BusinessPartnerId>?</BusinessPartnerId>\r
         <Pollaplos>?</Pollaplos>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappSignupCheckPollaplos>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_SIGNUP_CHECK_POLLAPLOS/ZWappSignupCheckPollaplosRequest"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="43182931-661b-4311-a116-416f12294685" wsaVersion="NONE" name="ZWAPP_SIGNUP_CHECK_DIMOS" type="wsdl" bindingName="{urn:sap-com:document:sap:soap:functions:mc-style}ZWAPP_SIGNUP_CHECK_DIMOS" soapVersion="1_1" anonymous="optional" definition="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D12B440B093440E10080210A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D12B440B093440E10080210A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100"><con:part><con:url>http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D12B440B093440E10080210A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:n1="urn:sap-com:document:sap:rfc:functions">
  <wsdl:documentation>
    <sidl:sidl xmlns:sidl="http://www.sap.com/2007/03/sidl"/>
  </wsdl:documentation>
  <wsp:UsingPolicy wsdl:required="true"/>
  <wsp:Policy wsu:Id="BN_ZWAPP_SIGNUP_CHECK_DIMOS">
    <saptrnbnd:OptimizedXMLTransfer uri="http://xml.sap.com/2006/11/esi/esp/binxml" wsp:Optional="true" xmlns:saptrnbnd="http://www.sap.com/webas/710/soap/features/transportbinding/"/>
    <wsaw:UsingAddressing xmlns:wsaw="http://schemas.xmlsoap.org/ws/2004/08/addressing"/>
    <sapattahnd:Enabled xmlns:sapattahnd="http://www.sap.com/710/features/attachment/">false</sapattahnd:Enabled>
    <wsp:ExactlyOne xmlns:sapsp="http://www.sap.com/webas/630/soap/features/security/policy" xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/07/utility">
      <wsp:All>
        <sp:TransportBinding>
          <wsp:Policy>
            <sp:TransportToken>
              <wsp:Policy>
                <sp:HttpsToken>
                  <wsp:Policy>
                    <sp:HttpBasicAuthentication/>
                  </wsp:Policy>
                </sp:HttpsToken>
              </wsp:Policy>
            </sp:TransportToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:TripleDesRsa15/>
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Strict/>
              </wsp:Policy>
            </sp:Layout>
          </wsp:Policy>
        </sp:TransportBinding>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsp:Policy wsu:Id="IF_ZWAPP_SIGNUP_CHECK_DIMOS">
    <sapsession:Session xmlns:sapsession="http://www.sap.com/webas/630/soap/features/session/">
      <sapsession:enableSession>false</sapsession:enableSession>
    </sapsession:Session>
    <sapcentraladmin:CentralAdministration wsp:Optional="true" xmlns:sapcentraladmin="http://www.sap.com/webas/700/soap/features/CentralAdministration/">
      <sapcentraladmin:BusinessApplicationID>5A2E8A9B2DED2140E10080000A0B126E</sapcentraladmin:BusinessApplicationID>
    </sapcentraladmin:CentralAdministration>
  </wsp:Policy>
  <wsp:Policy wsu:Id="OP_ZWappSignupCheckDimos">
    <sapcomhnd:enableCommit xmlns:sapcomhnd="http://www.sap.com/NW05/soap/features/commit/">false</sapcomhnd:enableCommit>
    <sapblock:enableBlocking xmlns:sapblock="http://www.sap.com/NW05/soap/features/blocking/">true</sapblock:enableBlocking>
    <saptrhnw05:required xmlns:saptrhnw05="http://www.sap.com/NW05/soap/features/transaction/">no</saptrhnw05:required>
    <saprmnw05:enableWSRM xmlns:saprmnw05="http://www.sap.com/NW05/soap/features/wsrm/">false</saprmnw05:enableWSRM>
  </wsp:Policy>
  <wsdl:types>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:rfc:functions">
      <xsd:simpleType name="char20">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char220">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="220"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char23">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="23"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char4">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:n0="urn:sap-com:document:sap:rfc:functions">
      <xsd:import namespace="urn:sap-com:document:sap:rfc:functions"/>
      <xsd:simpleType name="numeric10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
          <xsd:pattern value="\d*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ZwebappResult">
        <xsd:sequence>
          <xsd:element name="Code" type="n0:char23"/>
          <xsd:element name="Message" type="n0:char220"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwebappResults">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwebappResult" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ZWappSignupCheckDimos">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Afm" type="n0:char20"/>
            <xsd:element name="Dimos" type="n0:char4"/>
            <xsd:element name="Source" type="n0:char20" minOccurs="0"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ZWappSignupCheckDimosResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="MasterId" type="tns:numeric10"/>
            <xsd:element name="Results" type="tns:ZwebappResults"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ZWappSignupCheckDimos">
    <wsdl:part name="parameters" element="tns:ZWappSignupCheckDimos"/>
  </wsdl:message>
  <wsdl:message name="ZWappSignupCheckDimosResponse">
    <wsdl:part name="parameter" element="tns:ZWappSignupCheckDimosResponse"/>
  </wsdl:message>
  <wsdl:portType name="ZWAPP_SIGNUP_CHECK_DIMOS">
    <wsp:Policy>
      <wsp:PolicyReference URI="#IF_ZWAPP_SIGNUP_CHECK_DIMOS"/>
    </wsp:Policy>
    <wsdl:operation name="ZWappSignupCheckDimos">
      <wsp:Policy>
        <wsp:PolicyReference URI="#OP_ZWappSignupCheckDimos"/>
      </wsp:Policy>
      <wsdl:input message="tns:ZWappSignupCheckDimos"/>
      <wsdl:output message="tns:ZWappSignupCheckDimosResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ZWAPP_SIGNUP_CHECK_DIMOS" type="tns:ZWAPP_SIGNUP_CHECK_DIMOS">
    <wsp:Policy>
      <wsp:PolicyReference URI="#BN_ZWAPP_SIGNUP_CHECK_DIMOS"/>
    </wsp:Policy>
    <wsa:EndpointReference xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing">
      <wsa:ReferenceParameters/>
    </wsa:EndpointReference>
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="ZWappSignupCheckDimos">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ZWAPP_SIGNUP_CHECK_DIMOS">
    <wsdl:port name="ZWAPP_SIGNUP_CHECK_DIMOS" binding="tns:ZWAPP_SIGNUP_CHECK_DIMOS">
      <soap:address location="https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_signup_check_dimos/100/zwapp_signup_check_dimos/zwapp_signup_check_dimos"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_signup_check_dimos/100/zwapp_signup_check_dimos/zwapp_signup_check_dimos</con:endpoint></con:endpoints><con:operation id="c9b6ce7b-329e-4242-afad-5623155de8d8" isOneWay="false" action="" name="ZWappSignupCheckDimos" bindingOperationName="ZWappSignupCheckDimos" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="4c6e2953-7e45-4034-802c-2cec3c28593e" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_signup_check_dimos/100/zwapp_signup_check_dimos/zwapp_signup_check_dimos</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappSignupCheckDimos>\r
         <Afm>?</Afm>\r
         <Dimos>?</Dimos>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappSignupCheckDimos>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_SIGNUP_CHECK_DIMOS/ZWappSignupCheckDimosRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="229043ae-bb21-4ef6-8857-d4ee1e09dfaa" wsaVersion="NONE" name="ZWAPP_SIGNUP_CHECK_KOINOXRIST" type="wsdl" bindingName="{urn:sap-com:document:sap:soap:functions:mc-style}ZWAPP_SIGNUP_CHECK_KOINOXRIST" soapVersion="1_1" anonymous="optional" definition="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D1F3730B095780E100807E0A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D1F3730B095780E100807E0A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100"><con:part><con:url>http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D1F3730B095780E100807E0A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:n1="urn:sap-com:document:sap:rfc:functions">
  <wsdl:documentation>
    <sidl:sidl xmlns:sidl="http://www.sap.com/2007/03/sidl"/>
  </wsdl:documentation>
  <wsp:UsingPolicy wsdl:required="true"/>
  <wsp:Policy wsu:Id="BN_ZWAPP_SIGNUP_CHECK_KOINOXRIST">
    <saptrnbnd:OptimizedXMLTransfer uri="http://xml.sap.com/2006/11/esi/esp/binxml" wsp:Optional="true" xmlns:saptrnbnd="http://www.sap.com/webas/710/soap/features/transportbinding/"/>
    <wsaw:UsingAddressing xmlns:wsaw="http://schemas.xmlsoap.org/ws/2004/08/addressing"/>
    <sapattahnd:Enabled xmlns:sapattahnd="http://www.sap.com/710/features/attachment/">false</sapattahnd:Enabled>
    <wsp:ExactlyOne xmlns:sapsp="http://www.sap.com/webas/630/soap/features/security/policy" xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/07/utility">
      <wsp:All>
        <sp:TransportBinding>
          <wsp:Policy>
            <sp:TransportToken>
              <wsp:Policy>
                <sp:HttpsToken>
                  <wsp:Policy>
                    <sp:HttpBasicAuthentication/>
                  </wsp:Policy>
                </sp:HttpsToken>
              </wsp:Policy>
            </sp:TransportToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:TripleDesRsa15/>
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Strict/>
              </wsp:Policy>
            </sp:Layout>
          </wsp:Policy>
        </sp:TransportBinding>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsp:Policy wsu:Id="IF_ZWAPP_SIGNUP_CHECK_KOINOXRIST">
    <sapsession:Session xmlns:sapsession="http://www.sap.com/webas/630/soap/features/session/">
      <sapsession:enableSession>false</sapsession:enableSession>
    </sapsession:Session>
    <sapcentraladmin:CentralAdministration wsp:Optional="true" xmlns:sapcentraladmin="http://www.sap.com/webas/700/soap/features/CentralAdministration/">
      <sapcentraladmin:BusinessApplicationID>5A2E8A9B2DED2140E10080000A0B126E</sapcentraladmin:BusinessApplicationID>
    </sapcentraladmin:CentralAdministration>
  </wsp:Policy>
  <wsp:Policy wsu:Id="OP_ZWappSignupCheckKoinoxrist">
    <sapcomhnd:enableCommit xmlns:sapcomhnd="http://www.sap.com/NW05/soap/features/commit/">false</sapcomhnd:enableCommit>
    <sapblock:enableBlocking xmlns:sapblock="http://www.sap.com/NW05/soap/features/blocking/">true</sapblock:enableBlocking>
    <saptrhnw05:required xmlns:saptrhnw05="http://www.sap.com/NW05/soap/features/transaction/">no</saptrhnw05:required>
    <saprmnw05:enableWSRM xmlns:saprmnw05="http://www.sap.com/NW05/soap/features/wsrm/">false</saprmnw05:enableWSRM>
  </wsp:Policy>
  <wsdl:types>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:rfc:functions">
      <xsd:simpleType name="char10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char20">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char220">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="220"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char23">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="23"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:n0="urn:sap-com:document:sap:rfc:functions">
      <xsd:import namespace="urn:sap-com:document:sap:rfc:functions"/>
      <xsd:simpleType name="numeric10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
          <xsd:pattern value="\d*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ZwebappResult">
        <xsd:sequence>
          <xsd:element name="Code" type="n0:char23"/>
          <xsd:element name="Message" type="n0:char220"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwebappResults">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwebappResult" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ZWappSignupCheckKoinoxrist">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Afm" type="n0:char20"/>
            <xsd:element name="BusinessPartnerId" type="n0:char10"/>
            <xsd:element name="Source" type="n0:char20" minOccurs="0"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ZWappSignupCheckKoinoxristResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="MasterId" type="tns:numeric10"/>
            <xsd:element name="Results" type="tns:ZwebappResults"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ZWappSignupCheckKoinoxrist">
    <wsdl:part name="parameters" element="tns:ZWappSignupCheckKoinoxrist"/>
  </wsdl:message>
  <wsdl:message name="ZWappSignupCheckKoinoxristResponse">
    <wsdl:part name="parameter" element="tns:ZWappSignupCheckKoinoxristResponse"/>
  </wsdl:message>
  <wsdl:portType name="ZWAPP_SIGNUP_CHECK_KOINOXRIST">
    <wsp:Policy>
      <wsp:PolicyReference URI="#IF_ZWAPP_SIGNUP_CHECK_KOINOXRIST"/>
    </wsp:Policy>
    <wsdl:operation name="ZWappSignupCheckKoinoxrist">
      <wsp:Policy>
        <wsp:PolicyReference URI="#OP_ZWappSignupCheckKoinoxrist"/>
      </wsp:Policy>
      <wsdl:input message="tns:ZWappSignupCheckKoinoxrist"/>
      <wsdl:output message="tns:ZWappSignupCheckKoinoxristResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ZWAPP_SIGNUP_CHECK_KOINOXRIST" type="tns:ZWAPP_SIGNUP_CHECK_KOINOXRIST">
    <wsp:Policy>
      <wsp:PolicyReference URI="#BN_ZWAPP_SIGNUP_CHECK_KOINOXRIST"/>
    </wsp:Policy>
    <wsa:EndpointReference xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing">
      <wsa:ReferenceParameters/>
    </wsa:EndpointReference>
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="ZWappSignupCheckKoinoxrist">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ZWAPP_SIGNUP_CHECK_KOINOXRIST">
    <wsdl:port name="ZWAPP_SIGNUP_CHECK_KOINOXRIST" binding="tns:ZWAPP_SIGNUP_CHECK_KOINOXRIST">
      <soap:address location="https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_signup_check_koinoxrist/100/zwapp_signup_check_koinoxrist/zwapp_signup_check_koinoxrist"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_signup_check_koinoxrist/100/zwapp_signup_check_koinoxrist/zwapp_signup_check_koinoxrist</con:endpoint></con:endpoints><con:operation id="dceade39-9205-4c9b-b23a-44fcb463550a" isOneWay="false" action="" name="ZWappSignupCheckKoinoxrist" bindingOperationName="ZWappSignupCheckKoinoxrist" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="1512015e-631f-4ea1-ae43-aa1b8490ea39" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_signup_check_koinoxrist/100/zwapp_signup_check_koinoxrist/zwapp_signup_check_koinoxrist</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappSignupCheckKoinoxrist>\r
         <Afm>?</Afm>\r
         <BusinessPartnerId>?</BusinessPartnerId>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappSignupCheckKoinoxrist>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_SIGNUP_CHECK_KOINOXRIST/ZWappSignupCheckKoinoxristRequest"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="9a298e91-f611-4e08-98a0-061b7811b40f" wsaVersion="NONE" name="ZWAPP_INSERT_CA_SELF_METERING" type="wsdl" bindingName="{urn:sap-com:document:sap:soap:functions:mc-style}ZWAPP_INSERT_CA_SELF_METERING" soapVersion="1_1" anonymous="optional" definition="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D17EA40B0962C0E10080380A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D17EA40B0962C0E10080380A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100"><con:part><con:url>http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D17EA40B0962C0E10080380A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:n1="urn:sap-com:document:sap:rfc:functions">
  <wsdl:documentation>
    <sidl:sidl xmlns:sidl="http://www.sap.com/2007/03/sidl"/>
  </wsdl:documentation>
  <wsp:UsingPolicy wsdl:required="true"/>
  <wsp:Policy wsu:Id="BN_ZWAPP_INSERT_CA_SELF_METERING">
    <saptrnbnd:OptimizedXMLTransfer uri="http://xml.sap.com/2006/11/esi/esp/binxml" wsp:Optional="true" xmlns:saptrnbnd="http://www.sap.com/webas/710/soap/features/transportbinding/"/>
    <wsaw:UsingAddressing xmlns:wsaw="http://schemas.xmlsoap.org/ws/2004/08/addressing"/>
    <sapattahnd:Enabled xmlns:sapattahnd="http://www.sap.com/710/features/attachment/">false</sapattahnd:Enabled>
    <wsp:ExactlyOne xmlns:sapsp="http://www.sap.com/webas/630/soap/features/security/policy" xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/07/utility">
      <wsp:All>
        <sp:TransportBinding>
          <wsp:Policy>
            <sp:TransportToken>
              <wsp:Policy>
                <sp:HttpsToken>
                  <wsp:Policy>
                    <sp:HttpBasicAuthentication/>
                  </wsp:Policy>
                </sp:HttpsToken>
              </wsp:Policy>
            </sp:TransportToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:TripleDesRsa15/>
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Strict/>
              </wsp:Policy>
            </sp:Layout>
          </wsp:Policy>
        </sp:TransportBinding>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsp:Policy wsu:Id="IF_ZWAPP_INSERT_CA_SELF_METERING">
    <sapsession:Session xmlns:sapsession="http://www.sap.com/webas/630/soap/features/session/">
      <sapsession:enableSession>false</sapsession:enableSession>
    </sapsession:Session>
    <sapcentraladmin:CentralAdministration wsp:Optional="true" xmlns:sapcentraladmin="http://www.sap.com/webas/700/soap/features/CentralAdministration/">
      <sapcentraladmin:BusinessApplicationID>5A2E8A9B2DED2140E10080000A0B126E</sapcentraladmin:BusinessApplicationID>
    </sapcentraladmin:CentralAdministration>
  </wsp:Policy>
  <wsp:Policy wsu:Id="OP_ZWappInsertCaSelfMetering">
    <sapcomhnd:enableCommit xmlns:sapcomhnd="http://www.sap.com/NW05/soap/features/commit/">false</sapcomhnd:enableCommit>
    <sapblock:enableBlocking xmlns:sapblock="http://www.sap.com/NW05/soap/features/blocking/">true</sapblock:enableBlocking>
    <saptrhnw05:required xmlns:saptrhnw05="http://www.sap.com/NW05/soap/features/transaction/">no</saptrhnw05:required>
    <saprmnw05:enableWSRM xmlns:saprmnw05="http://www.sap.com/NW05/soap/features/wsrm/">false</saprmnw05:enableWSRM>
  </wsp:Policy>
  <wsdl:types>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:rfc:functions">
      <xsd:simpleType name="char12">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="12"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char20">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char200">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="200"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char4">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="date10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
          <xsd:pattern value="\d\d\d\d-\d\d-\d\d"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="decimal17.0">
        <xsd:restriction base="xsd:decimal">
          <xsd:totalDigits value="17"/>
          <xsd:fractionDigits value="0"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:n0="urn:sap-com:document:sap:rfc:functions">
      <xsd:import namespace="urn:sap-com:document:sap:rfc:functions"/>
      <xsd:element name="ZWappInsertCaSelfMetering">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="CmrDate" type="n0:date10"/>
            <xsd:element name="CmrDayResult" type="n0:decimal17.0"/>
            <xsd:element name="CmrNightResult" type="n0:decimal17.0"/>
            <xsd:element name="ContractAccount" type="n0:char12"/>
            <xsd:element name="Source" type="n0:char20"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ZWappInsertCaSelfMeteringResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="ResultCode" type="n0:char4"/>
            <xsd:element name="ResultMessage" type="n0:char200"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ZWappInsertCaSelfMetering">
    <wsdl:part name="parameters" element="tns:ZWappInsertCaSelfMetering"/>
  </wsdl:message>
  <wsdl:message name="ZWappInsertCaSelfMeteringResponse">
    <wsdl:part name="parameter" element="tns:ZWappInsertCaSelfMeteringResponse"/>
  </wsdl:message>
  <wsdl:portType name="ZWAPP_INSERT_CA_SELF_METERING">
    <wsp:Policy>
      <wsp:PolicyReference URI="#IF_ZWAPP_INSERT_CA_SELF_METERING"/>
    </wsp:Policy>
    <wsdl:operation name="ZWappInsertCaSelfMetering">
      <wsp:Policy>
        <wsp:PolicyReference URI="#OP_ZWappInsertCaSelfMetering"/>
      </wsp:Policy>
      <wsdl:input message="tns:ZWappInsertCaSelfMetering"/>
      <wsdl:output message="tns:ZWappInsertCaSelfMeteringResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ZWAPP_INSERT_CA_SELF_METERING" type="tns:ZWAPP_INSERT_CA_SELF_METERING">
    <wsp:Policy>
      <wsp:PolicyReference URI="#BN_ZWAPP_INSERT_CA_SELF_METERING"/>
    </wsp:Policy>
    <wsa:EndpointReference xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing">
      <wsa:ReferenceParameters/>
    </wsa:EndpointReference>
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="ZWappInsertCaSelfMetering">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ZWAPP_INSERT_CA_SELF_METERING">
    <wsdl:port name="ZWAPP_INSERT_CA_SELF_METERING" binding="tns:ZWAPP_INSERT_CA_SELF_METERING">
      <soap:address location="https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_insert_ca_self_metering/100/zwapp_insert_ca_self_metering/zwapp_insert_ca_self_metering"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_insert_ca_self_metering/100/zwapp_insert_ca_self_metering/zwapp_insert_ca_self_metering</con:endpoint></con:endpoints><con:operation id="937bfa7c-d549-49e3-ad47-37251ec296fa" isOneWay="false" action="" name="ZWappInsertCaSelfMetering" bindingOperationName="ZWappInsertCaSelfMetering" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="536efc2a-efd3-4ef5-936f-2df0dd5a0832" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_insert_ca_self_metering/100/zwapp_insert_ca_self_metering/zwapp_insert_ca_self_metering</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappInsertCaSelfMetering>\r
         <CmrDate>KARFOTI</CmrDate>\r
         <CmrDayResult>KARFOTO</CmrDayResult>\r
         <CmrNightResult>KARFOTO</CmrNightResult>\r
         <ContractAccount>?</ContractAccount>\r
         <Source>?</Source>\r
      </urn:ZWappInsertCaSelfMetering>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_INSERT_CA_SELF_METERING/ZWappInsertCaSelfMeteringRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="07463fb4-716a-4408-b663-b544380d9363" wsaVersion="NONE" name="ZWAPP_UPDATE_MTRNG_DATA_NOTIF" type="wsdl" bindingName="{urn:sap-com:document:sap:soap:functions:mc-style}ZWAPP_UPDATE_MTRNG_DATA_NOTIF" soapVersion="1_1" anonymous="optional" definition="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D19B310B097A40E10080000A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D19B310B097A40E10080000A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100"><con:part><con:url>http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D19B310B097A40E10080000A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:n1="urn:sap-com:document:sap:rfc:functions">
  <wsdl:documentation>
    <sidl:sidl xmlns:sidl="http://www.sap.com/2007/03/sidl"/>
  </wsdl:documentation>
  <wsp:UsingPolicy wsdl:required="true"/>
  <wsp:Policy wsu:Id="BN_ZWAPP_UPDATE_MTRNG_DATA_NOTIF">
    <wsaw:UsingAddressing xmlns:wsaw="http://schemas.xmlsoap.org/ws/2004/08/addressing"/>
    <saptrnbnd:OptimizedXMLTransfer uri="http://xml.sap.com/2006/11/esi/esp/binxml" wsp:Optional="true" xmlns:saptrnbnd="http://www.sap.com/webas/710/soap/features/transportbinding/"/>
    <sapattahnd:Enabled xmlns:sapattahnd="http://www.sap.com/710/features/attachment/">false</sapattahnd:Enabled>
    <wsp:ExactlyOne xmlns:sapsp="http://www.sap.com/webas/630/soap/features/security/policy" xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/07/utility">
      <wsp:All>
        <sp:TransportBinding>
          <wsp:Policy>
            <sp:TransportToken>
              <wsp:Policy>
                <sp:HttpsToken>
                  <wsp:Policy>
                    <sp:HttpBasicAuthentication/>
                  </wsp:Policy>
                </sp:HttpsToken>
              </wsp:Policy>
            </sp:TransportToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:TripleDesRsa15/>
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Strict/>
              </wsp:Policy>
            </sp:Layout>
          </wsp:Policy>
        </sp:TransportBinding>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsp:Policy wsu:Id="IF_ZWAPP_UPDATE_MTRNG_DATA_NOTIF">
    <sapsession:Session xmlns:sapsession="http://www.sap.com/webas/630/soap/features/session/">
      <sapsession:enableSession>false</sapsession:enableSession>
    </sapsession:Session>
    <sapcentraladmin:CentralAdministration wsp:Optional="true" xmlns:sapcentraladmin="http://www.sap.com/webas/700/soap/features/CentralAdministration/">
      <sapcentraladmin:BusinessApplicationID>5A2E8A9B2DED2140E10080000A0B126E</sapcentraladmin:BusinessApplicationID>
    </sapcentraladmin:CentralAdministration>
  </wsp:Policy>
  <wsp:Policy wsu:Id="OP_ZWappUpdateMtrngDataNotif">
    <sapcomhnd:enableCommit xmlns:sapcomhnd="http://www.sap.com/NW05/soap/features/commit/">false</sapcomhnd:enableCommit>
    <sapblock:enableBlocking xmlns:sapblock="http://www.sap.com/NW05/soap/features/blocking/">true</sapblock:enableBlocking>
    <saptrhnw05:required xmlns:saptrhnw05="http://www.sap.com/NW05/soap/features/transaction/">no</saptrhnw05:required>
    <saprmnw05:enableWSRM xmlns:saprmnw05="http://www.sap.com/NW05/soap/features/wsrm/">false</saprmnw05:enableWSRM>
  </wsp:Policy>
  <wsdl:types>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:rfc:functions">
      <xsd:simpleType name="char1">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char12">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="12"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char20">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char200">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="200"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char4">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:n0="urn:sap-com:document:sap:rfc:functions">
      <xsd:import namespace="urn:sap-com:document:sap:rfc:functions"/>
      <xsd:element name="ZWappUpdateMtrngDataNotif">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="ContractAccount" type="n0:char12"/>
            <xsd:element name="Email" type="n0:char1"/>
            <xsd:element name="Sms" type="n0:char1"/>
            <xsd:element name="Source" type="n0:char20"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ZWappUpdateMtrngDataNotifResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="ResultCode" type="n0:char4"/>
            <xsd:element name="ResultMessage" type="n0:char200"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ZWappUpdateMtrngDataNotif">
    <wsdl:part name="parameters" element="tns:ZWappUpdateMtrngDataNotif"/>
  </wsdl:message>
  <wsdl:message name="ZWappUpdateMtrngDataNotifResponse">
    <wsdl:part name="parameter" element="tns:ZWappUpdateMtrngDataNotifResponse"/>
  </wsdl:message>
  <wsdl:portType name="ZWAPP_UPDATE_MTRNG_DATA_NOTIF">
    <wsp:Policy>
      <wsp:PolicyReference URI="#IF_ZWAPP_UPDATE_MTRNG_DATA_NOTIF"/>
    </wsp:Policy>
    <wsdl:operation name="ZWappUpdateMtrngDataNotif">
      <wsp:Policy>
        <wsp:PolicyReference URI="#OP_ZWappUpdateMtrngDataNotif"/>
      </wsp:Policy>
      <wsdl:input message="tns:ZWappUpdateMtrngDataNotif"/>
      <wsdl:output message="tns:ZWappUpdateMtrngDataNotifResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ZWAPP_UPDATE_MTRNG_DATA_NOTIF" type="tns:ZWAPP_UPDATE_MTRNG_DATA_NOTIF">
    <wsp:Policy>
      <wsp:PolicyReference URI="#BN_ZWAPP_UPDATE_MTRNG_DATA_NOTIF"/>
    </wsp:Policy>
    <wsa:EndpointReference xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing">
      <wsa:ReferenceParameters/>
    </wsa:EndpointReference>
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="ZWappUpdateMtrngDataNotif">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ZWAPP_UPDATE_MTRNG_DATA_NOTIF">
    <wsdl:port name="ZWAPP_UPDATE_MTRNG_DATA_NOTIF" binding="tns:ZWAPP_UPDATE_MTRNG_DATA_NOTIF">
      <soap:address location="https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_update_mtrng_data_notif/100/zwapp_update_mtrng_data_notif/zwapp_update_mtrng_data_notif"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_update_mtrng_data_notif/100/zwapp_update_mtrng_data_notif/zwapp_update_mtrng_data_notif</con:endpoint></con:endpoints><con:operation id="7f70eca8-2f57-4ba2-8105-ca7e2f102e46" isOneWay="false" action="" name="ZWappUpdateMtrngDataNotif" bindingOperationName="ZWappUpdateMtrngDataNotif" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="01cdbd37-4a67-4c96-bb3d-131dd4be6fd6" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_update_mtrng_data_notif/100/zwapp_update_mtrng_data_notif/zwapp_update_mtrng_data_notif</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappUpdateMtrngDataNotif>\r
         <ContractAccount>?</ContractAccount>\r
         <Email>?</Email>\r
         <Sms>?</Sms>\r
         <Source>?</Source>\r
      </urn:ZWappUpdateMtrngDataNotif>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_UPDATE_MTRNG_DATA_NOTIF/ZWappUpdateMtrngDataNotifRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="44e5a66b-ae7b-4321-8e9b-7b84303837db" wsaVersion="NONE" name="ZWAPP_GET_CUSTOMER_DETAILS_MID" type="wsdl" bindingName="{urn:sap-com:document:sap:soap:functions:mc-style}ZWAPP_GET_CUSTOMER_DETAILS_MID" soapVersion="1_1" anonymous="optional" definition="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_618911222B4A7AC0E10080580A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_618911222B4A7AC0E10080580A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100"><con:part><con:url>http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_618911222B4A7AC0E10080580A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:n1="urn:sap-com:document:sap:rfc:functions">
  <wsdl:documentation>
    <sidl:sidl xmlns:sidl="http://www.sap.com/2007/03/sidl"/>
  </wsdl:documentation>
  <wsp:UsingPolicy wsdl:required="true"/>
  <wsp:Policy wsu:Id="BN_ZWAPP_GET_CUSTOMER_DETAILS_MID">
    <wsaw:UsingAddressing xmlns:wsaw="http://schemas.xmlsoap.org/ws/2004/08/addressing"/>
    <saptrnbnd:OptimizedXMLTransfer uri="http://xml.sap.com/2006/11/esi/esp/binxml" wsp:Optional="true" xmlns:saptrnbnd="http://www.sap.com/webas/710/soap/features/transportbinding/"/>
    <sapattahnd:Enabled xmlns:sapattahnd="http://www.sap.com/710/features/attachment/">false</sapattahnd:Enabled>
    <wsp:ExactlyOne xmlns:sapsp="http://www.sap.com/webas/630/soap/features/security/policy" xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/07/utility">
      <wsp:All>
        <sp:TransportBinding>
          <wsp:Policy>
            <sp:TransportToken>
              <wsp:Policy>
                <sp:HttpsToken>
                  <wsp:Policy>
                    <sp:HttpBasicAuthentication/>
                  </wsp:Policy>
                </sp:HttpsToken>
              </wsp:Policy>
            </sp:TransportToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:TripleDesRsa15/>
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Strict/>
              </wsp:Policy>
            </sp:Layout>
          </wsp:Policy>
        </sp:TransportBinding>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsp:Policy wsu:Id="IF_ZWAPP_GET_CUSTOMER_DETAILS_MID">
    <sapsession:Session xmlns:sapsession="http://www.sap.com/webas/630/soap/features/session/">
      <sapsession:enableSession>false</sapsession:enableSession>
    </sapsession:Session>
    <sapcentraladmin:CentralAdministration wsp:Optional="true" xmlns:sapcentraladmin="http://www.sap.com/webas/700/soap/features/CentralAdministration/">
      <sapcentraladmin:BusinessApplicationID>5A2E8A9B2DED2140E10080000A0B126E</sapcentraladmin:BusinessApplicationID>
    </sapcentraladmin:CentralAdministration>
  </wsp:Policy>
  <wsp:Policy wsu:Id="OP_ZWappGetCustomerDetlsMid">
    <sapcomhnd:enableCommit xmlns:sapcomhnd="http://www.sap.com/NW05/soap/features/commit/">false</sapcomhnd:enableCommit>
    <sapblock:enableBlocking xmlns:sapblock="http://www.sap.com/NW05/soap/features/blocking/">true</sapblock:enableBlocking>
    <saptrhnw05:required xmlns:saptrhnw05="http://www.sap.com/NW05/soap/features/transaction/">no</saptrhnw05:required>
    <saprmnw05:enableWSRM xmlns:saprmnw05="http://www.sap.com/NW05/soap/features/wsrm/">false</saprmnw05:enableWSRM>
  </wsp:Policy>
  <wsdl:types>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:rfc:functions">
      <xsd:simpleType name="char1">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char100">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="100"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char12">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="12"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char132">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="132"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char16">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="16"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char20">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char200">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="200"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char241">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="241"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char25">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="25"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char3">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="3"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char30">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="30"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char4">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char40">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="40"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char5">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="5"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char50">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="50"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char6">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="6"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char60">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="60"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char80">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="80"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="date10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
          <xsd:pattern value="\d\d\d\d-\d\d-\d\d"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="numeric1">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
          <xsd:pattern value="\d*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="numeric10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
          <xsd:pattern value="\d*"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:n0="urn:sap-com:document:sap:rfc:functions">
      <xsd:import namespace="urn:sap-com:document:sap:rfc:functions"/>
      <xsd:complexType name="ZwappCustomerDetailsDeepS">
        <xsd:sequence>
          <xsd:element name="BusinessPartnerId" type="n0:char10"/>
          <xsd:element name="CategoryId" type="n0:char1"/>
          <xsd:element name="CategoryDesc" type="n0:char30"/>
          <xsd:element name="RoleId" type="n0:char6"/>
          <xsd:element name="RoleDesc" type="n0:char50"/>
          <xsd:element name="TitleId" type="n0:char4"/>
          <xsd:element name="TitleDesc" type="n0:char30"/>
          <xsd:element name="Name" type="n0:char40"/>
          <xsd:element name="Surname" type="n0:char40"/>
          <xsd:element name="FthName" type="n0:char40"/>
          <xsd:element name="CompanyName" type="n0:char100"/>
          <xsd:element name="BirthDate" type="n0:date10"/>
          <xsd:element name="AuthRepresentative" type="n0:char80"/>
          <xsd:element name="MunicipId" type="n0:char25"/>
          <xsd:element name="CollectiveCa" type="n0:char12"/>
          <xsd:element name="MyaccountMobileNumber" type="n0:char16"/>
          <xsd:element name="MyaccountEmail" type="n0:char132"/>
          <xsd:element name="BpCommunication" type="tns:ZwappCustomerCommInfoSt"/>
          <xsd:element name="BpIdDocuments" type="tns:ZwappCustomerIdDocumentSt"/>
          <xsd:element name="BpTaxInfo" type="tns:ZwappCustomerTaxInfoSt"/>
          <xsd:element name="BpAddresses" type="tns:ZwappCustomerAddressSt"/>
          <xsd:element name="BpPaymentCards" type="tns:ZwappCustomerPaymentCardSt"/>
          <xsd:element name="ExceptionReasonDesc" type="n0:char50"/>
          <xsd:element name="ExceptionReason" type="n0:numeric1"/>
          <xsd:element name="GdprApproval" type="n0:char1"/>
          <xsd:element name="GdprNotApproval" type="n0:char1"/>
          <xsd:element name="GdprSms" type="n0:char1"/>
          <xsd:element name="GdprEmail" type="n0:char1"/>
          <xsd:element name="GdprPhone" type="n0:char1"/>
          <xsd:element name="GdprPost" type="n0:char1"/>
          <xsd:element name="GdprAll" type="n0:char1"/>
          <xsd:element name="GdprGasApproval" type="n0:char1"/>
          <xsd:element name="GdprGasNotApproval" type="n0:char1"/>
          <xsd:element name="GdprGasSms" type="n0:char1"/>
          <xsd:element name="GdprGasEmail" type="n0:char1"/>
          <xsd:element name="GdprGasPhone" type="n0:char1"/>
          <xsd:element name="GdprGasPost" type="n0:char1"/>
          <xsd:element name="GdprGasAll" type="n0:char1"/>
          <xsd:element name="GdprResearchApproval" type="n0:char1"/>
          <xsd:element name="GdprResearchNotApproval" type="n0:char1"/>
          <xsd:element name="GdprCanceled" type="n0:char1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappCustomerCommInfoS">
        <xsd:sequence>
          <xsd:element name="PhoneCountryId" type="n0:char3"/>
          <xsd:element name="PhoneCountryTelCode" type="n0:char5"/>
          <xsd:element name="PhoneNumber" type="n0:char30"/>
          <xsd:element name="MobCountryId" type="n0:char3"/>
          <xsd:element name="MobCountryTelCode" type="n0:char5"/>
          <xsd:element name="MobileNumber" type="n0:char30"/>
          <xsd:element name="Email" type="n0:char241"/>
          <xsd:element name="DefaultComm" type="n0:char1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappCustomerIdDocumentS">
        <xsd:sequence>
          <xsd:element name="DocTypeId" type="n0:char6"/>
          <xsd:element name="DocTypeDesc" type="n0:char40"/>
          <xsd:element name="IdNumber" type="n0:char60"/>
          <xsd:element name="Institute" type="n0:char40"/>
          <xsd:element name="EntryDate" type="n0:date10"/>
          <xsd:element name="ValidDateFrom" type="n0:date10"/>
          <xsd:element name="ValidDateTo" type="n0:date10"/>
          <xsd:element name="Country" type="n0:char3"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappCustomerTaxInfoS">
        <xsd:sequence>
          <xsd:element name="TaxTypeId" type="n0:char4"/>
          <xsd:element name="TaxTypeDesc" type="n0:char40"/>
          <xsd:element name="DoyNumber" type="n0:char20"/>
          <xsd:element name="AfmNumber" type="n0:char20"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappCustomerAddressS">
        <xsd:sequence>
          <xsd:element name="AddrType" type="n0:char30"/>
          <xsd:element name="Street" type="n0:char60"/>
          <xsd:element name="HouseNumber" type="n0:char10"/>
          <xsd:element name="PostalCode" type="n0:char10"/>
          <xsd:element name="City" type="n0:char40"/>
          <xsd:element name="Region" type="n0:char20"/>
          <xsd:element name="RegionId" type="n0:char3"/>
          <xsd:element name="PoBox" type="n0:char10"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappCustomerPaymentCardS">
        <xsd:sequence>
          <xsd:element name="CardId" type="n0:char6"/>
          <xsd:element name="CardType" type="n0:char4"/>
          <xsd:element name="CardTypeDesc" type="n0:char30"/>
          <xsd:element name="CardNumber" type="n0:char25"/>
          <xsd:element name="DefaultCard" type="n0:char1"/>
          <xsd:element name="CardDescription" type="n0:char40"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappCustomerDetailsDeepSt">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwappCustomerDetailsDeepS" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappCustomerCommInfoSt">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwappCustomerCommInfoS" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappCustomerIdDocumentSt">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwappCustomerIdDocumentS" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappCustomerTaxInfoSt">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwappCustomerTaxInfoS" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappCustomerAddressSt">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwappCustomerAddressS" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappCustomerPaymentCardSt">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwappCustomerPaymentCardS" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ZWappGetCustomerDetlsMid">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="MasterId" type="n0:numeric10"/>
            <xsd:element name="Source" type="n0:char20" minOccurs="0"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ZWappGetCustomerDetlsMidResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="CustomersDetails" type="tns:ZwappCustomerDetailsDeepSt"/>
            <xsd:element name="ResultCode" type="n0:char4"/>
            <xsd:element name="ResultMessage" type="n0:char200"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ZWappGetCustomerDetlsMid">
    <wsdl:part name="parameters" element="tns:ZWappGetCustomerDetlsMid"/>
  </wsdl:message>
  <wsdl:message name="ZWappGetCustomerDetlsMidResponse">
    <wsdl:part name="parameter" element="tns:ZWappGetCustomerDetlsMidResponse"/>
  </wsdl:message>
  <wsdl:portType name="ZWAPP_GET_CUSTOMER_DETAILS_MID">
    <wsp:Policy>
      <wsp:PolicyReference URI="#IF_ZWAPP_GET_CUSTOMER_DETAILS_MID"/>
    </wsp:Policy>
    <wsdl:operation name="ZWappGetCustomerDetlsMid">
      <wsp:Policy>
        <wsp:PolicyReference URI="#OP_ZWappGetCustomerDetlsMid"/>
      </wsp:Policy>
      <wsdl:input message="tns:ZWappGetCustomerDetlsMid"/>
      <wsdl:output message="tns:ZWappGetCustomerDetlsMidResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ZWAPP_GET_CUSTOMER_DETAILS_MID" type="tns:ZWAPP_GET_CUSTOMER_DETAILS_MID">
    <wsp:Policy>
      <wsp:PolicyReference URI="#BN_ZWAPP_GET_CUSTOMER_DETAILS_MID"/>
    </wsp:Policy>
    <wsa:EndpointReference xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing">
      <wsa:ReferenceParameters/>
    </wsa:EndpointReference>
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="ZWappGetCustomerDetlsMid">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ZWAPP_GET_CUSTOMER_DETAILS_MID">
    <wsdl:port name="ZWAPP_GET_CUSTOMER_DETAILS_MID" binding="tns:ZWAPP_GET_CUSTOMER_DETAILS_MID">
      <soap:address location="https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_customer_details_mid/100/zwapp_get_customer_details_mid/zwapp_get_customer_details_mid"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_customer_details_mid/100/zwapp_get_customer_details_mid/zwapp_get_customer_details_mid</con:endpoint></con:endpoints><con:operation id="373d37ea-bece-4738-a61c-ede8c03d2297" isOneWay="false" action="" name="ZWappGetCustomerDetlsMid" bindingOperationName="ZWappGetCustomerDetlsMid" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="201bfa18-4614-42a4-afab-648004124bda" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_customer_details_mid/100/zwapp_get_customer_details_mid/zwapp_get_customer_details_mid</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetCustomerDetlsMid>\r
         <MasterId>?</MasterId>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetCustomerDetlsMid>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_DETAILS_MID/ZWappGetCustomerDetlsMidRequest"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="526cf812-5287-466f-a858-aeeeb2273834" wsaVersion="NONE" name="ZWAPP_SELECT_CA_BILL_ADDRESSES" type="wsdl" bindingName="{urn:sap-com:document:sap:soap:functions:mc-style}ZWAPP_SELECT_CA_BILL_ADDRESSES" soapVersion="1_1" anonymous="optional" definition="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_618861D3FEC54480E10080680A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_618861D3FEC54480E10080680A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100"><con:part><con:url>http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_618861D3FEC54480E10080680A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:n1="urn:sap-com:document:sap:rfc:functions">
  <wsdl:documentation>
    <sidl:sidl xmlns:sidl="http://www.sap.com/2007/03/sidl"/>
  </wsdl:documentation>
  <wsp:UsingPolicy wsdl:required="true"/>
  <wsp:Policy wsu:Id="BN_ZWAPP_SELECT_CA_BILL_ADDRESSES">
    <wsaw:UsingAddressing xmlns:wsaw="http://schemas.xmlsoap.org/ws/2004/08/addressing"/>
    <saptrnbnd:OptimizedXMLTransfer uri="http://xml.sap.com/2006/11/esi/esp/binxml" wsp:Optional="true" xmlns:saptrnbnd="http://www.sap.com/webas/710/soap/features/transportbinding/"/>
    <sapattahnd:Enabled xmlns:sapattahnd="http://www.sap.com/710/features/attachment/">false</sapattahnd:Enabled>
    <wsp:ExactlyOne xmlns:sapsp="http://www.sap.com/webas/630/soap/features/security/policy" xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/07/utility">
      <wsp:All>
        <sp:TransportBinding>
          <wsp:Policy>
            <sp:TransportToken>
              <wsp:Policy>
                <sp:HttpsToken>
                  <wsp:Policy>
                    <sp:HttpBasicAuthentication/>
                  </wsp:Policy>
                </sp:HttpsToken>
              </wsp:Policy>
            </sp:TransportToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:TripleDesRsa15/>
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Strict/>
              </wsp:Policy>
            </sp:Layout>
          </wsp:Policy>
        </sp:TransportBinding>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsp:Policy wsu:Id="IF_ZWAPP_SELECT_CA_BILL_ADDRESSES">
    <sapsession:Session xmlns:sapsession="http://www.sap.com/webas/630/soap/features/session/">
      <sapsession:enableSession>false</sapsession:enableSession>
    </sapsession:Session>
    <sapcentraladmin:CentralAdministration wsp:Optional="true" xmlns:sapcentraladmin="http://www.sap.com/webas/700/soap/features/CentralAdministration/">
      <sapcentraladmin:BusinessApplicationID>5A2E8A9B2DED2140E10080000A0B126E</sapcentraladmin:BusinessApplicationID>
    </sapcentraladmin:CentralAdministration>
  </wsp:Policy>
  <wsp:Policy wsu:Id="OP_ZWappSlctCaBillAddresses">
    <sapcomhnd:enableCommit xmlns:sapcomhnd="http://www.sap.com/NW05/soap/features/commit/">false</sapcomhnd:enableCommit>
    <sapblock:enableBlocking xmlns:sapblock="http://www.sap.com/NW05/soap/features/blocking/">true</sapblock:enableBlocking>
    <saptrhnw05:required xmlns:saptrhnw05="http://www.sap.com/NW05/soap/features/transaction/">no</saptrhnw05:required>
    <saprmnw05:enableWSRM xmlns:saprmnw05="http://www.sap.com/NW05/soap/features/wsrm/">false</saprmnw05:enableWSRM>
  </wsp:Policy>
  <wsdl:types>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:n0="urn:sap-com:document:sap:rfc:functions">
      <xsd:import namespace="urn:sap-com:document:sap:rfc:functions"/>
      <xsd:simpleType name="char10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ZwappCaBillAddressS">
        <xsd:sequence>
          <xsd:element name="Id" type="n0:char10"/>
          <xsd:element name="Street" type="n0:char60"/>
          <xsd:element name="HouseNo" type="n0:char10"/>
          <xsd:element name="PostlCod1" type="n0:char10"/>
          <xsd:element name="City" type="n0:char40"/>
          <xsd:element name="Region" type="n0:char3"/>
          <xsd:element name="PoBox" type="tns:char10"/>
          <xsd:element name="Country" type="n0:char3"/>
          <xsd:element name="RegionName" type="n0:char20"/>
          <xsd:element name="CountryName" type="n0:char50"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappCaBillAddressSt">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwappCaBillAddressS" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ZWappSlctCaBillAddresses">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="BusinessPartnerId" type="tns:char10" minOccurs="0"/>
            <xsd:element name="ContractAccount" type="n0:char12"/>
            <xsd:element name="Source" type="n0:char20" minOccurs="0"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ZWappSlctCaBillAddressesResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Addressdata" type="tns:ZwappCaBillAddressSt"/>
            <xsd:element name="ResultCode" type="n0:char4"/>
            <xsd:element name="ResultMessage" type="n0:char200"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:rfc:functions">
      <xsd:simpleType name="char10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char12">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="12"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char20">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char200">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="200"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char3">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="3"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char4">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char40">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="40"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char50">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="50"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char60">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="60"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ZWappSlctCaBillAddresses">
    <wsdl:part name="parameters" element="tns:ZWappSlctCaBillAddresses"/>
  </wsdl:message>
  <wsdl:message name="ZWappSlctCaBillAddressesResponse">
    <wsdl:part name="parameter" element="tns:ZWappSlctCaBillAddressesResponse"/>
  </wsdl:message>
  <wsdl:portType name="ZWAPP_SELECT_CA_BILL_ADDRESSES">
    <wsp:Policy>
      <wsp:PolicyReference URI="#IF_ZWAPP_SELECT_CA_BILL_ADDRESSES"/>
    </wsp:Policy>
    <wsdl:operation name="ZWappSlctCaBillAddresses">
      <wsp:Policy>
        <wsp:PolicyReference URI="#OP_ZWappSlctCaBillAddresses"/>
      </wsp:Policy>
      <wsdl:input message="tns:ZWappSlctCaBillAddresses"/>
      <wsdl:output message="tns:ZWappSlctCaBillAddressesResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ZWAPP_SELECT_CA_BILL_ADDRESSES" type="tns:ZWAPP_SELECT_CA_BILL_ADDRESSES">
    <wsp:Policy>
      <wsp:PolicyReference URI="#BN_ZWAPP_SELECT_CA_BILL_ADDRESSES"/>
    </wsp:Policy>
    <wsa:EndpointReference xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing">
      <wsa:ReferenceParameters/>
    </wsa:EndpointReference>
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="ZWappSlctCaBillAddresses">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ZWAPP_SELECT_CA_BILL_ADDRESSES">
    <wsdl:port name="ZWAPP_SELECT_CA_BILL_ADDRESSES" binding="tns:ZWAPP_SELECT_CA_BILL_ADDRESSES">
      <soap:address location="https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_select_ca_bill_addresses/100/zwapp_select_ca_bill_addresses/zwapp_select_ca_bill_addresses"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_select_ca_bill_addresses/100/zwapp_select_ca_bill_addresses/zwapp_select_ca_bill_addresses</con:endpoint></con:endpoints><con:operation id="70bc24d1-cdb1-4117-83dc-4aa21643cf91" isOneWay="false" action="" name="ZWappSlctCaBillAddresses" bindingOperationName="ZWappSlctCaBillAddresses" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="6ff49819-acc5-4993-8cbd-6617d3f8043a" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_select_ca_bill_addresses/100/zwapp_select_ca_bill_addresses/zwapp_select_ca_bill_addresses</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappSlctCaBillAddresses>\r
         <!--Optional:-->\r
         <BusinessPartnerId>?</BusinessPartnerId>\r
         <ContractAccount>?</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappSlctCaBillAddresses>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_SELECT_CA_BILL_ADDRESSES/ZWappSlctCaBillAddressesRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="14ff74ee-76af-40f4-af41-5d45da0956ed" wsaVersion="NONE" name="ZWAPP_GET_CUSTOMER_GDPR_AFM" type="wsdl" bindingName="{urn:sap-com:document:sap:soap:functions:mc-style}ZWAPP_GET_CUSTOMER_GDPR_AFM" soapVersion="1_1" anonymous="optional" definition="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_61890D253AD02840E100807E0A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_61890D253AD02840E100807E0A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100"><con:part><con:url>http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_61890D253AD02840E100807E0A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:n1="urn:sap-com:document:sap:rfc:functions">
  <wsdl:documentation>
    <sidl:sidl xmlns:sidl="http://www.sap.com/2007/03/sidl"/>
  </wsdl:documentation>
  <wsp:UsingPolicy wsdl:required="true"/>
  <wsp:Policy wsu:Id="BN_ZWAPP_GET_CUSTOMER_GDPR_AFM">
    <saptrnbnd:OptimizedXMLTransfer uri="http://xml.sap.com/2006/11/esi/esp/binxml" wsp:Optional="true" xmlns:saptrnbnd="http://www.sap.com/webas/710/soap/features/transportbinding/"/>
    <wsaw:UsingAddressing xmlns:wsaw="http://schemas.xmlsoap.org/ws/2004/08/addressing"/>
    <sapattahnd:Enabled xmlns:sapattahnd="http://www.sap.com/710/features/attachment/">false</sapattahnd:Enabled>
    <wsp:ExactlyOne xmlns:sapsp="http://www.sap.com/webas/630/soap/features/security/policy" xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/07/utility">
      <wsp:All>
        <sp:TransportBinding>
          <wsp:Policy>
            <sp:TransportToken>
              <wsp:Policy>
                <sp:HttpsToken>
                  <wsp:Policy>
                    <sp:HttpBasicAuthentication/>
                  </wsp:Policy>
                </sp:HttpsToken>
              </wsp:Policy>
            </sp:TransportToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:TripleDesRsa15/>
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Strict/>
              </wsp:Policy>
            </sp:Layout>
          </wsp:Policy>
        </sp:TransportBinding>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsp:Policy wsu:Id="IF_ZWAPP_GET_CUSTOMER_GDPR_AFM">
    <sapsession:Session xmlns:sapsession="http://www.sap.com/webas/630/soap/features/session/">
      <sapsession:enableSession>false</sapsession:enableSession>
    </sapsession:Session>
    <sapcentraladmin:CentralAdministration wsp:Optional="true" xmlns:sapcentraladmin="http://www.sap.com/webas/700/soap/features/CentralAdministration/">
      <sapcentraladmin:BusinessApplicationID>5A2E8A9B2DED2140E10080000A0B126E</sapcentraladmin:BusinessApplicationID>
    </sapcentraladmin:CentralAdministration>
  </wsp:Policy>
  <wsp:Policy wsu:Id="OP_ZWappGetCustomerGdprAfm">
    <sapcomhnd:enableCommit xmlns:sapcomhnd="http://www.sap.com/NW05/soap/features/commit/">false</sapcomhnd:enableCommit>
    <sapblock:enableBlocking xmlns:sapblock="http://www.sap.com/NW05/soap/features/blocking/">true</sapblock:enableBlocking>
    <saptrhnw05:required xmlns:saptrhnw05="http://www.sap.com/NW05/soap/features/transaction/">no</saptrhnw05:required>
    <saprmnw05:enableWSRM xmlns:saprmnw05="http://www.sap.com/NW05/soap/features/wsrm/">false</saprmnw05:enableWSRM>
  </wsp:Policy>
  <wsdl:types>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:rfc:functions">
      <xsd:simpleType name="char1">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char20">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char200">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="200"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char4">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="numeric1">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
          <xsd:pattern value="\d*"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:n0="urn:sap-com:document:sap:rfc:functions">
      <xsd:import namespace="urn:sap-com:document:sap:rfc:functions"/>
      <xsd:simpleType name="char1">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char50">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="50"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:element name="ZWappGetCustomerGdprAfm">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Afm" type="n0:char20"/>
            <xsd:element name="Source" type="n0:char20" minOccurs="0"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ZWappGetCustomerGdprAfmResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="ExceptionReason" type="n0:numeric1"/>
            <xsd:element name="ExceptionReasonDesc" type="tns:char50"/>
            <xsd:element name="GdprAll" type="n0:char1"/>
            <xsd:element name="GdprApproval" type="n0:char1"/>
            <xsd:element name="GdprCanceled" type="tns:char1"/>
            <xsd:element name="GdprEmail" type="n0:char1"/>
            <xsd:element name="GdprGasAll" type="n0:char1"/>
            <xsd:element name="GdprGasApproval" type="n0:char1"/>
            <xsd:element name="GdprGasEmail" type="n0:char1"/>
            <xsd:element name="GdprGasNotApproval" type="n0:char1"/>
            <xsd:element name="GdprGasPhone" type="n0:char1"/>
            <xsd:element name="GdprGasPost" type="n0:char1"/>
            <xsd:element name="GdprGasSms" type="n0:char1"/>
            <xsd:element name="GdprNotApproval" type="n0:char1"/>
            <xsd:element name="GdprPhone" type="n0:char1"/>
            <xsd:element name="GdprPost" type="n0:char1"/>
            <xsd:element name="GdprResearchApproval" type="n0:char1"/>
            <xsd:element name="GdprResearchNotApproval" type="n0:char1"/>
            <xsd:element name="GdprSms" type="n0:char1"/>
            <xsd:element name="ResultCode" type="n0:char4"/>
            <xsd:element name="ResultMessage" type="n0:char200"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ZWappGetCustomerGdprAfm">
    <wsdl:part name="parameters" element="tns:ZWappGetCustomerGdprAfm"/>
  </wsdl:message>
  <wsdl:message name="ZWappGetCustomerGdprAfmResponse">
    <wsdl:part name="parameter" element="tns:ZWappGetCustomerGdprAfmResponse"/>
  </wsdl:message>
  <wsdl:portType name="ZWAPP_GET_CUSTOMER_GDPR_AFM">
    <wsp:Policy>
      <wsp:PolicyReference URI="#IF_ZWAPP_GET_CUSTOMER_GDPR_AFM"/>
    </wsp:Policy>
    <wsdl:operation name="ZWappGetCustomerGdprAfm">
      <wsp:Policy>
        <wsp:PolicyReference URI="#OP_ZWappGetCustomerGdprAfm"/>
      </wsp:Policy>
      <wsdl:input message="tns:ZWappGetCustomerGdprAfm"/>
      <wsdl:output message="tns:ZWappGetCustomerGdprAfmResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ZWAPP_GET_CUSTOMER_GDPR_AFM" type="tns:ZWAPP_GET_CUSTOMER_GDPR_AFM">
    <wsp:Policy>
      <wsp:PolicyReference URI="#BN_ZWAPP_GET_CUSTOMER_GDPR_AFM"/>
    </wsp:Policy>
    <wsa:EndpointReference xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing">
      <wsa:ReferenceParameters/>
    </wsa:EndpointReference>
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="ZWappGetCustomerGdprAfm">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ZWAPP_GET_CUSTOMER_GDPR_AFM">
    <wsdl:port name="ZWAPP_GET_CUSTOMER_GDPR_AFM" binding="tns:ZWAPP_GET_CUSTOMER_GDPR_AFM">
      <soap:address location="https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_customer_gdpr_afm/100/zwapp_get_customer_gdpr_afm/zwapp_get_customer_gdpr_afm"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_customer_gdpr_afm/100/zwapp_get_customer_gdpr_afm/zwapp_get_customer_gdpr_afm</con:endpoint></con:endpoints><con:operation id="96ed1c89-5a36-4421-b8f0-50fa8b54de2a" isOneWay="false" action="" name="ZWappGetCustomerGdprAfm" bindingOperationName="ZWappGetCustomerGdprAfm" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="349cead2-83fd-4af7-b9ee-35acd7ec5c15" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_customer_gdpr_afm/100/zwapp_get_customer_gdpr_afm/zwapp_get_customer_gdpr_afm</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetCustomerGdprAfm>\r
         <Afm>?</Afm>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetCustomerGdprAfm>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_GDPR_AFM/ZWappGetCustomerGdprAfmRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="e1792c26-12f0-4cd0-b1b6-7200484ce536" name="Dispatcher 1 - Normal"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_customer_gdpr_afm/100/zwapp_get_customer_gdpr_afm/zwapp_get_customer_gdpr_afm</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetCustomerGdprAfm>\r
         <Afm>109750410</Afm>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetCustomerGdprAfm>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_GDPR_AFM/ZWappGetCustomerGdprAfmRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="5ae90e7b-f087-4420-90b1-b4260e2d5663" name="Dispatcher 2 - Pollaplos (Good)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_customer_gdpr_afm/100/zwapp_get_customer_gdpr_afm/zwapp_get_customer_gdpr_afm</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetCustomerGdprAfm>\r
         <Afm>094449128</Afm>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetCustomerGdprAfm>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_GDPR_AFM/ZWappGetCustomerGdprAfmRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="fa3e8b13-9055-4eab-a670-150664fa55f2" name="Dispatcher 3 - Pollaplos Paidaki (Good)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_customer_gdpr_afm/100/zwapp_get_customer_gdpr_afm/zwapp_get_customer_gdpr_afm</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetCustomerGdprAfm>\r
         <Afm>996763330</Afm>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetCustomerGdprAfm>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_GDPR_AFM/ZWappGetCustomerGdprAfmRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="e4d5c85f-3ef2-472c-98b2-8eb7f1c7ae28" wsaVersion="NONE" name="ZWAPP_GET_CA_FINANCIAL_DATA2" type="wsdl" bindingName="{urn:sap-com:document:sap:soap:functions:mc-style}ZWAPP_GET_CA_FINANCIAL_DATA2" soapVersion="1_1" anonymous="optional" definition="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_618C97F1BDB026C0E100802E0A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_618C97F1BDB026C0E100802E0A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100"><con:part><con:url>http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_618C97F1BDB026C0E100802E0A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:n1="urn:sap-com:document:sap:rfc:functions">
  <wsdl:documentation>
    <sidl:sidl xmlns:sidl="http://www.sap.com/2007/03/sidl"/>
  </wsdl:documentation>
  <wsp:UsingPolicy wsdl:required="true"/>
  <wsp:Policy wsu:Id="BN_ZWAPP_GET_CA_FINANCIAL_DATA2">
    <wsaw:UsingAddressing xmlns:wsaw="http://schemas.xmlsoap.org/ws/2004/08/addressing"/>
    <saptrnbnd:OptimizedXMLTransfer uri="http://xml.sap.com/2006/11/esi/esp/binxml" wsp:Optional="true" xmlns:saptrnbnd="http://www.sap.com/webas/710/soap/features/transportbinding/"/>
    <sapattahnd:Enabled xmlns:sapattahnd="http://www.sap.com/710/features/attachment/">false</sapattahnd:Enabled>
    <wsp:ExactlyOne xmlns:sapsp="http://www.sap.com/webas/630/soap/features/security/policy" xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/07/utility">
      <wsp:All>
        <sp:TransportBinding>
          <wsp:Policy>
            <sp:TransportToken>
              <wsp:Policy>
                <sp:HttpsToken>
                  <wsp:Policy>
                    <sp:HttpBasicAuthentication/>
                  </wsp:Policy>
                </sp:HttpsToken>
              </wsp:Policy>
            </sp:TransportToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:TripleDesRsa15/>
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Strict/>
              </wsp:Policy>
            </sp:Layout>
          </wsp:Policy>
        </sp:TransportBinding>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsp:Policy wsu:Id="IF_ZWAPP_GET_CA_FINANCIAL_DATA2">
    <sapsession:Session xmlns:sapsession="http://www.sap.com/webas/630/soap/features/session/">
      <sapsession:enableSession>false</sapsession:enableSession>
    </sapsession:Session>
    <sapcentraladmin:CentralAdministration wsp:Optional="true" xmlns:sapcentraladmin="http://www.sap.com/webas/700/soap/features/CentralAdministration/">
      <sapcentraladmin:BusinessApplicationID>5A2E8A9B2DED2140E10080000A0B126E</sapcentraladmin:BusinessApplicationID>
    </sapcentraladmin:CentralAdministration>
  </wsp:Policy>
  <wsp:Policy wsu:Id="OP_ZWappGetCaFinancialData2">
    <sapcomhnd:enableCommit xmlns:sapcomhnd="http://www.sap.com/NW05/soap/features/commit/">false</sapcomhnd:enableCommit>
    <sapblock:enableBlocking xmlns:sapblock="http://www.sap.com/NW05/soap/features/blocking/">true</sapblock:enableBlocking>
    <saptrhnw05:required xmlns:saptrhnw05="http://www.sap.com/NW05/soap/features/transaction/">no</saptrhnw05:required>
    <saprmnw05:enableWSRM xmlns:saprmnw05="http://www.sap.com/NW05/soap/features/wsrm/">false</saprmnw05:enableWSRM>
  </wsp:Policy>
  <wsdl:types>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:rfc:functions">
      <xsd:simpleType name="char12">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="12"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char20">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char200">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="200"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char25">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="25"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char4">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="curr13.2">
        <xsd:restriction base="xsd:decimal">
          <xsd:totalDigits value="13"/>
          <xsd:fractionDigits value="2"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="date10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
          <xsd:pattern value="\d\d\d\d-\d\d-\d\d"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="numeric3">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="3"/>
          <xsd:pattern value="\d*"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:n0="urn:sap-com:document:sap:rfc:functions">
      <xsd:import namespace="urn:sap-com:document:sap:rfc:functions"/>
      <xsd:simpleType name="char1">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char2">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="2"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char20">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char4">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char50">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="50"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="date10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
          <xsd:pattern value="\d\d\d\d-\d\d-\d\d"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ZwappTCaBscFiDataDeepS">
        <xsd:sequence>
          <xsd:element name="ContractAccount" type="n0:char12"/>
          <xsd:element name="FriendlyName" type="tns:char50"/>
          <xsd:element name="Pod" type="tns:char20"/>
          <xsd:element name="VoltageLevel" type="tns:char4"/>
          <xsd:element name="RecInvIssueDate" type="tns:date10"/>
          <xsd:element name="ContractType" type="tns:char2"/>
          <xsd:element name="RfCode25" type="n0:char25"/>
          <xsd:element name="OpenAmount" type="n0:curr13.2"/>
          <xsd:element name="OverdueAmount" type="n0:curr13.2"/>
          <xsd:element name="NonOverdueAmount" type="n0:curr13.2"/>
          <xsd:element name="RecInvDueDate" type="n0:date10"/>
          <xsd:element name="TotalBalance" type="n0:curr13.2"/>
          <xsd:element name="ActiveSettlement" type="tns:char1"/>
          <xsd:element name="TotalSettleAmount" type="n0:curr13.2"/>
          <xsd:element name="RemainSettleAmount" type="n0:curr13.2"/>
          <xsd:element name="SettleAmountPaym" type="n0:curr13.2"/>
          <xsd:element name="CurrentInstAmount" type="n0:curr13.2"/>
          <xsd:element name="DueDate" type="n0:date10"/>
          <xsd:element name="InstNumberDesc" type="n0:char20"/>
          <xsd:element name="OverdueSettleAmount" type="n0:curr13.2"/>
          <xsd:element name="OverdueInstNo" type="n0:numeric3"/>
          <xsd:element name="OpenAllSettleAmount" type="n0:curr13.2"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Tvkont">
        <xsd:sequence>
          <xsd:element name="item" type="n0:char12" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappTCaBscFiDataDeepSt">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwappTCaBscFiDataDeepS" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ZWappGetCaFinancialData2">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="ContractAccount" type="tns:Tvkont"/>
            <xsd:element name="Source" type="n0:char20" minOccurs="0"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ZWappGetCaFinancialData2Response">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="ResultCode" type="n0:char4"/>
            <xsd:element name="ResultMessage" type="n0:char200"/>
            <xsd:element name="TCaFinancialData" type="tns:ZwappTCaBscFiDataDeepSt"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ZWappGetCaFinancialData2">
    <wsdl:part name="parameters" element="tns:ZWappGetCaFinancialData2"/>
  </wsdl:message>
  <wsdl:message name="ZWappGetCaFinancialData2Response">
    <wsdl:part name="parameter" element="tns:ZWappGetCaFinancialData2Response"/>
  </wsdl:message>
  <wsdl:portType name="ZWAPP_GET_CA_FINANCIAL_DATA2">
    <wsp:Policy>
      <wsp:PolicyReference URI="#IF_ZWAPP_GET_CA_FINANCIAL_DATA2"/>
    </wsp:Policy>
    <wsdl:operation name="ZWappGetCaFinancialData2">
      <wsp:Policy>
        <wsp:PolicyReference URI="#OP_ZWappGetCaFinancialData2"/>
      </wsp:Policy>
      <wsdl:input message="tns:ZWappGetCaFinancialData2"/>
      <wsdl:output message="tns:ZWappGetCaFinancialData2Response"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ZWAPP_GET_CA_FINANCIAL_DATA2" type="tns:ZWAPP_GET_CA_FINANCIAL_DATA2">
    <wsp:Policy>
      <wsp:PolicyReference URI="#BN_ZWAPP_GET_CA_FINANCIAL_DATA2"/>
    </wsp:Policy>
    <wsa:EndpointReference xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing">
      <wsa:ReferenceParameters/>
    </wsa:EndpointReference>
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="ZWappGetCaFinancialData2">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ZWAPP_GET_CA_FINANCIAL_DATA2">
    <wsdl:port name="ZWAPP_GET_CA_FINANCIAL_DATA2" binding="tns:ZWAPP_GET_CA_FINANCIAL_DATA2">
      <soap:address location="https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data2/100/zwapp_get_ca_financial_data2/zwapp_get_ca_financial_data2"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data2/100/zwapp_get_ca_financial_data2/zwapp_get_ca_financial_data2</con:endpoint></con:endpoints><con:operation id="172fec71-0a43-4dff-9b0e-7eb1b3091384" isOneWay="false" action="" name="ZWappGetCaFinancialData2" bindingOperationName="ZWappGetCaFinancialData2" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="a5d2adea-38b0-46a8-ad57-0db23a78f174" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data2/100/zwapp_get_ca_financial_data2/zwapp_get_ca_financial_data2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetCaFinancialData2>\r
         <ContractAccount>\r
            <!--Zero or more repetitions:-->\r
            <item>?</item>\r
         </ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetCaFinancialData2>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA2/ZWappGetCaFinancialData2Request"/></con:call><con:call id="47ab513d-5693-455f-9a28-05e5d2d6c5ad" name="Dispatcher 1 - Normal"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data2/100/zwapp_get_ca_financial_data2/zwapp_get_ca_financial_data2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetCaFinancialData2>\r
         <ContractAccount>\r
            <!--Zero or more repetitions:-->\r
            <item>300002164681</item>\r
         </ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetCaFinancialData2>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA2/ZWappGetCaFinancialData2Request"/><con:wsrmConfig version="1.2"/></con:call><con:call id="03dc28c5-fd7e-4466-9be5-2e5dbfd11354" name="Dispatcher 2 - Pollaplos (Good)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data2/100/zwapp_get_ca_financial_data2/zwapp_get_ca_financial_data2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetCaFinancialData2>\r
         <ContractAccount>\r
            <!--Zero or more repetitions:-->\r
            <item>1000001470</item>\r
         </ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetCaFinancialData2>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA2/ZWappGetCaFinancialData2Request"/><con:wsrmConfig version="1.2"/></con:call><con:call id="cf27d358-abe4-4d45-8303-2cd94ad19bd5" name="Dispatcher 3 - Pollaplos Paidaki (Good)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data2/100/zwapp_get_ca_financial_data2/zwapp_get_ca_financial_data2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetCaFinancialData2>\r
         <ContractAccount>\r
            <!--Zero or more repetitions:-->\r
            <item>300013206964</item>\r
         </ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetCaFinancialData2>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA2/ZWappGetCaFinancialData2Request"/><con:wsrmConfig version="1.2"/></con:call><con:call id="e0d9b0c6-0054-4fc8-9a09-71899ef34655" name="Copy of Dispatcher 1 - Normal"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data2/100/zwapp_get_ca_financial_data2/zwapp_get_ca_financial_data2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetCaFinancialData2>\r
         <ContractAccount>\r
            <!--Zero or more repetitions:-->\r
            <item>300003505228</item>\r
         </ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetCaFinancialData2>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA2/ZWappGetCaFinancialData2Request"/><con:wsrmConfig version="1.2"/></con:call><con:call id="a14af6b6-960a-42df-a793-01479aae2baa" name="DR_0910_GETCAFINANCIALDATA2"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data2/100/zwapp_get_ca_financial_data2/zwapp_get_ca_financial_data2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetCaFinancialData2>\r
         <ContractAccount>\r
            <!--Zero or more repetitions:-->\r
            <item>300001578816</item>\r
         </ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetCaFinancialData2>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA2/ZWappGetCaFinancialData2Request"/><con:wsrmConfig version="1.2"/></con:call><con:call id="e84db1e6-3f6d-463c-88a3-12aff556f27b" name="MYACCOUNT_GETCAFINANCIALDATA2"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data2/100/zwapp_get_ca_financial_data2/zwapp_get_ca_financial_data2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetCaFinancialData2>\r
         <ContractAccount>\r
            <!--Zero or more repetitions:-->\r
            <item>300003505228</item>\r
         </ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetCaFinancialData2>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA2/ZWappGetCaFinancialData2Request"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="7523d067-1db3-4c09-ac94-039507875bca" wsaVersion="NONE" name="ZWAPP_GET_COUNTRY_TEL_CODES" type="wsdl" bindingName="{urn:sap-com:document:sap:soap:functions:mc-style}ZWAPP_GET_COUNTRY_TEL_CODES" soapVersion="1_1" anonymous="optional" definition="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D17F3B0B096F40E10080510A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D17F3B0B096F40E10080510A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100"><con:part><con:url>http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_60D17F3B0B096F40E10080510A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:n1="urn:sap-com:document:sap:rfc:functions">
  <wsdl:documentation>
    <sidl:sidl xmlns:sidl="http://www.sap.com/2007/03/sidl"/>
  </wsdl:documentation>
  <wsp:UsingPolicy wsdl:required="true"/>
  <wsp:Policy wsu:Id="BN_ZWAPP_GET_COUNTRY_TEL_CODES">
    <saptrnbnd:OptimizedXMLTransfer uri="http://xml.sap.com/2006/11/esi/esp/binxml" wsp:Optional="true" xmlns:saptrnbnd="http://www.sap.com/webas/710/soap/features/transportbinding/"/>
    <wsaw:UsingAddressing xmlns:wsaw="http://schemas.xmlsoap.org/ws/2004/08/addressing"/>
    <sapattahnd:Enabled xmlns:sapattahnd="http://www.sap.com/710/features/attachment/">false</sapattahnd:Enabled>
    <wsp:ExactlyOne xmlns:sapsp="http://www.sap.com/webas/630/soap/features/security/policy" xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/07/utility">
      <wsp:All>
        <sp:TransportBinding>
          <wsp:Policy>
            <sp:TransportToken>
              <wsp:Policy>
                <sp:HttpsToken>
                  <wsp:Policy>
                    <sp:HttpBasicAuthentication/>
                  </wsp:Policy>
                </sp:HttpsToken>
              </wsp:Policy>
            </sp:TransportToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:TripleDesRsa15/>
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Strict/>
              </wsp:Policy>
            </sp:Layout>
          </wsp:Policy>
        </sp:TransportBinding>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsp:Policy wsu:Id="IF_ZWAPP_GET_COUNTRY_TEL_CODES">
    <sapsession:Session xmlns:sapsession="http://www.sap.com/webas/630/soap/features/session/">
      <sapsession:enableSession>false</sapsession:enableSession>
    </sapsession:Session>
    <sapcentraladmin:CentralAdministration wsp:Optional="true" xmlns:sapcentraladmin="http://www.sap.com/webas/700/soap/features/CentralAdministration/">
      <sapcentraladmin:BusinessApplicationID>5A2E8A9B2DED2140E10080000A0B126E</sapcentraladmin:BusinessApplicationID>
    </sapcentraladmin:CentralAdministration>
  </wsp:Policy>
  <wsp:Policy wsu:Id="OP_ZWappGetCountryTelCodes">
    <sapcomhnd:enableCommit xmlns:sapcomhnd="http://www.sap.com/NW05/soap/features/commit/">false</sapcomhnd:enableCommit>
    <sapblock:enableBlocking xmlns:sapblock="http://www.sap.com/NW05/soap/features/blocking/">true</sapblock:enableBlocking>
    <saptrhnw05:required xmlns:saptrhnw05="http://www.sap.com/NW05/soap/features/transaction/">no</saptrhnw05:required>
    <saprmnw05:enableWSRM xmlns:saprmnw05="http://www.sap.com/NW05/soap/features/wsrm/">false</saprmnw05:enableWSRM>
  </wsp:Policy>
  <wsdl:types>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:rfc:functions">
      <xsd:simpleType name="char20">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char200">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="200"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char3">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="3"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char4">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char5">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="5"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char50">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="50"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="lang">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:n0="urn:sap-com:document:sap:rfc:functions">
      <xsd:import namespace="urn:sap-com:document:sap:rfc:functions"/>
      <xsd:complexType name="ZwappCountryTelCodesS">
        <xsd:sequence>
          <xsd:element name="CountryId" type="n0:char3"/>
          <xsd:element name="CountryName" type="n0:char50"/>
          <xsd:element name="CountryTelCode" type="n0:char5"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappCountryTelCodesSt">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwappCountryTelCodesS" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ZWappGetCountryTelCodes">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Language" type="n0:lang" minOccurs="0"/>
            <xsd:element name="Source" type="n0:char20"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ZWappGetCountryTelCodesResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="CountryTelCodes" type="tns:ZwappCountryTelCodesSt"/>
            <xsd:element name="ResultCode" type="n0:char4"/>
            <xsd:element name="ResultMessage" type="n0:char200"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ZWappGetCountryTelCodes">
    <wsdl:part name="parameters" element="tns:ZWappGetCountryTelCodes"/>
  </wsdl:message>
  <wsdl:message name="ZWappGetCountryTelCodesResponse">
    <wsdl:part name="parameter" element="tns:ZWappGetCountryTelCodesResponse"/>
  </wsdl:message>
  <wsdl:portType name="ZWAPP_GET_COUNTRY_TEL_CODES">
    <wsp:Policy>
      <wsp:PolicyReference URI="#IF_ZWAPP_GET_COUNTRY_TEL_CODES"/>
    </wsp:Policy>
    <wsdl:operation name="ZWappGetCountryTelCodes">
      <wsp:Policy>
        <wsp:PolicyReference URI="#OP_ZWappGetCountryTelCodes"/>
      </wsp:Policy>
      <wsdl:input message="tns:ZWappGetCountryTelCodes"/>
      <wsdl:output message="tns:ZWappGetCountryTelCodesResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ZWAPP_GET_COUNTRY_TEL_CODES" type="tns:ZWAPP_GET_COUNTRY_TEL_CODES">
    <wsp:Policy>
      <wsp:PolicyReference URI="#BN_ZWAPP_GET_COUNTRY_TEL_CODES"/>
    </wsp:Policy>
    <wsa:EndpointReference xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing">
      <wsa:ReferenceParameters/>
    </wsa:EndpointReference>
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="ZWappGetCountryTelCodes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ZWAPP_GET_COUNTRY_TEL_CODES">
    <wsdl:port name="ZWAPP_GET_COUNTRY_TEL_CODES" binding="tns:ZWAPP_GET_COUNTRY_TEL_CODES">
      <soap:address location="https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_country_tel_codes/100/zwapp_get_country_tel_codes/zwapp_get_country_tel_codes"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_country_tel_codes/100/zwapp_get_country_tel_codes/zwapp_get_country_tel_codes</con:endpoint></con:endpoints><con:operation id="967286fa-dabf-4d92-8ac5-df8c14703c97" isOneWay="false" action="" name="ZWappGetCountryTelCodes" bindingOperationName="ZWappGetCountryTelCodes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="95812c4c-3e7d-4b38-a493-b367fbf5ae83" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_country_tel_codes/100/zwapp_get_country_tel_codes/zwapp_get_country_tel_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetCountryTelCodes>\r
         <!--Optional:-->\r
         <Language>G</Language>\r
         <Source>MyAccount</Source>\r
      </urn:ZWappGetCountryTelCodes>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_COUNTRY_TEL_CODES/ZWappGetCountryTelCodesRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="e6e95240-a2df-4071-831b-6511b1536fdc" name="DR_0910_GET_COUNTRY_TEL_CODES"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_get_country_tel_codes/100/zwapp_get_country_tel_codes/zwapp_get_country_tel_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetCountryTelCodes>\r
         <!--Optional:-->\r
         <Language>G</Language>\r
         <Source>MyAccount</Source>\r
      </urn:ZWappGetCountryTelCodes>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_COUNTRY_TEL_CODES/ZWappGetCountryTelCodesRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="a8afa052-af02-4a6c-8c6d-6eebca2edec1" wsaVersion="NONE" name="ZIVR_AUTO_VICA_FINANCIAL_DATA" type="wsdl" bindingName="{urn:sap-com:document:sap:soap:functions:mc-style}ZIVR_AUTO_VICA_FINANCIAL_DATA" soapVersion="1_1" anonymous="optional" definition="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_61B98DFBE20F3500E10080680A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_61B98DFBE20F3500E10080680A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100"><con:part><con:url>http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_61B98DFBE20F3500E10080680A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:n1="urn:sap-com:document:sap:rfc:functions">
  <wsdl:documentation>
    <sidl:sidl xmlns:sidl="http://www.sap.com/2007/03/sidl"/>
  </wsdl:documentation>
  <wsp:UsingPolicy wsdl:required="true"/>
  <wsp:Policy wsu:Id="BN_ZIVR_AUTO_VICA_FINANCIAL_DATA">
    <wsaw:UsingAddressing xmlns:wsaw="http://schemas.xmlsoap.org/ws/2004/08/addressing"/>
    <saptrnbnd:OptimizedXMLTransfer uri="http://xml.sap.com/2006/11/esi/esp/binxml" wsp:Optional="true" xmlns:saptrnbnd="http://www.sap.com/webas/710/soap/features/transportbinding/"/>
    <sapattahnd:Enabled xmlns:sapattahnd="http://www.sap.com/710/features/attachment/">false</sapattahnd:Enabled>
    <wsp:ExactlyOne xmlns:sapsp="http://www.sap.com/webas/630/soap/features/security/policy" xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/07/utility">
      <wsp:All>
        <sp:TransportBinding>
          <wsp:Policy>
            <sp:TransportToken>
              <wsp:Policy>
                <sp:HttpsToken>
                  <wsp:Policy>
                    <sp:HttpBasicAuthentication/>
                  </wsp:Policy>
                </sp:HttpsToken>
              </wsp:Policy>
            </sp:TransportToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:TripleDesRsa15/>
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Strict/>
              </wsp:Policy>
            </sp:Layout>
          </wsp:Policy>
        </sp:TransportBinding>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsp:Policy wsu:Id="IF_ZIVR_AUTO_VICA_FINANCIAL_DATA">
    <sapsession:Session xmlns:sapsession="http://www.sap.com/webas/630/soap/features/session/">
      <sapsession:enableSession>false</sapsession:enableSession>
    </sapsession:Session>
    <sapcentraladmin:CentralAdministration wsp:Optional="true" xmlns:sapcentraladmin="http://www.sap.com/webas/700/soap/features/CentralAdministration/">
      <sapcentraladmin:BusinessApplicationID>5A2E8A9B2DED2140E10080000A0B126E</sapcentraladmin:BusinessApplicationID>
    </sapcentraladmin:CentralAdministration>
  </wsp:Policy>
  <wsp:Policy wsu:Id="OP_ZIvrAutoVicaFinancialData">
    <sapcomhnd:enableCommit xmlns:sapcomhnd="http://www.sap.com/NW05/soap/features/commit/">false</sapcomhnd:enableCommit>
    <sapblock:enableBlocking xmlns:sapblock="http://www.sap.com/NW05/soap/features/blocking/">true</sapblock:enableBlocking>
    <saptrhnw05:required xmlns:saptrhnw05="http://www.sap.com/NW05/soap/features/transaction/">no</saptrhnw05:required>
    <saprmnw05:enableWSRM xmlns:saprmnw05="http://www.sap.com/NW05/soap/features/wsrm/">false</saprmnw05:enableWSRM>
  </wsp:Policy>
  <wsdl:types>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:rfc:functions">
      <xsd:simpleType name="char1">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char12">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="12"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char15">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="15"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char2">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="2"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char20">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char200">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="200"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char4">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="curr13.2">
        <xsd:restriction base="xsd:decimal">
          <xsd:totalDigits value="13"/>
          <xsd:fractionDigits value="2"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="date10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
          <xsd:pattern value="\d\d\d\d-\d\d-\d\d"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="numeric3">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="3"/>
          <xsd:pattern value="\d*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="numeric4">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
          <xsd:pattern value="\d*"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:n0="urn:sap-com:document:sap:rfc:functions">
      <xsd:import namespace="urn:sap-com:document:sap:rfc:functions"/>
      <xsd:simpleType name="char25">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="25"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:element name="ZIvrAutoVicaFinancialData">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="IAdt" type="n0:numeric4"/>
            <xsd:element name="IAfm" type="n0:char20"/>
            <xsd:element name="IPod" type="n0:char20"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ZIvrAutoVicaFinancialDataResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="EAdt" type="n0:numeric4"/>
            <xsd:element name="EAfm" type="n0:char20"/>
            <xsd:element name="EContractAccount" type="n0:char12"/>
            <xsd:element name="EContractStatus" type="n0:char2"/>
            <xsd:element name="EContractType" type="n0:char2"/>
            <xsd:element name="ECurrInstAmount" type="n0:curr13.2"/>
            <xsd:element name="EInstDueDate" type="n0:date10"/>
            <xsd:element name="EInvDueDate" type="n0:date10"/>
            <xsd:element name="EInvRegDate" type="n0:date10"/>
            <xsd:element name="EInvTypeId" type="n0:char1"/>
            <xsd:element name="EInvoiceType" type="n0:char15"/>
            <xsd:element name="EOverdueAmount" type="n0:curr13.2"/>
            <xsd:element name="EOverdueInstNo" type="n0:numeric3"/>
            <xsd:element name="EOverdueSettleAmount" type="n0:curr13.2"/>
            <xsd:element name="EPod" type="n0:char20"/>
            <xsd:element name="EResultCode" type="n0:char4"/>
            <xsd:element name="EResultMessage" type="n0:char200"/>
            <xsd:element name="ERfCode" type="tns:char25"/>
            <xsd:element name="ESettleAmount" type="n0:curr13.2"/>
            <xsd:element name="ETotalAmount" type="n0:curr13.2"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ZIvrAutoVicaFinancialData">
    <wsdl:part name="parameters" element="tns:ZIvrAutoVicaFinancialData"/>
  </wsdl:message>
  <wsdl:message name="ZIvrAutoVicaFinancialDataResponse">
    <wsdl:part name="parameter" element="tns:ZIvrAutoVicaFinancialDataResponse"/>
  </wsdl:message>
  <wsdl:portType name="ZIVR_AUTO_VICA_FINANCIAL_DATA">
    <wsp:Policy>
      <wsp:PolicyReference URI="#IF_ZIVR_AUTO_VICA_FINANCIAL_DATA"/>
    </wsp:Policy>
    <wsdl:operation name="ZIvrAutoVicaFinancialData">
      <wsp:Policy>
        <wsp:PolicyReference URI="#OP_ZIvrAutoVicaFinancialData"/>
      </wsp:Policy>
      <wsdl:input message="tns:ZIvrAutoVicaFinancialData"/>
      <wsdl:output message="tns:ZIvrAutoVicaFinancialDataResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ZIVR_AUTO_VICA_FINANCIAL_DATA" type="tns:ZIVR_AUTO_VICA_FINANCIAL_DATA">
    <wsp:Policy>
      <wsp:PolicyReference URI="#BN_ZIVR_AUTO_VICA_FINANCIAL_DATA"/>
    </wsp:Policy>
    <wsa:EndpointReference xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing">
      <wsa:ReferenceParameters/>
    </wsa:EndpointReference>
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="ZIvrAutoVicaFinancialData">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ZIVR_AUTO_VICA_FINANCIAL_DATA">
    <wsdl:port name="ZIVR_AUTO_VICA_FINANCIAL_DATA" binding="tns:ZIVR_AUTO_VICA_FINANCIAL_DATA">
      <soap:address location="https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zivr_auto_vica_financial_data/100/zivr_auto_vica_financial_data/zivr_auto_vica_financial_data"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zivr_auto_vica_financial_data/100/zivr_auto_vica_financial_data/zivr_auto_vica_financial_data</con:endpoint></con:endpoints><con:operation id="ade3f59b-d791-4eb7-b16c-bd46d50f0a80" isOneWay="false" action="" name="ZIvrAutoVicaFinancialData" bindingOperationName="ZIvrAutoVicaFinancialData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7c67092d-0593-48cd-94ff-defcdfe89203" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://172.18.41.30/sap/bc/srt/rfc/sap/zivr_auto_vica_financial_data/100/zivr_auto_vica_financial_data/zivr_auto_vica_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZIvrAutoVicaFinancialData>\r
         <IAdt>9032</IAdt>\r
         <IAfm>038360999</IAfm>\r
         <IPod>827069994</IPod>\r
      </urn:ZIvrAutoVicaFinancialData>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>IVR_D_V1</con:username><con:password>W3Bivrpp@!</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZIVR_AUTO_VICA_FINANCIAL_DATA/ZIvrAutoVicaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="5bf0ae06-baf1-4f66-910d-08ca3d02a79c" wsaVersion="NONE" name="ZWAPP_BP_CONTRACT_DETAILSV2" type="wsdl" bindingName="{urn:sap-com:document:sap:soap:functions:mc-style}ZWAPP_BP_CONTRACT_DETAILSV2" soapVersion="1_1" anonymous="optional" definition="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_629859016C1E8700E10080090A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_629859016C1E8700E10080090A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100"><con:part><con:url>http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_629859016C1E8700E10080090A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:n1="urn:sap-com:document:sap:rfc:functions">
  <wsdl:documentation>
    <sidl:sidl xmlns:sidl="http://www.sap.com/2007/03/sidl"/>
  </wsdl:documentation>
  <wsp:UsingPolicy wsdl:required="true"/>
  <wsp:Policy wsu:Id="BN_ZWAPP_BP_CONTRACT_DETAILSV2">
    <wsaw:UsingAddressing xmlns:wsaw="http://schemas.xmlsoap.org/ws/2004/08/addressing"/>
    <saptrnbnd:OptimizedXMLTransfer uri="http://xml.sap.com/2006/11/esi/esp/binxml" wsp:Optional="true" xmlns:saptrnbnd="http://www.sap.com/webas/710/soap/features/transportbinding/"/>
    <sapattahnd:Enabled xmlns:sapattahnd="http://www.sap.com/710/features/attachment/">false</sapattahnd:Enabled>
    <wsp:ExactlyOne xmlns:sapsp="http://www.sap.com/webas/630/soap/features/security/policy" xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/07/utility">
      <wsp:All>
        <sp:TransportBinding>
          <wsp:Policy>
            <sp:TransportToken>
              <wsp:Policy>
                <sp:HttpsToken>
                  <wsp:Policy>
                    <sp:HttpBasicAuthentication/>
                  </wsp:Policy>
                </sp:HttpsToken>
              </wsp:Policy>
            </sp:TransportToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:TripleDesRsa15/>
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Strict/>
              </wsp:Policy>
            </sp:Layout>
          </wsp:Policy>
        </sp:TransportBinding>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsp:Policy wsu:Id="IF_ZWAPP_BP_CONTRACT_DETAILSV2">
    <sapsession:Session xmlns:sapsession="http://www.sap.com/webas/630/soap/features/session/">
      <sapsession:enableSession>false</sapsession:enableSession>
    </sapsession:Session>
    <sapcentraladmin:CentralAdministration wsp:Optional="true" xmlns:sapcentraladmin="http://www.sap.com/webas/700/soap/features/CentralAdministration/">
      <sapcentraladmin:BusinessApplicationID>5A2E8A9B2DED2140E10080000A0B126E</sapcentraladmin:BusinessApplicationID>
    </sapcentraladmin:CentralAdministration>
  </wsp:Policy>
  <wsp:Policy wsu:Id="OP_ZWappBpContractDetailsv2">
    <sapcomhnd:enableCommit xmlns:sapcomhnd="http://www.sap.com/NW05/soap/features/commit/">false</sapcomhnd:enableCommit>
    <sapblock:enableBlocking xmlns:sapblock="http://www.sap.com/NW05/soap/features/blocking/">true</sapblock:enableBlocking>
    <saptrhnw05:required xmlns:saptrhnw05="http://www.sap.com/NW05/soap/features/transaction/">no</saptrhnw05:required>
    <saprmnw05:enableWSRM xmlns:saprmnw05="http://www.sap.com/NW05/soap/features/wsrm/">false</saprmnw05:enableWSRM>
  </wsp:Policy>
  <wsdl:types>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:rfc:functions">
      <xsd:simpleType name="char1">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char100">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="100"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char12">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="12"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char14">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="14"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char15">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="15"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char2">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="2"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char20">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char25">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="25"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char30">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="30"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char4">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char40">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="40"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char5">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="5"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char50">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="50"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char6">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="6"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char60">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="60"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char70">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="70"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char8">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="8"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char80">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="80"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char81">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="81"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="date10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
          <xsd:pattern value="\d\d\d\d-\d\d-\d\d"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="decimal16.7">
        <xsd:restriction base="xsd:decimal">
          <xsd:totalDigits value="16"/>
          <xsd:fractionDigits value="7"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="numeric10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
          <xsd:pattern value="\d*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="numeric2">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="2"/>
          <xsd:pattern value="\d*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="numeric4">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
          <xsd:pattern value="\d*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="numeric7">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="7"/>
          <xsd:pattern value="\d*"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:n0="urn:sap-com:document:sap:rfc:functions">
      <xsd:import namespace="urn:sap-com:document:sap:rfc:functions"/>
      <xsd:complexType name="ZwappBpContractDetailsv2">
        <xsd:sequence>
          <xsd:element name="BusinessPartnerId" type="n0:char10"/>
          <xsd:element name="MasterId" type="n0:numeric10"/>
          <xsd:element name="Type" type="n0:char1"/>
          <xsd:element name="TypeDescr" type="n0:char60"/>
          <xsd:element name="InvTypeId" type="n0:char1"/>
          <xsd:element name="InvoiceType" type="n0:char15"/>
          <xsd:element name="Afm" type="n0:char20"/>
          <xsd:element name="Idnumber" type="n0:char60"/>
          <xsd:element name="CustomerName" type="n0:char80"/>
          <xsd:element name="Titleid" type="n0:char4"/>
          <xsd:element name="Titledesc" type="n0:char30"/>
          <xsd:element name="Name" type="n0:char40"/>
          <xsd:element name="Surname" type="n0:char40"/>
          <xsd:element name="Fthname" type="n0:char40"/>
          <xsd:element name="Companyname" type="n0:char81"/>
          <xsd:element name="Addresses" type="tns:ZwappTabAddressData"/>
          <xsd:element name="Prepaid" type="n0:char1"/>
          <xsd:element name="RfCode" type="n0:numeric2"/>
          <xsd:element name="RfCode25" type="n0:char25"/>
          <xsd:element name="Mru" type="n0:char8"/>
          <xsd:element name="ContractNumber" type="n0:char10"/>
          <xsd:element name="ContracType" type="n0:char2"/>
          <xsd:element name="MoveInDate" type="n0:date10"/>
          <xsd:element name="InstallationType" type="n0:char4"/>
          <xsd:element name="VoltageLevel" type="n0:char4"/>
          <xsd:element name="ContractAccountCategory" type="n0:char2"/>
          <xsd:element name="AccountDeterminationId" type="n0:char2"/>
          <xsd:element name="IncomingPaymentMethod" type="n0:char1"/>
          <xsd:element name="TradingPartner" type="n0:char6"/>
          <xsd:element name="DunningProcedure" type="n0:char2"/>
          <xsd:element name="AlertSmsSelfMetering" type="n0:char1"/>
          <xsd:element name="AlertEmailSelfMetering" type="n0:char1"/>
          <xsd:element name="Status" type="n0:char2"/>
          <xsd:element name="Moveoutdate" type="n0:date10"/>
          <xsd:element name="Pod" type="n0:char20"/>
          <xsd:element name="Tm" type="n0:numeric7"/>
          <xsd:element name="ConstructionYear" type="n0:numeric4"/>
          <xsd:element name="KotCategory" type="n0:char1"/>
          <xsd:element name="KotOperand" type="n0:decimal16.7"/>
          <xsd:element name="KotDescription" type="n0:char14"/>
          <xsd:element name="EyaCategory" type="n0:char1"/>
          <xsd:element name="EyaOperand" type="n0:decimal16.7"/>
          <xsd:element name="EyaDescription" type="n0:char14"/>
          <xsd:element name="TyaCategory" type="n0:char1"/>
          <xsd:element name="TyaOperand" type="n0:decimal16.7"/>
          <xsd:element name="PkyCategory" type="n0:char10"/>
          <xsd:element name="BrancheCode" type="n0:char10"/>
          <xsd:element name="Branche" type="n0:char1"/>
          <xsd:element name="BrancheDescription" type="n0:char100"/>
          <xsd:element name="CollectiveContractAccount" type="n0:char12"/>
          <xsd:element name="LastResort" type="n0:char1"/>
          <xsd:element name="NetMetering" type="n0:char1"/>
          <xsd:element name="Photovoltaic" type="n0:char1"/>
          <xsd:element name="RegisterTypeDay" type="n0:char1"/>
          <xsd:element name="RegisterTypeNight" type="n0:char1"/>
          <xsd:element name="TyposMetriti" type="n0:char5"/>
          <xsd:element name="TarifTyp" type="n0:char10"/>
          <xsd:element name="TarifDescription" type="n0:char40"/>
          <xsd:element name="Segmentation" type="n0:char2"/>
          <xsd:element name="SegmentationName" type="n0:char60"/>
          <xsd:element name="ActiveProduct" type="tns:ZwappActiveProduct"/>
          <xsd:element name="AvailableProducts" type="tns:ZwappAvailableProductT"/>
          <xsd:element name="Addons" type="tns:ZwappAddonT"/>
          <xsd:element name="MonthlyBill" type="n0:char1"/>
          <xsd:element name="EbillOnly" type="n0:char1"/>
          <xsd:element name="EmailNotification" type="n0:char1"/>
          <xsd:element name="SmsNotification" type="n0:char1"/>
          <xsd:element name="PushNotification" type="n0:char1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappStrAddressData">
        <xsd:sequence>
          <xsd:element name="AddressType" type="n0:char10"/>
          <xsd:element name="AddressStreet" type="n0:char60"/>
          <xsd:element name="AddressNumber" type="n0:char10"/>
          <xsd:element name="AddressCity" type="n0:char40"/>
          <xsd:element name="AddressPc" type="n0:char10"/>
          <xsd:element name="AddressPoBox" type="n0:char10"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappActiveProduct">
        <xsd:sequence>
          <xsd:element name="ProductId" type="n0:char2"/>
          <xsd:element name="ProductName" type="n0:char50"/>
          <xsd:element name="ExpirationDate" type="n0:date10"/>
          <xsd:element name="Operands" type="tns:ZwappOperandT"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappOperand">
        <xsd:sequence>
          <xsd:element name="OperandCode" type="n0:char10"/>
          <xsd:element name="OperandType" type="n0:char8"/>
          <xsd:element name="OperandValue" type="n0:char20"/>
          <xsd:element name="TimesliceStart" type="n0:date10"/>
          <xsd:element name="TimesliceEnd" type="n0:date10"/>
          <xsd:element name="OperandDescription" type="n0:char30"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappAvailableProduct">
        <xsd:sequence>
          <xsd:element name="ProductId" type="n0:char2"/>
          <xsd:element name="ProductName" type="n0:char50"/>
          <xsd:element name="TarifTyp" type="n0:char10"/>
          <xsd:element name="TarifDescription" type="n0:char40"/>
          <xsd:element name="Operands" type="tns:ZwappOperandT"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappAddon">
        <xsd:sequence>
          <xsd:element name="Id" type="n0:char10"/>
          <xsd:element name="Name" type="n0:char50"/>
          <xsd:element name="StartDate" type="n0:date10"/>
          <xsd:element name="EndDate" type="n0:date10"/>
          <xsd:element name="Operands" type="tns:ZwappOperandT"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappBpContractDetailsv2T">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwappBpContractDetailsv2" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappTabAddressData">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwappStrAddressData" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappOperandT">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwappOperand" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappAvailableProductT">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwappAvailableProduct" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZwappAddonT">
        <xsd:sequence>
          <xsd:element name="item" type="tns:ZwappAddon" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ZWappBpContractDetailsv2">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="ContractAccount" type="n0:char12"/>
            <xsd:element name="Source" type="n0:char20" minOccurs="0"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ZWappBpContractDetailsv2Response">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="ContractsDetails" type="tns:ZwappBpContractDetailsv2T"/>
            <xsd:element name="ResultCode" type="n0:char4"/>
            <xsd:element name="ResultMessage" type="n0:char70"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ZWappBpContractDetailsv2">
    <wsdl:part name="parameters" element="tns:ZWappBpContractDetailsv2"/>
  </wsdl:message>
  <wsdl:message name="ZWappBpContractDetailsv2Response">
    <wsdl:part name="parameter" element="tns:ZWappBpContractDetailsv2Response"/>
  </wsdl:message>
  <wsdl:portType name="ZWAPP_BP_CONTRACT_DETAILSV2">
    <wsp:Policy>
      <wsp:PolicyReference URI="#IF_ZWAPP_BP_CONTRACT_DETAILSV2"/>
    </wsp:Policy>
    <wsdl:operation name="ZWappBpContractDetailsv2">
      <wsp:Policy>
        <wsp:PolicyReference URI="#OP_ZWappBpContractDetailsv2"/>
      </wsp:Policy>
      <wsdl:input message="tns:ZWappBpContractDetailsv2"/>
      <wsdl:output message="tns:ZWappBpContractDetailsv2Response"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ZWAPP_BP_CONTRACT_DETAILSV2" type="tns:ZWAPP_BP_CONTRACT_DETAILSV2">
    <wsp:Policy>
      <wsp:PolicyReference URI="#BN_ZWAPP_BP_CONTRACT_DETAILSV2"/>
    </wsp:Policy>
    <wsa:EndpointReference xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing">
      <wsa:ReferenceParameters/>
    </wsa:EndpointReference>
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="ZWappBpContractDetailsv2">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ZWAPP_BP_CONTRACT_DETAILSV2">
    <wsdl:port name="ZWAPP_BP_CONTRACT_DETAILSV2" binding="tns:ZWAPP_BP_CONTRACT_DETAILSV2">
      <soap:address location="https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_bp_contract_detailsv2/100/zwapp_bp_contract_detailsv2/zwapp_bp_contract_detailsv2"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_bp_contract_detailsv2/100/zwapp_bp_contract_detailsv2/zwapp_bp_contract_detailsv2</con:endpoint></con:endpoints><con:operation id="12485dbe-13c2-4e61-b8de-83e2ac5ceb15" isOneWay="false" action="" name="ZWappBpContractDetailsv2" bindingOperationName="ZWappBpContractDetailsv2" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8330322d-1f7c-4bda-8785-2919f6188a75" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_bp_contract_detailsv2/100/zwapp_bp_contract_detailsv2/zwapp_bp_contract_detailsv2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetailsv2>\r
         <ContractAccount>300015700830</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetailsv2>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILSV2/ZWappBpContractDetailsv2Request"/><con:wsrmConfig version="1.2"/></con:call><con:call id="74fcf9db-2dfe-4439-9234-3bbbb919c02b" name="Copy of Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_bp_contract_detailsv2/100/zwapp_bp_contract_detailsv2/zwapp_bp_contract_detailsv2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetailsv2>\r
         <ContractAccount>300002164681</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetailsv2>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WA_F_V1</con:username><con:password>Ppcw3bf0rms!</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILSV2/ZWappBpContractDetailsv2Request"/><con:wsrmConfig version="1.2"/></con:call><con:call id="511aba0b-d198-43a1-a29a-a0b1a7342eff" name="DR_0910_BP_CONTRACT_DETAILS_V2_LINAKIS"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_bp_contract_detailsv2/100/zwapp_bp_contract_detailsv2/zwapp_bp_contract_detailsv2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetailsv2>\r
         <ContractAccount>300015700830</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetailsv2>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WA_F_V1</con:username><con:password>Ppcw3bf0rms!</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILSV2/ZWappBpContractDetailsv2Request"/><con:wsrmConfig version="1.2"/></con:call><con:call id="9003ce22-84d3-4204-bf86-f6c217071514" name="Copy of DR_0910_BP_CONTRACT_DETAILS_V2_WEBAPP"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_bp_contract_detailsv2/100/zwapp_bp_contract_detailsv2/zwapp_bp_contract_detailsv2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetailsv2>\r
         <ContractAccount>300015700830</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetailsv2>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILSV2/ZWappBpContractDetailsv2Request"/><con:wsrmConfig version="1.2"/></con:call><con:call id="08348739-a473-45a3-bf2a-25b13a3942b3" name="Copy of Copy of DR_0910_BP_CONTRACT_DETAILS_V2_WEBAPP"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://172.18.71.36:44398/sap/bc/srt/rfc/sap/zwapp_bp_contract_detailsv2/100/zwapp_bp_contract_detailsv2/zwapp_bp_contract_detailsv2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetailsv2>\r
         <ContractAccount>300002164681</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetailsv2>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILSV2/ZWappBpContractDetailsv2Request"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="25870d83-406e-49dd-ba38-2951ae81ac53" wsaVersion="NONE" name="ZWAPP_DOB_ATTACHMENTS" type="wsdl" bindingName="{urn:sap-com:document:sap:soap:functions:mc-style}ZWAPP_DOB_ATTACHMENTS" soapVersion="1_1" anonymous="optional" definition="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_629E65E9E2A34CC0E100805D0A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_629E65E9E2A34CC0E100805D0A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100"><con:part><con:url>http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_629E65E9E2A34CC0E100805D0A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:n1="urn:sap-com:document:sap:rfc:functions">
  <wsdl:documentation>
    <sidl:sidl xmlns:sidl="http://www.sap.com/2007/03/sidl"/>
  </wsdl:documentation>
  <wsp:UsingPolicy wsdl:required="true"/>
  <wsp:Policy wsu:Id="BN_ZWAPP_DOB_ATTACHMENTS">
    <wsaw:UsingAddressing xmlns:wsaw="http://schemas.xmlsoap.org/ws/2004/08/addressing"/>
    <saptrnbnd:OptimizedXMLTransfer uri="http://xml.sap.com/2006/11/esi/esp/binxml" wsp:Optional="true" xmlns:saptrnbnd="http://www.sap.com/webas/710/soap/features/transportbinding/"/>
    <sapattahnd:Enabled xmlns:sapattahnd="http://www.sap.com/710/features/attachment/">false</sapattahnd:Enabled>
    <wsp:ExactlyOne xmlns:sapsp="http://www.sap.com/webas/630/soap/features/security/policy" xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/07/utility">
      <wsp:All>
        <sp:TransportBinding>
          <wsp:Policy>
            <sp:TransportToken>
              <wsp:Policy>
                <sp:HttpsToken>
                  <wsp:Policy>
                    <sp:HttpBasicAuthentication/>
                  </wsp:Policy>
                </sp:HttpsToken>
              </wsp:Policy>
            </sp:TransportToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:TripleDesRsa15/>
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Strict/>
              </wsp:Policy>
            </sp:Layout>
          </wsp:Policy>
        </sp:TransportBinding>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsp:Policy wsu:Id="IF_ZWAPP_DOB_ATTACHMENTS">
    <sapsession:Session xmlns:sapsession="http://www.sap.com/webas/630/soap/features/session/">
      <sapsession:enableSession>false</sapsession:enableSession>
    </sapsession:Session>
    <sapcentraladmin:CentralAdministration wsp:Optional="true" xmlns:sapcentraladmin="http://www.sap.com/webas/700/soap/features/CentralAdministration/">
      <sapcentraladmin:BusinessApplicationID>5A2E8A9B2DED2140E10080000A0B126E</sapcentraladmin:BusinessApplicationID>
    </sapcentraladmin:CentralAdministration>
  </wsp:Policy>
  <wsp:Policy wsu:Id="OP_ZWappDobAttachments">
    <sapcomhnd:enableCommit xmlns:sapcomhnd="http://www.sap.com/NW05/soap/features/commit/">false</sapcomhnd:enableCommit>
    <sapblock:enableBlocking xmlns:sapblock="http://www.sap.com/NW05/soap/features/blocking/">true</sapblock:enableBlocking>
    <saptrhnw05:required xmlns:saptrhnw05="http://www.sap.com/NW05/soap/features/transaction/">no</saptrhnw05:required>
    <saprmnw05:enableWSRM xmlns:saprmnw05="http://www.sap.com/NW05/soap/features/wsrm/">false</saprmnw05:enableWSRM>
  </wsp:Policy>
  <wsdl:types>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:rfc:functions">
      <xsd:simpleType name="char220">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="220"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char4">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="numeric12">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="12"/>
          <xsd:pattern value="\d*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="string">
        <xsd:restriction base="xsd:string"/>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:n0="urn:sap-com:document:sap:rfc:functions">
      <xsd:import namespace="urn:sap-com:document:sap:rfc:functions"/>
      <xsd:element name="ZWappDobAttachments">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Json" type="n0:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ZWappDobAttachmentsResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="EId" type="n0:numeric12"/>
            <xsd:element name="ResultCode" type="n0:char4"/>
            <xsd:element name="ResultMessage" type="n0:char220"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ZWappDobAttachments">
    <wsdl:part name="parameters" element="tns:ZWappDobAttachments"/>
  </wsdl:message>
  <wsdl:message name="ZWappDobAttachmentsResponse">
    <wsdl:part name="parameter" element="tns:ZWappDobAttachmentsResponse"/>
  </wsdl:message>
  <wsdl:portType name="ZWAPP_DOB_ATTACHMENTS">
    <wsp:Policy>
      <wsp:PolicyReference URI="#IF_ZWAPP_DOB_ATTACHMENTS"/>
    </wsp:Policy>
    <wsdl:operation name="ZWappDobAttachments">
      <wsp:Policy>
        <wsp:PolicyReference URI="#OP_ZWappDobAttachments"/>
      </wsp:Policy>
      <wsdl:input message="tns:ZWappDobAttachments"/>
      <wsdl:output message="tns:ZWappDobAttachmentsResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ZWAPP_DOB_ATTACHMENTS" type="tns:ZWAPP_DOB_ATTACHMENTS">
    <wsp:Policy>
      <wsp:PolicyReference URI="#BN_ZWAPP_DOB_ATTACHMENTS"/>
    </wsp:Policy>
    <wsa:EndpointReference xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing">
      <wsa:ReferenceParameters/>
    </wsa:EndpointReference>
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="ZWappDobAttachments">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ZWAPP_DOB_ATTACHMENTS">
    <wsdl:port name="ZWAPP_DOB_ATTACHMENTS" binding="tns:ZWAPP_DOB_ATTACHMENTS">
      <soap:address location="https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_dob_attachments/100/zwapp_dob_attachments/zwapp_dob_attachments"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_dob_attachments/100/zwapp_dob_attachments/zwapp_dob_attachments</con:endpoint></con:endpoints><con:operation id="23c3183e-96e0-4f4f-91bc-7edf0ccbc396" isOneWay="false" action="" name="ZWappDobAttachments" bindingOperationName="ZWappDobAttachments" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="91e97a90-c8c7-4595-a4d5-8ebefb315c74" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_dob_attachments/100/zwapp_dob_attachments/zwapp_dob_attachments</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappDobAttachments>\r
         <Json></Json>\r
      </urn:ZWappDobAttachments>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>DOB_D_V1</con:username><con:password>pPc0nboard!</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_DOB_ATTACHMENTS/ZWappDobAttachmentsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="6ef3f896-1f99-4563-9f42-483f10532ab1" name="Copy of Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapisu_pr.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_dob_attachments/100/zwapp_dob_attachments/zwapp_dob_attachments</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappDobAttachments>\r
         <Json></Json>\r
      </urn:ZWappDobAttachments>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>DOB_D_V1</con:username><con:password>pPc0nboard!</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_DOB_ATTACHMENTS/ZWappDobAttachmentsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="c3f974bf-4da6-4aab-b967-edf5af65de73" name="Copy of Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_dob_attachments/100/zwapp_dob_attachments/zwapp_dob_attachments</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappDobAttachments>\r
         <Json></Json>\r
      </urn:ZWappDobAttachments>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>DOB_D_V1</con:username><con:password>pPc0nboard!</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_DOB_ATTACHMENTS/ZWappDobAttachmentsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="5e884217-e0bc-44f7-a1c5-d549b72d9549" name="Copy of Copy of Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://172.18.41.30:44398/sap/bc/srt/rfc/sap/zwapp_dob_attachments/100/zwapp_dob_attachments/zwapp_dob_attachments</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappDobAttachments>\r
         <Json></Json>\r
      </urn:ZWappDobAttachments>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>DOB_D_V1</con:username><con:password>pPc0nboard!</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_DOB_ATTACHMENTS/ZWappDobAttachmentsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="b75dbe5a-b65e-4cbd-b044-d219ea03d6a5" name="DR_DOB_ATTACHMENTS"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://172.18.41.30:44398/sap/bc/srt/rfc/sap/zwapp_dob_attachments/100/zwapp_dob_attachments/zwapp_dob_attachments</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappDobAttachments>\r
         <Json></Json>\r
      </urn:ZWappDobAttachments>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>DOB_D_V1</con:username><con:password>pPc0nboard!</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_DOB_ATTACHMENTS/ZWappDobAttachmentsRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="514c0c40-a8f4-488a-86b2-edb85b896e67" wsaVersion="NONE" name="ZWAPP_INSERT_APS_PAYMENT" type="wsdl" bindingName="{urn:sap-com:document:sap:soap:functions:mc-style}ZWAPP_INSERT_APS_PAYMENT" soapVersion="1_1" anonymous="optional" definition="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_618A93446A349300E10080130A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_618A93446A349300E10080130A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100"><con:part><con:url>http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_618A93446A349300E10080130A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:n1="urn:sap-com:document:sap:rfc:functions">
  <wsdl:documentation>
    <sidl:sidl xmlns:sidl="http://www.sap.com/2007/03/sidl"/>
  </wsdl:documentation>
  <wsp:UsingPolicy wsdl:required="true"/>
  <wsp:Policy wsu:Id="BN_ZWAPP_INSERT_APS_PAYMENT">
    <wsaw:UsingAddressing xmlns:wsaw="http://schemas.xmlsoap.org/ws/2004/08/addressing"/>
    <saptrnbnd:OptimizedXMLTransfer uri="http://xml.sap.com/2006/11/esi/esp/binxml" wsp:Optional="true" xmlns:saptrnbnd="http://www.sap.com/webas/710/soap/features/transportbinding/"/>
    <sapattahnd:Enabled xmlns:sapattahnd="http://www.sap.com/710/features/attachment/">false</sapattahnd:Enabled>
    <wsp:ExactlyOne xmlns:sapsp="http://www.sap.com/webas/630/soap/features/security/policy" xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/07/utility">
      <wsp:All>
        <sp:TransportBinding>
          <wsp:Policy>
            <sp:TransportToken>
              <wsp:Policy>
                <sp:HttpsToken>
                  <wsp:Policy>
                    <sp:HttpBasicAuthentication/>
                  </wsp:Policy>
                </sp:HttpsToken>
              </wsp:Policy>
            </sp:TransportToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:TripleDesRsa15/>
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Strict/>
              </wsp:Policy>
            </sp:Layout>
          </wsp:Policy>
        </sp:TransportBinding>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsp:Policy wsu:Id="IF_ZWAPP_INSERT_APS_PAYMENT">
    <sapsession:Session xmlns:sapsession="http://www.sap.com/webas/630/soap/features/session/">
      <sapsession:enableSession>false</sapsession:enableSession>
    </sapsession:Session>
    <sapcentraladmin:CentralAdministration wsp:Optional="true" xmlns:sapcentraladmin="http://www.sap.com/webas/700/soap/features/CentralAdministration/">
      <sapcentraladmin:BusinessApplicationID>5A2E8A9B2DED2140E10080000A0B126E</sapcentraladmin:BusinessApplicationID>
    </sapcentraladmin:CentralAdministration>
  </wsp:Policy>
  <wsp:Policy wsu:Id="OP_ZWappInsertApsPayment">
    <sapcomhnd:enableCommit xmlns:sapcomhnd="http://www.sap.com/NW05/soap/features/commit/">false</sapcomhnd:enableCommit>
    <sapblock:enableBlocking xmlns:sapblock="http://www.sap.com/NW05/soap/features/blocking/">true</sapblock:enableBlocking>
    <saptrhnw05:required xmlns:saptrhnw05="http://www.sap.com/NW05/soap/features/transaction/">no</saptrhnw05:required>
    <saprmnw05:enableWSRM xmlns:saprmnw05="http://www.sap.com/NW05/soap/features/wsrm/">false</saprmnw05:enableWSRM>
  </wsp:Policy>
  <wsdl:types>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:rfc:functions">
      <xsd:simpleType name="char1">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char20">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char25">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="25"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char4">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="curr13.2">
        <xsd:restriction base="xsd:decimal">
          <xsd:totalDigits value="13"/>
          <xsd:fractionDigits value="2"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="date10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
          <xsd:pattern value="\d\d\d\d-\d\d-\d\d"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:n0="urn:sap-com:document:sap:rfc:functions">
      <xsd:import namespace="urn:sap-com:document:sap:rfc:functions"/>
      <xsd:simpleType name="char100">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="100"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char40">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="40"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char5">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="5"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char8">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="8"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:element name="ZWappInsertApsPayment">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Amount" type="n0:curr13.2"/>
            <xsd:element name="Branch" type="n0:char4"/>
            <xsd:element name="Cardtype" type="n0:char4"/>
            <xsd:element name="CashierBatch" type="tns:char5"/>
            <xsd:element name="Date" type="n0:date10"/>
            <xsd:element name="InitMode" type="n0:char1"/>
            <xsd:element name="KioskId" type="tns:char5"/>
            <xsd:element name="MultipleTransactions" type="n0:char1"/>
            <xsd:element name="Paymenttype" type="n0:char1"/>
            <xsd:element name="Rf" type="n0:char25"/>
            <xsd:element name="Source" type="n0:char20" minOccurs="0"/>
            <xsd:element name="Time" type="tns:char8"/>
            <xsd:element name="Uid" type="tns:char40"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ZWappInsertApsPaymentResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="ResultCode" type="n0:char4"/>
            <xsd:element name="ResultMessage" type="tns:char100"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ZWappInsertApsPayment">
    <wsdl:part name="parameters" element="tns:ZWappInsertApsPayment"/>
  </wsdl:message>
  <wsdl:message name="ZWappInsertApsPaymentResponse">
    <wsdl:part name="parameter" element="tns:ZWappInsertApsPaymentResponse"/>
  </wsdl:message>
  <wsdl:portType name="ZWAPP_INSERT_APS_PAYMENT">
    <wsp:Policy>
      <wsp:PolicyReference URI="#IF_ZWAPP_INSERT_APS_PAYMENT"/>
    </wsp:Policy>
    <wsdl:operation name="ZWappInsertApsPayment">
      <wsp:Policy>
        <wsp:PolicyReference URI="#OP_ZWappInsertApsPayment"/>
      </wsp:Policy>
      <wsdl:input message="tns:ZWappInsertApsPayment"/>
      <wsdl:output message="tns:ZWappInsertApsPaymentResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ZWAPP_INSERT_APS_PAYMENT" type="tns:ZWAPP_INSERT_APS_PAYMENT">
    <wsp:Policy>
      <wsp:PolicyReference URI="#BN_ZWAPP_INSERT_APS_PAYMENT"/>
    </wsp:Policy>
    <wsa:EndpointReference xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing">
      <wsa:ReferenceParameters/>
    </wsa:EndpointReference>
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="ZWappInsertApsPayment">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ZWAPP_INSERT_APS_PAYMENT">
    <wsdl:port name="ZWAPP_INSERT_APS_PAYMENT" binding="tns:ZWAPP_INSERT_APS_PAYMENT">
      <soap:address location="https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_insert_aps_payment/100/zwapp_insert_aps_payment/zwapp_insert_aps_payment"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_insert_aps_payment/100/zwapp_insert_aps_payment/zwapp_insert_aps_payment</con:endpoint></con:endpoints><con:operation id="cdb56ce0-785d-4804-aa32-bc68d1196b8f" isOneWay="false" action="" name="ZWappInsertApsPayment" bindingOperationName="ZWappInsertApsPayment" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="5f361c14-1159-4d2c-be75-ce6a810a6588" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_insert_aps_payment/100/zwapp_insert_aps_payment/zwapp_insert_aps_payment</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappInsertApsPayment>\r
         <Amount>?</Amount>\r
         <Branch>?</Branch>\r
         <Cardtype>?</Cardtype>\r
         <CashierBatch>?</CashierBatch>\r
         <Date>?</Date>\r
         <InitMode>?</InitMode>\r
         <KioskId>?</KioskId>\r
         <MultipleTransactions>?</MultipleTransactions>\r
         <Paymenttype>?</Paymenttype>\r
         <Rf>?</Rf>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
         <Time>?</Time>\r
         <Uid>?</Uid>\r
      </urn:ZWappInsertApsPayment>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>WEBAPP</con:username><con:password>https://websvcprd.deiWeb@pp123.gr:44398/sap/bc/srt/rfc/sap/zwapp</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_INSERT_APS_PAYMENT/ZWappInsertApsPaymentRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="131f7083-b0a0-4b98-9b9e-03b128114f69" name="Copy of Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_insert_aps_payment/100/zwapp_insert_aps_payment/zwapp_insert_aps_payment</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappInsertApsPayment>\r
         <Amount></Amount>\r
         <Branch></Branch>\r
         <Cardtype></Cardtype>\r
         <CashierBatch></CashierBatch>\r
         <Date></Date>\r
         <InitMode></InitMode>\r
         <KioskId></KioskId>\r
         <MultipleTransactions></MultipleTransactions>\r
         <Paymenttype></Paymenttype>\r
         <Rf></Rf>\r
         <!--Optional:-->\r
         <Source></Source>\r
         <Time></Time>\r
         <Uid></Uid>\r
      </urn:ZWappInsertApsPayment>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>LA709205</con:username><con:password>Aa123456</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_INSERT_APS_PAYMENT/ZWappInsertApsPaymentRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="50f3c9fd-8d17-4f58-bf2a-df0f057d52ee" wsaVersion="NONE" name="ZWAPP_VALIDATE_APS_RF" type="wsdl" bindingName="{urn:sap-com:document:sap:soap:functions:mc-style}ZWAPP_VALIDATE_APS_RF" soapVersion="1_1" anonymous="optional" definition="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_618B2B2D6C7B2780E100803D0A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_618B2B2D6C7B2780E100803D0A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100"><con:part><con:url>http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_618B2B2D6C7B2780E100803D0A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:n1="urn:sap-com:document:sap:rfc:functions">
  <wsdl:documentation>
    <sidl:sidl xmlns:sidl="http://www.sap.com/2007/03/sidl"/>
  </wsdl:documentation>
  <wsp:UsingPolicy wsdl:required="true"/>
  <wsp:Policy wsu:Id="BN_ZWAPP_VALIDATE_APS_RF">
    <wsaw:UsingAddressing xmlns:wsaw="http://schemas.xmlsoap.org/ws/2004/08/addressing"/>
    <saptrnbnd:OptimizedXMLTransfer uri="http://xml.sap.com/2006/11/esi/esp/binxml" wsp:Optional="true" xmlns:saptrnbnd="http://www.sap.com/webas/710/soap/features/transportbinding/"/>
    <sapattahnd:Enabled xmlns:sapattahnd="http://www.sap.com/710/features/attachment/">false</sapattahnd:Enabled>
    <wsp:ExactlyOne xmlns:sapsp="http://www.sap.com/webas/630/soap/features/security/policy" xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/07/utility">
      <wsp:All>
        <sp:TransportBinding>
          <wsp:Policy>
            <sp:TransportToken>
              <wsp:Policy>
                <sp:HttpsToken>
                  <wsp:Policy>
                    <sp:HttpBasicAuthentication/>
                  </wsp:Policy>
                </sp:HttpsToken>
              </wsp:Policy>
            </sp:TransportToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:TripleDesRsa15/>
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Strict/>
              </wsp:Policy>
            </sp:Layout>
          </wsp:Policy>
        </sp:TransportBinding>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsp:Policy wsu:Id="IF_ZWAPP_VALIDATE_APS_RF">
    <sapsession:Session xmlns:sapsession="http://www.sap.com/webas/630/soap/features/session/">
      <sapsession:enableSession>false</sapsession:enableSession>
    </sapsession:Session>
    <sapcentraladmin:CentralAdministration wsp:Optional="true" xmlns:sapcentraladmin="http://www.sap.com/webas/700/soap/features/CentralAdministration/">
      <sapcentraladmin:BusinessApplicationID>5A2E8A9B2DED2140E10080000A0B126E</sapcentraladmin:BusinessApplicationID>
    </sapcentraladmin:CentralAdministration>
  </wsp:Policy>
  <wsp:Policy wsu:Id="OP_ZWappValidateApsRf">
    <sapcomhnd:enableCommit xmlns:sapcomhnd="http://www.sap.com/NW05/soap/features/commit/">false</sapcomhnd:enableCommit>
    <sapblock:enableBlocking xmlns:sapblock="http://www.sap.com/NW05/soap/features/blocking/">true</sapblock:enableBlocking>
    <saptrhnw05:required xmlns:saptrhnw05="http://www.sap.com/NW05/soap/features/transaction/">no</saptrhnw05:required>
    <saprmnw05:enableWSRM xmlns:saprmnw05="http://www.sap.com/NW05/soap/features/wsrm/">false</saprmnw05:enableWSRM>
  </wsp:Policy>
  <wsdl:types>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:rfc:functions">
      <xsd:simpleType name="char1">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char20">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char25">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="25"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char4">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char40">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="40"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char60">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="60"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char70">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="70"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:n0="urn:sap-com:document:sap:rfc:functions">
      <xsd:import namespace="urn:sap-com:document:sap:rfc:functions"/>
      <xsd:complexType name="ZwappStrAddressData">
        <xsd:sequence>
          <xsd:element name="AddressType" type="n0:char10"/>
          <xsd:element name="AddressStreet" type="n0:char60"/>
          <xsd:element name="AddressNumber" type="n0:char10"/>
          <xsd:element name="AddressCity" type="n0:char40"/>
          <xsd:element name="AddressPc" type="n0:char10"/>
          <xsd:element name="AddressPoBox" type="n0:char10"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ZWappValidateApsRf">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="InitMode" type="n0:char1"/>
            <xsd:element name="RfCode" type="n0:char25"/>
            <xsd:element name="Source" type="n0:char20" minOccurs="0"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ZWappValidateApsRfResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Address" type="tns:ZwappStrAddressData"/>
            <xsd:element name="Name" type="n0:char40"/>
            <xsd:element name="ResultCode" type="n0:char4"/>
            <xsd:element name="ResultMessage" type="n0:char70"/>
            <xsd:element name="Surname" type="n0:char40"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ZWappValidateApsRf">
    <wsdl:part name="parameters" element="tns:ZWappValidateApsRf"/>
  </wsdl:message>
  <wsdl:message name="ZWappValidateApsRfResponse">
    <wsdl:part name="parameter" element="tns:ZWappValidateApsRfResponse"/>
  </wsdl:message>
  <wsdl:portType name="ZWAPP_VALIDATE_APS_RF">
    <wsp:Policy>
      <wsp:PolicyReference URI="#IF_ZWAPP_VALIDATE_APS_RF"/>
    </wsp:Policy>
    <wsdl:operation name="ZWappValidateApsRf">
      <wsp:Policy>
        <wsp:PolicyReference URI="#OP_ZWappValidateApsRf"/>
      </wsp:Policy>
      <wsdl:input message="tns:ZWappValidateApsRf"/>
      <wsdl:output message="tns:ZWappValidateApsRfResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ZWAPP_VALIDATE_APS_RF" type="tns:ZWAPP_VALIDATE_APS_RF">
    <wsp:Policy>
      <wsp:PolicyReference URI="#BN_ZWAPP_VALIDATE_APS_RF"/>
    </wsp:Policy>
    <wsa:EndpointReference xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing">
      <wsa:ReferenceParameters/>
    </wsa:EndpointReference>
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="ZWappValidateApsRf">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ZWAPP_VALIDATE_APS_RF">
    <wsdl:port name="ZWAPP_VALIDATE_APS_RF" binding="tns:ZWAPP_VALIDATE_APS_RF">
      <soap:address location="https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_validate_aps_rf/100/zwapp_validate_aps_rf/zwapp_validate_aps_rf"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_validate_aps_rf/100/zwapp_validate_aps_rf/zwapp_validate_aps_rf</con:endpoint></con:endpoints><con:operation id="3f05d5c9-c440-4143-9a45-0e995daa7f9a" isOneWay="false" action="" name="ZWappValidateApsRf" bindingOperationName="ZWappValidateApsRf" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8d81a1a1-b20f-4ed3-9a9a-56b92882640c" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_validate_aps_rf/100/zwapp_validate_aps_rf/zwapp_validate_aps_rf</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappValidateApsRf>\r
         <InitMode>?</InitMode>\r
         <RfCode>?</RfCode>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappValidateApsRf>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_VALIDATE_APS_RF/ZWappValidateApsRfRequest"/></con:call><con:call id="297c4f92-7b0a-48c9-801f-bdbc6430224b" name="DR_0910_VALIDATE_RF_APS"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_validate_aps_rf/100/zwapp_validate_aps_rf/zwapp_validate_aps_rf</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappValidateApsRf>\r
         <InitMode>1</InitMode>\r
         <RfCode>RF39907738000300002090038</RfCode>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappValidateApsRf>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>EC_D_V1</con:username><con:password>Ppc1ws@p1</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_VALIDATE_APS_RF/ZWappValidateApsRfRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="2ad738ba-bfbe-4c60-85ab-92ccd3e1bbc4" wsaVersion="NONE" name="ZWAPP_CHECK_CLIENT_MOVEIN" type="wsdl" bindingName="{urn:sap-com:document:sap:soap:functions:mc-style}ZWAPP_CHECK_CLIENT_MOVEIN" soapVersion="1_1" anonymous="optional" definition="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_618A7036F3967AC0E10080240A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_618A7036F3967AC0E10080240A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100"><con:part><con:url>http://sapr3p.dei.local:8000/sap/bc/srt/wsdl/bndg_618A7036F3967AC0E10080240A0B126E/wsdl11/allinone/ws_policy/document?sap-client=100</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:n1="urn:sap-com:document:sap:rfc:functions">
  <wsdl:documentation>
    <sidl:sidl xmlns:sidl="http://www.sap.com/2007/03/sidl"/>
  </wsdl:documentation>
  <wsp:UsingPolicy wsdl:required="true"/>
  <wsp:Policy wsu:Id="BN_ZWAPP_CHECK_CLIENT_MOVEIN">
    <wsaw:UsingAddressing xmlns:wsaw="http://schemas.xmlsoap.org/ws/2004/08/addressing"/>
    <saptrnbnd:OptimizedXMLTransfer uri="http://xml.sap.com/2006/11/esi/esp/binxml" wsp:Optional="true" xmlns:saptrnbnd="http://www.sap.com/webas/710/soap/features/transportbinding/"/>
    <sapattahnd:Enabled xmlns:sapattahnd="http://www.sap.com/710/features/attachment/">false</sapattahnd:Enabled>
    <wsp:ExactlyOne xmlns:sapsp="http://www.sap.com/webas/630/soap/features/security/policy" xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/07/utility">
      <wsp:All>
        <sp:TransportBinding>
          <wsp:Policy>
            <sp:TransportToken>
              <wsp:Policy>
                <sp:HttpsToken>
                  <wsp:Policy>
                    <sp:HttpBasicAuthentication/>
                  </wsp:Policy>
                </sp:HttpsToken>
              </wsp:Policy>
            </sp:TransportToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:TripleDesRsa15/>
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Strict/>
              </wsp:Policy>
            </sp:Layout>
          </wsp:Policy>
        </sp:TransportBinding>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsp:Policy wsu:Id="IF_ZWAPP_CHECK_CLIENT_MOVEIN">
    <sapsession:Session xmlns:sapsession="http://www.sap.com/webas/630/soap/features/session/">
      <sapsession:enableSession>false</sapsession:enableSession>
    </sapsession:Session>
    <sapcentraladmin:CentralAdministration wsp:Optional="true" xmlns:sapcentraladmin="http://www.sap.com/webas/700/soap/features/CentralAdministration/">
      <sapcentraladmin:BusinessApplicationID>5A2E8A9B2DED2140E10080000A0B126E</sapcentraladmin:BusinessApplicationID>
    </sapcentraladmin:CentralAdministration>
  </wsp:Policy>
  <wsp:Policy wsu:Id="OP_ZWappCheckClientMovein">
    <sapcomhnd:enableCommit xmlns:sapcomhnd="http://www.sap.com/NW05/soap/features/commit/">false</sapcomhnd:enableCommit>
    <sapblock:enableBlocking xmlns:sapblock="http://www.sap.com/NW05/soap/features/blocking/">true</sapblock:enableBlocking>
    <saptrhnw05:required xmlns:saptrhnw05="http://www.sap.com/NW05/soap/features/transaction/">no</saptrhnw05:required>
    <saprmnw05:enableWSRM xmlns:saprmnw05="http://www.sap.com/NW05/soap/features/wsrm/">false</saprmnw05:enableWSRM>
  </wsp:Policy>
  <wsdl:types>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:soap:functions:mc-style" xmlns:n0="urn:sap-com:document:sap:rfc:functions">
      <xsd:import namespace="urn:sap-com:document:sap:rfc:functions"/>
      <xsd:simpleType name="char220">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="220"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char30">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="30"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:element name="ZWappCheckClientMovein">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Batchsource" type="tns:char30"/>
            <xsd:element name="Pod" type="n0:char20"/>
            <xsd:element name="Source" type="n0:char20" minOccurs="0"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ZWappCheckClientMoveinResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Datein" type="n0:date10"/>
            <xsd:element name="ResultCode" type="n0:char4"/>
            <xsd:element name="ResultMessage" type="tns:char220"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" targetNamespace="urn:sap-com:document:sap:rfc:functions">
      <xsd:simpleType name="char20">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="char4">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="date10">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
          <xsd:pattern value="\d\d\d\d-\d\d-\d\d"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ZWappCheckClientMovein">
    <wsdl:part name="parameters" element="tns:ZWappCheckClientMovein"/>
  </wsdl:message>
  <wsdl:message name="ZWappCheckClientMoveinResponse">
    <wsdl:part name="parameter" element="tns:ZWappCheckClientMoveinResponse"/>
  </wsdl:message>
  <wsdl:portType name="ZWAPP_CHECK_CLIENT_MOVEIN">
    <wsp:Policy>
      <wsp:PolicyReference URI="#IF_ZWAPP_CHECK_CLIENT_MOVEIN"/>
    </wsp:Policy>
    <wsdl:operation name="ZWappCheckClientMovein">
      <wsp:Policy>
        <wsp:PolicyReference URI="#OP_ZWappCheckClientMovein"/>
      </wsp:Policy>
      <wsdl:input message="tns:ZWappCheckClientMovein"/>
      <wsdl:output message="tns:ZWappCheckClientMoveinResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ZWAPP_CHECK_CLIENT_MOVEIN" type="tns:ZWAPP_CHECK_CLIENT_MOVEIN">
    <wsp:Policy>
      <wsp:PolicyReference URI="#BN_ZWAPP_CHECK_CLIENT_MOVEIN"/>
    </wsp:Policy>
    <wsa:EndpointReference xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing">
      <wsa:ReferenceParameters/>
    </wsa:EndpointReference>
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="ZWappCheckClientMovein">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ZWAPP_CHECK_CLIENT_MOVEIN">
    <wsdl:port name="ZWAPP_CHECK_CLIENT_MOVEIN" binding="tns:ZWAPP_CHECK_CLIENT_MOVEIN">
      <soap:address location="https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_check_client_movein/100/zwapp_check_client_movein/zwapp_check_client_movein"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_check_client_movein/100/zwapp_check_client_movein/zwapp_check_client_movein</con:endpoint></con:endpoints><con:operation id="6ad03315-a3cc-41ec-82fa-285cbe6f948b" isOneWay="false" action="" name="ZWappCheckClientMovein" bindingOperationName="ZWappCheckClientMovein" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="d8a7f863-5939-4302-9303-f9fb85407804" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_check_client_movein/100/zwapp_check_client_movein/zwapp_check_client_movein</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappCheckClientMovein>\r
         <Batchsource>?</Batchsource>\r
         <Pod>?</Pod>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappCheckClientMovein>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_CHECK_CLIENT_MOVEIN/ZWappCheckClientMoveinRequest"/></con:call></con:operation></con:interface><con:testSuite id="15f4695b-67b9-494c-9e4a-3da388fed58a" name="SingleWS"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="44802b4d-6325-4f68-89ad-ed2c8acc799a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZGET_GET_COUNTRY_TEL_CODES" searchProperties="true"><con:settings/><con:loadTest id="a97d82bf-5a17-4dac-bd95-7ea8aa4dcde1" name="LoadTest 1"><con:settings/><con:threadCount>10</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="d8ea5ec6-8a9a-4291-a595-5f24c9b03332" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZWAPP_GET_CUSTOMER_DETAILS" searchProperties="true"><con:settings/><con:testStep type="request" id="f1dc050c-02c7-4089-a305-115588a67716" name="ZWappGetCustomerDetails - Request 1 - Normal" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CUSTOMER_DETAILS</con:interface><con:operation>ZWappGetCustomerDetails</con:operation><con:request name="ZWappGetCustomerDetails - Request 1 - Normal" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="dd320fca-638f-4705-aed5-720ccd979ffc"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3pa1.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_customer_details/100/zwapp_get_customer_details/zwapp_get_customer_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCustomerDetails>
         <BusinessPartnerId>1101302319</BusinessPartnerId>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetCustomerDetails>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="5b043676-42f9-42fc-8776-ec577e4a73e5" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_DETAILS/ZWappGetCustomerDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="fcbeaa99-9693-4cd2-99e2-5270f6e77a8c" name="ZWappGetCustomerDetails - Request 2 - Pollaplos" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CUSTOMER_DETAILS</con:interface><con:operation>ZWappGetCustomerDetails</con:operation><con:request name="ZWappGetCustomerDetails - Request 2 - Pollaplos" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="c87a58ad-afea-4407-a1cb-9e86e5443ca8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_customer_details/100/zwapp_get_customer_details/zwapp_get_customer_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCustomerDetails>
         <BusinessPartnerId>1000001208</BusinessPartnerId>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetCustomerDetails>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="866c0209-3a2d-4f04-b036-9fbec9cf123e" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_DETAILS/ZWappGetCustomerDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="11996c93-4ec9-4455-927d-f9a247d48991" name="ZWappGetCustomerDetails - Request 3 - Pollaplos(Pelataki)" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CUSTOMER_DETAILS</con:interface><con:operation>ZWappGetCustomerDetails</con:operation><con:request name="ZWappGetCustomerDetails - Request 3 - Pollaplos(Pelataki)" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="b65d61b7-7164-4662-a4ce-7441365ce7d4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_customer_details/100/zwapp_get_customer_details/zwapp_get_customer_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCustomerDetails>
         <BusinessPartnerId>1000004792</BusinessPartnerId>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetCustomerDetails>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="ff0363c2-a494-4b86-887b-0e6bf9242682" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_DETAILS/ZWappGetCustomerDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="5326b8d0-6776-4fcc-9d55-636b3b489110" name="Copy of ZWappGetCustomerDetails - Request 1 - Normal" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CUSTOMER_DETAILS</con:interface><con:operation>ZWappGetCustomerDetails</con:operation><con:request name="Copy of ZWappGetCustomerDetails - Request 1 - Normal" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="dd320fca-638f-4705-aed5-720ccd979ffc"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3pa2.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_customer_details/100/zwapp_get_customer_details/zwapp_get_customer_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCustomerDetails>
         <BusinessPartnerId>1101302319</BusinessPartnerId>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetCustomerDetails>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="5b043676-42f9-42fc-8776-ec577e4a73e5" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_DETAILS/ZWappGetCustomerDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="7daeb45f-160a-4e56-a826-5eba53a69375" name="Copy of Copy of ZWappGetCustomerDetails - Request 1 - Normal" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CUSTOMER_DETAILS</con:interface><con:operation>ZWappGetCustomerDetails</con:operation><con:request name="Copy of Copy of ZWappGetCustomerDetails - Request 1 - Normal" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="dd320fca-638f-4705-aed5-720ccd979ffc"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3pa3.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_customer_details/100/zwapp_get_customer_details/zwapp_get_customer_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCustomerDetails>
         <BusinessPartnerId>1101302319</BusinessPartnerId>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetCustomerDetails>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="5b043676-42f9-42fc-8776-ec577e4a73e5" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_DETAILS/ZWappGetCustomerDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="1cf143c5-2cc0-4e40-9ed2-189af6b2a058" name="Copy of Copy of Copy of ZWappGetCustomerDetails - Request 1 - Normal" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CUSTOMER_DETAILS</con:interface><con:operation>ZWappGetCustomerDetails</con:operation><con:request name="Copy of Copy of Copy of ZWappGetCustomerDetails - Request 1 - Normal" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="dd320fca-638f-4705-aed5-720ccd979ffc"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_customer_details/100/zwapp_get_customer_details/zwapp_get_customer_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCustomerDetails>
         <BusinessPartnerId>1101302319</BusinessPartnerId>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetCustomerDetails>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="5b043676-42f9-42fc-8776-ec577e4a73e5" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_DETAILS/ZWappGetCustomerDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="5c8cecd9-99a8-449e-add4-0bc2f7aa0b90" name="ZWappGetCustomerDetails - Dispatcher - Normal" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CUSTOMER_DETAILS</con:interface><con:operation>ZWappGetCustomerDetails</con:operation><con:request name="ZWappGetCustomerDetails - Dispatcher - Normal" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="616b3b42-14d8-45c6-a083-ecc529bfe0ba"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_customer_details/100/zwapp_get_customer_details/zwapp_get_customer_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCustomerDetails>
         <BusinessPartnerId>1101302319</BusinessPartnerId>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetCustomerDetails>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="5d893c21-140f-4763-9e0f-26c9d826ebf5" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_DETAILS/ZWappGetCustomerDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="b7ba838d-7230-45bf-b384-af6aa6788864" name="ZWappGetCustomerDetails - Dispatcher 2 - Pollaplos"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CUSTOMER_DETAILS</con:interface><con:operation>ZWappGetCustomerDetails</con:operation><con:request name="ZWappGetCustomerDetails - Dispatcher 2 - Pollaplos" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="262975b3-94b3-42ae-acc3-17c11d9b6abd"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_customer_details/100/zwapp_get_customer_details/zwapp_get_customer_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCustomerDetails>
         <BusinessPartnerId>1000001470</BusinessPartnerId>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetCustomerDetails>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="2305f4f9-1a89-4437-9b30-35ebd373dd16" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_DETAILS/ZWappGetCustomerDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="bd7ee353-2964-44d6-a818-151b98624c90" name="ZWappGetCustomerDetails - Dispatcher 3 - Pelataki Pollaplou" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CUSTOMER_DETAILS</con:interface><con:operation>ZWappGetCustomerDetails</con:operation><con:request name="ZWappGetCustomerDetails - Dispatcher 3 - Pelataki Pollaplou" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="d83107f6-ff11-4a49-87ec-3c8bffec32e3"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_customer_details/100/zwapp_get_customer_details/zwapp_get_customer_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCustomerDetails>
         <BusinessPartnerId>300000001968</BusinessPartnerId>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetCustomerDetails>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="460e8c91-1de0-406a-9eeb-c87013dc518c" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_DETAILS/ZWappGetCustomerDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="9261042b-ce7e-40f9-a400-c6a2085178e6" name="LoadTest 1"><con:settings/><con:threadCount>200</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>160</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>100</testDelay><randomFactor>0.5</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder>C:\Users\doulgeridis\Documents\prod_test</con:statisticsLogFolder><con:statisticsLogInterval>1</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep></con:loadTest><con:properties/></con:testCase><con:testCase id="f27038be-ae54-42a0-95f8-689147f018e1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZGET_CUSTOMER_CODES" searchProperties="true"><con:settings/><con:testStep type="request" id="2fe9c9d2-a5ee-4419-abed-b9657d25aed6" name="ZwappGetCustomerCodes2 - Request 1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZGET_CUSTOMER_CODES</con:interface><con:operation>ZwappGetCustomerCodes2</con:operation><con:request name="ZwappGetCustomerCodes2 - Request 1" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="9b990f5a-3cd6-4533-9982-065a028cfffe"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3pa3.dei.local:9000/sap/bc/srt/rfc/sap/zget_customer_codes/100/zget_customer_codes/zget_customer_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZwappGetCustomerCodes2>
         <Partner>1101302319</Partner>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZwappGetCustomerCodes2>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="5f5a0f0c-7fcf-45b2-9dc9-98be7142a232" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZGET_CUSTOMER_CODES/ZwappGetCustomerCodes2Request"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="ae9ac804-146b-4910-844e-5660863e2063" name="ZwappGetCustomerCodes2 - Request 2 - Pollaplos" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZGET_CUSTOMER_CODES</con:interface><con:operation>ZwappGetCustomerCodes2</con:operation><con:request name="ZwappGetCustomerCodes2 - Request 2 - Pollaplos" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="1afe9a3d-f9d0-4177-b43b-1fdf750811c8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zget_customer_codes/100/zget_customer_codes/zget_customer_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZwappGetCustomerCodes2>
         <Partner>1000001114</Partner>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZwappGetCustomerCodes2>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="30d6804b-5e30-4ae3-98ff-9eb484183ece" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZGET_CUSTOMER_CODES/ZwappGetCustomerCodes2Request"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="281e7f06-4ca9-4083-aa92-c007be96e1e5" name="ZwappGetCustomerCodes2 - Request 2.5 - Pollaplos me polla" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZGET_CUSTOMER_CODES</con:interface><con:operation>ZwappGetCustomerCodes2</con:operation><con:request name="ZwappGetCustomerCodes2 - Request 2.5 - Pollaplos me polla" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="011d8921-8a92-4090-bdf2-495f85dd9e41"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zget_customer_codes/100/zget_customer_codes/zget_customer_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZwappGetCustomerCodes2>
         <Partner>1000001114</Partner>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZwappGetCustomerCodes2>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="0cd9377e-9810-47c4-9129-a740c1bcb23b" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZGET_CUSTOMER_CODES/ZwappGetCustomerCodes2Request"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="13934d69-e46d-4d6c-9d3f-bd84c571d05b" name="ZwappGetCustomerCodes2 - Dispatcher - Normal"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZGET_CUSTOMER_CODES</con:interface><con:operation>ZwappGetCustomerCodes2</con:operation><con:request name="ZwappGetCustomerCodes2 - Dispatcher - Normal" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="4c4b5f4d-63a3-41c2-8f72-002986d4c4b8"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zget_customer_codes/100/zget_customer_codes/zget_customer_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZwappGetCustomerCodes2>
         <Partner>1101302319</Partner>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZwappGetCustomerCodes2>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="3e9aeb45-efc4-41cd-83b8-05f98f83dfbd" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZGET_CUSTOMER_CODES/ZwappGetCustomerCodes2Request"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="5361b4f7-dca1-4a45-9663-b362663c1058" name="ZwappGetCustomerCodes2 - Dispatcher 2 - Pollaplos"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZGET_CUSTOMER_CODES</con:interface><con:operation>ZwappGetCustomerCodes2</con:operation><con:request name="ZwappGetCustomerCodes2 - Dispatcher 2 - Pollaplos" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="cc17ba5c-79f7-46a0-9f43-7f23ce563b57"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zget_customer_codes/100/zget_customer_codes/zget_customer_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZwappGetCustomerCodes2>
         <Partner>1000001208</Partner>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZwappGetCustomerCodes2>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c5f0cef4-41fd-4d2d-8214-28f535836d07" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZGET_CUSTOMER_CODES/ZwappGetCustomerCodes2Request"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="f31f6939-d2ff-4885-83c6-deba27db89c1" name="ZwappGetCustomerCodes2 - Dispatcher 3 - Pollaplos me polla"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZGET_CUSTOMER_CODES</con:interface><con:operation>ZwappGetCustomerCodes2</con:operation><con:request name="ZwappGetCustomerCodes2 - Dispatcher 3 - Pollaplos me polla" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="aef66fc8-2cd4-45b5-b50b-7fe841e423e7"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zget_customer_codes/100/zget_customer_codes/zget_customer_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZwappGetCustomerCodes2>
         <Partner>1000001114</Partner>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZwappGetCustomerCodes2>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="1da84539-c1bc-4eab-9efe-cdebdaa1e920" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZGET_CUSTOMER_CODES/ZwappGetCustomerCodes2Request"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="466dfa88-73d6-4749-aead-6df9eacf01c4" name="UniformLoad  - Simple"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting></con:settings><con:threadCount>20</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>1000</testDelay><randomFactor>0.5</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:loadTest id="6b93bb5e-4c02-45cc-82ec-984d1a6d7182" name="VarianceLoad"><con:settings/><con:threadCount>10</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Variance</con:type><con:config><interval>20000</interval><variance>0.5</variance></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:loadTest id="e0e289f7-00c4-466e-9a4f-407895b1a8b7" name="UniformLoad - Hvy"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting></con:settings><con:threadCount>30</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>260</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>1000</testDelay><randomFactor>0.5</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:loadTest id="7c77af2c-c05c-42e5-8324-e0c617019d0e" name="BurstLoad"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting></con:settings><con:threadCount>20</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>260</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Burst</con:type><con:config><burstDelay>20000</burstDelay><burstDuration>10000</burstDuration></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="93ee3b0f-4b04-4a59-9e3a-d6ad719a2f7f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZWAPP_BP_CONTRACT_DETAILS" searchProperties="true"><con:settings/><con:testStep type="request" id="07b600ac-af19-498d-a569-565ba19df741" name="ZWappBpContractDetails - Request 5 - CA Normal (Status 14)" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_BP_CONTRACT_DETAILS</con:interface><con:operation>ZWappBpContractDetails</con:operation><con:request name="ZWappBpContractDetails - Request 5 - CA Normal (Status 14)" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="4eb94b3e-c1a7-498c-a153-9c38350f41c9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappBpContractDetails>
         <ContractAccount>300002164681</ContractAccount>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappBpContractDetails>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="320340c4-b5f7-465a-aaac-5ffc122be693" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="2a4317e8-8d7a-4739-9787-7af29d8df7c4" name="ZWappBpContractDetails - Request 2 - Pelataki Pollaplou" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_BP_CONTRACT_DETAILS</con:interface><con:operation>ZWappBpContractDetails</con:operation><con:request name="ZWappBpContractDetails - Request 2 - Pelataki Pollaplou" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="85eac4be-0173-4ad9-87bd-b1e032785185"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappBpContractDetails>
         <ContractAccount>300000001968</ContractAccount>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappBpContractDetails>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e8ea478f-f51d-46a4-bde6-0fc239d6ea62" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="1d7716f2-91df-43e6-a50e-788aa4c32db8" name="ZWappBpContractDetails - Request 4 - CA Pollaplou" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_BP_CONTRACT_DETAILS</con:interface><con:operation>ZWappBpContractDetails</con:operation><con:request name="ZWappBpContractDetails - Request 4 - CA Pollaplou" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="05984a04-4214-4020-b362-1079759c9231"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappBpContractDetails>
         <ContractAccount>1000001470</ContractAccount>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappBpContractDetails>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="51aaef69-0fea-41a4-85f8-21ad7579d546" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="85416a7b-c895-4585-9310-ad2ee33861cc" name="ZWappBpContractDetails - Dispatcher 1 - CA Normal (Status14)" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_BP_CONTRACT_DETAILS</con:interface><con:operation>ZWappBpContractDetails</con:operation><con:request name="ZWappBpContractDetails - Dispatcher 1 - CA Normal (Status14)" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="deec8a76-3e8a-4f21-a1c0-8f55c9239306"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappBpContractDetails>
         <ContractAccount>300002164681</ContractAccount>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappBpContractDetails>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="7e28496f-7230-45b1-a81b-fff0a6e1acdf" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="752d6908-948f-4d51-bf91-2fac4f87bffe" name="ZWappBpContractDetails - Dispatcher 2 - Pelataki Pollaplou"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_BP_CONTRACT_DETAILS</con:interface><con:operation>ZWappBpContractDetails</con:operation><con:request name="ZWappBpContractDetails - Dispatcher 2 - Pelataki Pollaplou" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="e0fbc587-f522-4fd1-8eb8-4ec69e136cb5"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappBpContractDetails>
         <ContractAccount>300000001968</ContractAccount>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappBpContractDetails>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6f61c375-4821-4718-b82c-879448604203" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="eeadc2de-9282-4453-943a-c912cfd26c48" name="ZWappBpContractDetails - Dispatcher 3 - CA Pollaplou" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_BP_CONTRACT_DETAILS</con:interface><con:operation>ZWappBpContractDetails</con:operation><con:request name="ZWappBpContractDetails - Dispatcher 3 - CA Pollaplou" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="33d9440b-efa0-4b6a-a0d7-d12d32df0e39"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappBpContractDetails>
         <ContractAccount>1000001470</ContractAccount>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappBpContractDetails>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="5af86d36-7785-4f34-93ec-26a807009161" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="4a2b8504-3a87-42c0-aa2e-fdbef7228a1a" name="UniformLoad - Simple"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting></con:settings><con:threadCount>250</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>460</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>10</testDelay><randomFactor>0.5</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:loadTest id="c905788d-cac8-48df-9981-817e083c9d42" name="UniformLoad - Hvy"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting></con:settings><con:threadCount>30</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:loadTest id="7df82f5d-7e88-4b53-9806-6613208d518d" name="VarianceLoad"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting></con:settings><con:threadCount>30</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Variance</con:type><con:config><interval>20000</interval><variance>0.5</variance></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="86a6c0b6-ae41-4123-a39c-876d84c31ef5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZGET_CA_FINANCIAL_DATA" searchProperties="true"><con:settings/><con:testStep type="request" id="4e59c1b1-d6d6-4d8f-b089-eabf1cc8cc4f" name="ZWappGetCaFinancialData - Dispatcher 1 - AU"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA</con:interface><con:operation>ZWappGetCaFinancialData</con:operation><con:request name="ZWappGetCaFinancialData - Dispatcher 1 - AU" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="4a45ef82-fc77-4cde-b1af-b52dea31c9e2"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>300001411236</ContractAccount>
         <!--Optional:-->
         <Entries/>
         <!--Optional:-->
         <FromDate>?</FromDate>
         <!--Optional:-->
         <Page/>
         <!--Optional:-->
         <Source>?</Source>
         <!--Optional:-->
         <ToDate>?</ToDate>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="fbf4dc61-a5e4-445e-90be-3beaba8d574e" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="0a206958-67b1-4fb2-a780-122f34f286d6" name="ZWappGetCaFinancialData - Dispatcher 2 - Pelataki Pollaplou"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA</con:interface><con:operation>ZWappGetCaFinancialData</con:operation><con:request name="ZWappGetCaFinancialData - Dispatcher 2 - Pelataki Pollaplou" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="42e782e4-6815-4a9b-b025-957a054c7a54"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>300000001968</ContractAccount>
         <!--Optional:-->
         <Entries/>
         <!--Optional:-->
         <FromDate>?</FromDate>
         <!--Optional:-->
         <Page/>
         <!--Optional:-->
         <Source>?</Source>
         <!--Optional:-->
         <ToDate>?</ToDate>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="71e39ba6-22e3-4a78-a74f-43ce66a3c5e5" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="aec854a0-b2a7-48bb-a751-537213a88443" name="ZWappGetCaFinancialData - Dispatcher 3 - Normal (CA Status 14)"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA</con:interface><con:operation>ZWappGetCaFinancialData</con:operation><con:request name="ZWappGetCaFinancialData - Dispatcher 3 - Normal (CA Status 14)" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="1f9fa5e1-1139-44bb-a58d-4257bfee367d"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>300002164681</ContractAccount>
         <!--Optional:-->
         <Entries/>
         <!--Optional:-->
         <FromDate>?</FromDate>
         <!--Optional:-->
         <Page/>
         <!--Optional:-->
         <Source>?</Source>
         <!--Optional:-->
         <ToDate>?</ToDate>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="1ee3c2ec-00dc-4e9a-8434-aec638164759" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="29a48121-c3a2-47e0-8270-c77548a96903" name="LoadTest 1"><con:settings/><con:threadCount>200</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>100</testDelay><randomFactor>0.5</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="6acbe8d1-4fba-42a5-aff1-1c8ba0026c44" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZWAPP_GET_MANDATE_CARD_CA" searchProperties="true"><con:settings/><con:testStep type="request" id="a9e8f146-d564-44a3-b59f-63bf7a57d5d8" name="ZWappGetMandateCardCa - Dispatcher 1 - C"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_MANDATE_CARD_CA</con:interface><con:operation>ZWappGetMandateCardCa</con:operation><con:request name="ZWappGetMandateCardCa - Dispatcher 1 - C" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="cc5b1f1f-d488-45a6-94b7-18a7d8092121"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_mandate_card_ca/100/zwapp_get_mandate_card_ca/zwapp_get_mandate_card_ca</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetMandateCardCa>
         <ContractAccount>300002164681</ContractAccount>
         <Source>?</Source>
      </urn:ZWappGetMandateCardCa>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a3df9cc7-acd6-4443-a988-f3b99f4b2322" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_MANDATE_CARD_CA/ZWappGetMandateCardCaRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="62633216-840f-49e5-a689-77a4cbcbcaa3" name="ZWappGetMandateCardCa - Dispatcher 2 - W"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_MANDATE_CARD_CA</con:interface><con:operation>ZWappGetMandateCardCa</con:operation><con:request name="ZWappGetMandateCardCa - Dispatcher 2 - W" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="8683f297-f762-4098-8860-1fb63e8ec6b5"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_mandate_card_ca/100/zwapp_get_mandate_card_ca/zwapp_get_mandate_card_ca</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetMandateCardCa>
         <ContractAccount>300000036254</ContractAccount>
         <Source>?</Source>
      </urn:ZWappGetMandateCardCa>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9e57e6af-43b4-4b06-adf2-76e7c5483b80" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_MANDATE_CARD_CA/ZWappGetMandateCardCaRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="72e67adf-ec40-4658-a4bb-c15218de511f" name="ZWappGetMandateCardCa - Request 1 - C"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_MANDATE_CARD_CA</con:interface><con:operation>ZWappGetMandateCardCa</con:operation><con:request name="ZWappGetMandateCardCa - Request 1 - C" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="4ea3330c-d1b4-45e8-8765-b2d9a3052d58"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_mandate_card_ca/100/zwapp_get_mandate_card_ca/zwapp_get_mandate_card_ca</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetMandateCardCa>
         <ContractAccount>300002164681</ContractAccount>
         <Source>?</Source>
      </urn:ZWappGetMandateCardCa>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9c857c5e-c256-4492-88dd-4af99d7d369b" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_MANDATE_CARD_CA/ZWappGetMandateCardCaRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="f273a842-2599-4d39-bbac-ef2ca45a0182" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZWAPP_GET_METERING_DATA" searchProperties="true"><con:settings/><con:testStep type="request" id="26051a10-d820-4e0e-9613-eb310576159c" name="ZWappGetMeterginData - Request 1 - Light" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_METERGIN_DATA</con:interface><con:operation>ZWappGetMeterginData</con:operation><con:request name="ZWappGetMeterginData - Request 1 - Light" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="0b9e1abe-9ffc-4ab7-882d-377c660da66d"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_metergin_data/100/zwapp_get_metergin_data/zwapp_get_metergin_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetMeterginData>
         <ContractAccount>300002164681</ContractAccount>
         <!--Optional:-->
         <MrYears>10</MrYears>
         <!--Optional:-->
         <PCmrChecks/>
         <!--Optional:-->
         <Source/>
      </urn:ZWappGetMeterginData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="91b8d466-c8a2-44c3-83d1-271d09f25253" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_METERGIN_DATA/ZWappGetMeterginDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="4159c391-b141-47cc-841a-71a3d54f88fa" name="ZWappGetMeterginData - Request 2 - Hvy" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_METERGIN_DATA</con:interface><con:operation>ZWappGetMeterginData</con:operation><con:request name="ZWappGetMeterginData - Request 2 - Hvy" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="8b40c491-4328-4335-b00e-de6f53a8a9f6"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_metergin_data/100/zwapp_get_metergin_data/zwapp_get_metergin_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetMeterginData>
         <ContractAccount>300000036254</ContractAccount>
         <!--Optional:-->
         <MrYears>10</MrYears>
         <!--Optional:-->
         <PCmrChecks>X</PCmrChecks>
         <!--Optional:-->
         <Source/>
      </urn:ZWappGetMeterginData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9426a220-c046-4863-88eb-149aed363a39" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_METERGIN_DATA/ZWappGetMeterginDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="0137b19e-fd73-4025-836a-ed51ed2bf976" name="ZWappGetMeterginData - Dispatcher 1 - Light"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_METERGIN_DATA</con:interface><con:operation>ZWappGetMeterginData</con:operation><con:request name="ZWappGetMeterginData - Dispatcher 1 - Light" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="18d5c125-cf0b-40a9-a28b-b16ce94edf20"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_metergin_data/100/zwapp_get_metergin_data/zwapp_get_metergin_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetMeterginData>
         <ContractAccount>300002164681</ContractAccount>
         <!--Optional:-->
         <MrYears>10</MrYears>
         <!--Optional:-->
         <PCmrChecks/>
         <!--Optional:-->
         <Source/>
      </urn:ZWappGetMeterginData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="3c5d32cd-0586-42d7-84fe-b0fc6a6af501" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_METERGIN_DATA/ZWappGetMeterginDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="5e5b22d9-8310-4839-a63f-f24c506f1ceb" name="ZWappGetMeterginData - Dispatcher 2 - Hvy"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_METERGIN_DATA</con:interface><con:operation>ZWappGetMeterginData</con:operation><con:request name="ZWappGetMeterginData - Dispatcher 2 - Hvy" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="10475964-d547-4ed3-a812-416ea1be035a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_metergin_data/100/zwapp_get_metergin_data/zwapp_get_metergin_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetMeterginData>
         <ContractAccount>300000036254</ContractAccount>
         <!--Optional:-->
         <MrYears>10</MrYears>
         <!--Optional:-->
         <PCmrChecks>X</PCmrChecks>
         <!--Optional:-->
         <Source/>
      </urn:ZWappGetMeterginData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="b3bf5b85-e507-4859-bfb2-ded826eefc79" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_METERGIN_DATA/ZWappGetMeterginDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="a46ca499-1667-4e19-922f-f839bc3092a0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZWAPP_GET_POD_FINANCIAL_DATA" searchProperties="true"><con:settings/><con:testStep type="request" id="32d9bb8e-d9bb-48f7-ae74-f33d0903f813" name="ZWappGetPodFinancialData - Request 1 - No Debt"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_POD_FINANCIAL_DATA</con:interface><con:operation>ZWappGetPodFinancialData</con:operation><con:request name="ZWappGetPodFinancialData - Request 1 - No Debt" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="eb39c3f5-f572-4451-9c19-1cf82982a488"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_pod_financial_data/100/zwapp_get_pod_financial_data/zwapp_get_pod_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetPodFinancialData>
         <Pod>935536104011</Pod>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetPodFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="95311c60-bcd9-4e5e-896f-37c62c683515" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POD_FINANCIAL_DATA/ZWappGetPodFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="6db167e3-590b-4f12-800b-cf85915b6962" name="ZWappGetPodFinancialData - Request 2 - Debt"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_POD_FINANCIAL_DATA</con:interface><con:operation>ZWappGetPodFinancialData</con:operation><con:request name="ZWappGetPodFinancialData - Request 2 - Debt" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="185b68c1-e215-4d80-b4c2-edc691bcb1e2"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_pod_financial_data/100/zwapp_get_pod_financial_data/zwapp_get_pod_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetPodFinancialData>
         <Pod>221502650024</Pod>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetPodFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="bd398673-b94b-4d70-99dd-d30f93f0ae9b" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POD_FINANCIAL_DATA/ZWappGetPodFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="55a911c3-29dd-4836-ba36-cf559fe8dc94" name="ZWappGetPodFinancialData - Dispatcher 1 - No Debt"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_POD_FINANCIAL_DATA</con:interface><con:operation>ZWappGetPodFinancialData</con:operation><con:request name="ZWappGetPodFinancialData - Dispatcher 1 - No Debt" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="0e0e01f6-1549-43cc-83c5-614177667eb5"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_pod_financial_data/100/zwapp_get_pod_financial_data/zwapp_get_pod_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetPodFinancialData>
         <Pod>935536104011</Pod>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetPodFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="972cf4e0-8368-4219-8fdf-bcc16ec5ac6b" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POD_FINANCIAL_DATA/ZWappGetPodFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="f8dd3c6b-1a5a-4eac-9b4f-bee6cc73a404" name="ZWappGetPodFinancialData - Dispatcher 2 - Debt"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_POD_FINANCIAL_DATA</con:interface><con:operation>ZWappGetPodFinancialData</con:operation><con:request name="ZWappGetPodFinancialData - Dispatcher 2 - Debt" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="55a8564a-d86c-4fb3-925f-a7e47d1d47d0"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_pod_financial_data/100/zwapp_get_pod_financial_data/zwapp_get_pod_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetPodFinancialData>
         <Pod>221502650024</Pod>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetPodFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="26a8268b-558a-4523-a7ca-3f1de2a6bd37" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POD_FINANCIAL_DATA/ZWappGetPodFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="f6f4936c-0b2c-45e9-8f1c-7d664c5b214b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZWAPP_GET_POD_INFO" searchProperties="true"><con:settings/><con:testStep type="request" id="7fa135c7-d5b5-4156-9151-f2e16d87cc63" name="ZWappGetPodInfo - Request 1 - No Debt"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_POD_INFO</con:interface><con:operation>ZWappGetPodInfo</con:operation><con:request name="ZWappGetPodInfo - Request 1 - No Debt" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="1ce8a1e6-56f6-490d-af73-ac3e80400b1f"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_pod_info/100/zwapp_get_pod_info/zwapp_get_pod_info</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetPodInfo>
         <Pod>935536104011</Pod>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetPodInfo>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="eaa6f7af-fbf3-4c20-9da0-ca8a5f9eda40" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POD_INFO/ZWappGetPodInfoRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="e6462eba-fc8d-4bed-ac96-b4fc02fd74cb" name="ZWappGetPodInfo - Request 2 - Debt"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_POD_INFO</con:interface><con:operation>ZWappGetPodInfo</con:operation><con:request name="ZWappGetPodInfo - Request 2 - Debt" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="b6d4d760-fcb7-4ebb-9dce-ba293d82c00a"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_pod_info/100/zwapp_get_pod_info/zwapp_get_pod_info</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetPodInfo>
         <Pod>221502650024</Pod>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetPodInfo>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="cfcf63d0-1958-47c1-8565-5328898c5b81" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POD_INFO/ZWappGetPodInfoRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="e4fe8420-c03d-4443-94a8-3d752d4316af" name="ZWappGetPodInfo - Dispatcher 1 - No Debt"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_POD_INFO</con:interface><con:operation>ZWappGetPodInfo</con:operation><con:request name="ZWappGetPodInfo - Dispatcher 1 - No Debt" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="46c97456-a5dd-4af7-b834-a02c47f8b271"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_pod_info/100/zwapp_get_pod_info/zwapp_get_pod_info</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetPodInfo>
         <Pod>935536104011</Pod>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetPodInfo>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="361b546a-51a9-4203-852a-e06d50c63e4d" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POD_INFO/ZWappGetPodInfoRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="698e0440-3c35-4ef5-ba24-8e2a7a4e2593" name="ZWappGetPodInfo - Dispatcher 2 - Debt"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_POD_INFO</con:interface><con:operation>ZWappGetPodInfo</con:operation><con:request name="ZWappGetPodInfo - Dispatcher 2 - Debt" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="59bf8ab6-dff8-4ef8-91f3-68ff6cbccf0c"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_pod_info/100/zwapp_get_pod_info/zwapp_get_pod_info</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetPodInfo>
         <Pod>221502650024</Pod>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetPodInfo>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="b8636b62-6430-4cbf-abdf-04af687071cc" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POD_INFO/ZWappGetPodInfoRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d3889c67-5dd6-49c8-91fb-8d0744475cb7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZWAPP_GET_POLLAPLOI_CODES" searchProperties="true"><con:settings/><con:testStep type="request" id="76a3528b-661b-4a2d-9d87-baf00cd71f1e" name="ZWappGetPollaploiCodes - Request 1 - Pollaplos"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_POLLAPLOI_CODES</con:interface><con:operation>ZWappGetPollaploiCodes</con:operation><con:request name="ZWappGetPollaploiCodes - Request 1 - Pollaplos" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="4b6cfbff-5119-4182-b34a-ec5a37ecb078"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_pollaploi_codes/100/zwapp_get_pollaploi_codes/zwapp_get_pollaploi_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetPollaploiCodes>
         <BusinessPartnerId>1000001461</BusinessPartnerId>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetPollaploiCodes>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="58c82785-6c6e-4693-8a73-a34b44a6e6bf" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POLLAPLOI_CODES/ZWappGetPollaploiCodesRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="568ebcc3-8c8a-4478-8b7a-1d5c807176fe" name="ZWappGetPollaploiCodes - Request 2 - Not Pollaplos"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_POLLAPLOI_CODES</con:interface><con:operation>ZWappGetPollaploiCodes</con:operation><con:request name="ZWappGetPollaploiCodes - Request 2 - Not Pollaplos" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="25d7322d-8e09-4713-9aac-a3e9617c3046"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_pollaploi_codes/100/zwapp_get_pollaploi_codes/zwapp_get_pollaploi_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetPollaploiCodes>
         <BusinessPartnerId>1000031111</BusinessPartnerId>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetPollaploiCodes>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d97a5250-238d-431e-86f8-34048a906684" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POLLAPLOI_CODES/ZWappGetPollaploiCodesRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="fce9149e-a503-433b-bda6-622f7f4c9966" name="ZWappGetPollaploiCodes - Dispatcher 1 - Pollaplos"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_POLLAPLOI_CODES</con:interface><con:operation>ZWappGetPollaploiCodes</con:operation><con:request name="ZWappGetPollaploiCodes - Dispatcher 1 - Pollaplos" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="60d0ee4a-4ee2-4750-bf5d-9a7ad3e805c4"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_pollaploi_codes/100/zwapp_get_pollaploi_codes/zwapp_get_pollaploi_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetPollaploiCodes>
         <BusinessPartnerId>1000001461</BusinessPartnerId>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetPollaploiCodes>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d46922f9-8a3e-4662-a80d-0ad0b845380d" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POLLAPLOI_CODES/ZWappGetPollaploiCodesRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="48e656d2-8706-4573-9eac-8e712b17988f" name="ZWappGetVatFinancialData - Dispatcher 2 - Heavy"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_VAT_FINANCIAL_DATA</con:interface><con:operation>ZWappGetVatFinancialData</con:operation><con:request name="ZWappGetVatFinancialData - Dispatcher 2 - Heavy" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="b5bd8a08-d8c9-4fc4-9bee-225321de9138"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_vat_financial_data/100/zwapp_get_vat_financial_data/zwapp_get_vat_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetVatFinancialData>
         <Afm>094199842</Afm>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetVatFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="769799ec-8791-4180-b5bb-3dff9066a7df" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_VAT_FINANCIAL_DATA/ZWappGetVatFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="5683cb76-43e2-49fc-910f-aacbfa6aed4c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZWAPP_GET_VAT_FINANCIAL_DATA" searchProperties="true"><con:settings/><con:testStep type="request" id="6c2f3644-78ab-4f88-bd21-b7d52cbcf760" name="ZWappGetVatFinancialData - Request 1 - Light" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_VAT_FINANCIAL_DATA</con:interface><con:operation>ZWappGetVatFinancialData</con:operation><con:request name="ZWappGetVatFinancialData - Request 1 - Light" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="d4e6e811-6e86-407e-a634-0fb5c6ee86cf"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_vat_financial_data/100/zwapp_get_vat_financial_data/zwapp_get_vat_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetVatFinancialData>
         <Afm>109750410</Afm>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetVatFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="81161a82-5c27-42c5-a707-dab378d41dcf" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_VAT_FINANCIAL_DATA/ZWappGetVatFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="604633b4-d2ce-4ed8-be49-fed2c9f9b98b" name="ZWappGetVatFinancialData - Request 2 - Heavy" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_VAT_FINANCIAL_DATA</con:interface><con:operation>ZWappGetVatFinancialData</con:operation><con:request name="ZWappGetVatFinancialData - Request 2 - Heavy" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="2d29c961-0cc8-4652-b862-69a4edde98ff"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_vat_financial_data/100/zwapp_get_vat_financial_data/zwapp_get_vat_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetVatFinancialData>
         <Afm>094199842</Afm>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetVatFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="0f58816f-40aa-4e94-b1c3-a8427a6a6999" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_VAT_FINANCIAL_DATA/ZWappGetVatFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="4cdff0bb-b768-4f70-bbf5-b29151e47048" name="ZWappGetVatFinancialData - Dispatcher 1 - Light" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_VAT_FINANCIAL_DATA</con:interface><con:operation>ZWappGetVatFinancialData</con:operation><con:request name="ZWappGetVatFinancialData - Dispatcher 1 - Light" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a8c6882d-6a3b-4720-8679-c5e3919053ed"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_vat_financial_data/100/zwapp_get_vat_financial_data/zwapp_get_vat_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetVatFinancialData>
         <Afm>109750410</Afm>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetVatFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="fd363e14-dc53-48d8-b2eb-6a8432c954a3" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_VAT_FINANCIAL_DATA/ZWappGetVatFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="8fc18d3f-8b35-41f7-b048-ad1f3807a24a" name="ZWappGetVatFinancialData - Dispatcher 2 - Heavy"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_VAT_FINANCIAL_DATA</con:interface><con:operation>ZWappGetVatFinancialData</con:operation><con:request name="ZWappGetVatFinancialData - Dispatcher 2 - Heavy" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="f9ad229a-f1b2-4937-a954-f4dec5640e71"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_vat_financial_data/100/zwapp_get_vat_financial_data/zwapp_get_vat_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetVatFinancialData>
         <Afm>094199842</Afm>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetVatFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="820c0cc7-34d7-4e87-b7d3-bbba5dc4bb7c" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_VAT_FINANCIAL_DATA/ZWappGetVatFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="d829d1f5-3e41-409c-8e30-4906becb29b8" name="MultiWS"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="51809e0c-0a3d-4daa-bc3e-138def2466c0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="All3" searchProperties="true"><con:settings/><con:testStep type="request" id="cfc2568a-2b2e-4ff3-8062-855a8538c584" name="ZwappGetCustomerCodes2 - Request 1 - Normal"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZGET_CUSTOMER_CODES</con:interface><con:operation>ZwappGetCustomerCodes2</con:operation><con:request name="ZwappGetCustomerCodes2 - Request 1 - Normal" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="80c863b9-3af2-4010-a17e-27ca7860b8d8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zget_customer_codes/100/zget_customer_codes/zget_customer_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZwappGetCustomerCodes2>
         <Partner>1101302319</Partner>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZwappGetCustomerCodes2>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="4c3fbcf6-c588-4d5b-b213-927e3384be45" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZGET_CUSTOMER_CODES/ZwappGetCustomerCodes2Request"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="37b84e7a-ea97-4db5-b261-3d48c4ce2230" name="ZwappGetCustomerCodes2 - Request 2.5 - Pollaplos me polla"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZGET_CUSTOMER_CODES</con:interface><con:operation>ZwappGetCustomerCodes2</con:operation><con:request name="ZwappGetCustomerCodes2 - Request 2.5 - Pollaplos me polla" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="cf1e5e56-fffd-4ae6-9b30-38ff8a3d1b88"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zget_customer_codes/100/zget_customer_codes/zget_customer_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZwappGetCustomerCodes2>
         <Partner>1000001114</Partner>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZwappGetCustomerCodes2>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6d7c0551-69b7-4759-88c4-61b1482df2b6" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZGET_CUSTOMER_CODES/ZwappGetCustomerCodes2Request"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="093aec78-0b62-414f-869d-c4580ec91125" name="ZWappBpContractDetails - Request 5 - CA Normal (Status 14)"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_BP_CONTRACT_DETAILS</con:interface><con:operation>ZWappBpContractDetails</con:operation><con:request name="ZWappBpContractDetails - Request 5 - CA Normal (Status 14)" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="f36b48b7-468f-4b60-8a62-8caeef36e0aa"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappBpContractDetails>
         <ContractAccount>300002164681</ContractAccount>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappBpContractDetails>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9a17f03d-fc7f-4fa2-9119-ac108ae00f1d" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="a6655006-4e0d-4a65-9d79-a3f53b3562a0" name="ZWappBpContractDetails - Request 2 - Pelataki Pollaplou"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_BP_CONTRACT_DETAILS</con:interface><con:operation>ZWappBpContractDetails</con:operation><con:request name="ZWappBpContractDetails - Request 2 - Pelataki Pollaplou" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="021ff246-3b4e-4197-a4ad-99ff9d0c6d0a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappBpContractDetails>
         <ContractAccount>300000001968</ContractAccount>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappBpContractDetails>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c167772d-d133-4301-a3e9-33b8ecd0cc81" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="b3a8e303-2dd0-4543-a121-cd3ed798501a" name="ZWappGetCustomerDetails - Request 1 - Normal"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CUSTOMER_DETAILS</con:interface><con:operation>ZWappGetCustomerDetails</con:operation><con:request name="ZWappGetCustomerDetails - Request 1 - Normal" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="10c65fbc-c13f-4103-9adf-65d6e5d858bd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_customer_details/100/zwapp_get_customer_details/zwapp_get_customer_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCustomerDetails>
         <BusinessPartnerId>1101302319</BusinessPartnerId>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetCustomerDetails>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="5070bfcc-ed62-46ab-b8e8-b8d53a983dcd" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_DETAILS/ZWappGetCustomerDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="c545007c-6661-46e7-a55f-deec47eaedf3" name="ZWappGetCustomerDetails - Request 2 - Pollaplos"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CUSTOMER_DETAILS</con:interface><con:operation>ZWappGetCustomerDetails</con:operation><con:request name="ZWappGetCustomerDetails - Request 2 - Pollaplos" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="0690b6ed-c8f4-4f29-a797-c32e197c50da"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_customer_details/100/zwapp_get_customer_details/zwapp_get_customer_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCustomerDetails>
         <BusinessPartnerId>1000001208</BusinessPartnerId>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetCustomerDetails>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="03d7bb86-f2cd-42f2-9f73-53acbd4e4601" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_DETAILS/ZWappGetCustomerDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="346694de-51c2-418a-9d52-98f5ac7981f0" name="Test1 - Uniform"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting></con:settings><con:threadCount>30</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>460</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:loadTest id="be167353-1056-4504-b783-2213795b7f86" name="Test 2 - Burst"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting></con:settings><con:threadCount>30</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>460</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Burst</con:type><con:config><burstDelay>60000</burstDelay><burstDuration>10000</burstDuration></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:loadTest id="d2359e51-963c-48cc-8187-192d0472ff4a" name="Test3 - Wave"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting></con:settings><con:threadCount>30</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>460</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Variance</con:type><con:config><interval>60000</interval><variance>0.5</variance></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="4a8f745f-6aaf-4289-9b05-cd69ad9804f4" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="alot" searchProperties="true"><con:settings/><con:testStep type="request" id="b30a3d5e-d5d1-48e1-a4dc-1d0840b4cc0d" name="ZWappGetCaFinancialData - Dispatcher 1 - AU"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA</con:interface><con:operation>ZWappGetCaFinancialData</con:operation><con:request name="ZWappGetCaFinancialData - Dispatcher 1 - AU" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5d979d89-3d1f-4707-82e7-e245fff9d1bf"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>300001411236</ContractAccount>
         <!--Optional:-->
         <Entries/>
         <!--Optional:-->
         <FromDate>?</FromDate>
         <!--Optional:-->
         <Page/>
         <!--Optional:-->
         <Source>?</Source>
         <!--Optional:-->
         <ToDate>?</ToDate>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d2d8511d-ffc5-49bc-bef6-bd6030ea531b" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="2dc4037d-aeb8-48fe-be68-64568c84d46d" name="ZWappGetCaFinancialData - Dispatcher 2 - Pelataki Pollaplou" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA</con:interface><con:operation>ZWappGetCaFinancialData</con:operation><con:request name="ZWappGetCaFinancialData - Dispatcher 2 - Pelataki Pollaplou" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="448d2666-3bb3-4672-92b2-832b9df54d4f"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>300000001968</ContractAccount>
         <!--Optional:-->
         <Entries/>
         <!--Optional:-->
         <FromDate>?</FromDate>
         <!--Optional:-->
         <Page/>
         <!--Optional:-->
         <Source>?</Source>
         <!--Optional:-->
         <ToDate>?</ToDate>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="82c256d1-80e3-476b-83b7-c1e07c646d5c" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="0452720c-8bc9-420f-a209-568c84c34253" name="ZWappGetCustomerDetails - Dispatcher - Normal"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CUSTOMER_DETAILS</con:interface><con:operation>ZWappGetCustomerDetails</con:operation><con:request name="ZWappGetCustomerDetails - Dispatcher - Normal" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="7e75a87c-8540-4aa4-aebb-adeeb4d2fc12"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_customer_details/100/zwapp_get_customer_details/zwapp_get_customer_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCustomerDetails>
         <BusinessPartnerId>1101302319</BusinessPartnerId>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetCustomerDetails>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="15669c4c-8ae7-4e13-b4ab-9eaf50f703b4" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_DETAILS/ZWappGetCustomerDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="e313879f-e637-47cd-8dbb-b4280ab5b236" name="ZWappGetCustomerDetails - Dispatcher 2 - Pollaplos" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CUSTOMER_DETAILS</con:interface><con:operation>ZWappGetCustomerDetails</con:operation><con:request name="ZWappGetCustomerDetails - Dispatcher 2 - Pollaplos" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="d5c3567c-1d3a-40fc-99ce-89370c0c74f8"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_customer_details/100/zwapp_get_customer_details/zwapp_get_customer_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCustomerDetails>
         <BusinessPartnerId>1000001470</BusinessPartnerId>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetCustomerDetails>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="90968a45-3a01-407f-8cff-b5ed73e2f26d" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_DETAILS/ZWappGetCustomerDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="60839a37-38c9-440f-a375-eca2b38099cd" name="ZWappGetMeterginData - Dispatcher 2 - Hvy" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_METERGIN_DATA</con:interface><con:operation>ZWappGetMeterginData</con:operation><con:request name="ZWappGetMeterginData - Dispatcher 2 - Hvy" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a6959541-efa6-49a8-a6e1-b872451a77d9"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_metergin_data/100/zwapp_get_metergin_data/zwapp_get_metergin_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetMeterginData>
         <ContractAccount>300000036254</ContractAccount>
         <!--Optional:-->
         <MrYears>10</MrYears>
         <!--Optional:-->
         <PCmrChecks>X</PCmrChecks>
         <!--Optional:-->
         <Source/>
      </urn:ZWappGetMeterginData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="2707035c-78dd-4369-89ea-261972756ac3" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_METERGIN_DATA/ZWappGetMeterginDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="8f275482-4d34-4fb6-a322-b084b6ab4930" name="LoadTest 1"><con:settings/><con:threadCount>100</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>160</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>100</testDelay><randomFactor>0.5</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="76fe041f-c9a2-4eca-a195-972ebfe1a3fa" name="InformationalWS"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:properties/></con:testSuite><con:testSuite id="be49209d-8818-4766-a8e7-96ba65afdbbf" name="TransactionalWS"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:properties/></con:testSuite><con:testSuite id="fb379a7e-d639-46d2-bc0f-ff443b0bd55e" name="Dispatcher"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="0849278c-e357-480a-8436-4bd52d926a66" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Dispatcher - ZWAPP_GET_CUSTOMER_CODES" searchProperties="true"><con:settings/><con:testStep type="request" id="1d144a99-2115-41c4-bcb1-ef472f780c69" name="ZwappGetCustomerCodes2 - Dispatcher - Normal"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZGET_CUSTOMER_CODES</con:interface><con:operation>ZwappGetCustomerCodes2</con:operation><con:request name="ZwappGetCustomerCodes2 - Dispatcher - Normal" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="34f7e286-570e-421e-b8dc-916d2b364af4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zget_customer_codes/100/zget_customer_codes/zget_customer_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZwappGetCustomerCodes2>
         <Partner>1101302319</Partner>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZwappGetCustomerCodes2>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="505c31dd-bdc7-4641-9b71-6db07bd470ed" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZGET_CUSTOMER_CODES/ZwappGetCustomerCodes2Request"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="20681547-1803-48fa-8c92-3a6e80ade161" name="LoadTest 1"><con:settings/><con:threadCount>6</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>160</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="f8918538-b6b0-4996-8f09-35fe1e9e4d5a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Dispatcher - ZWAPP_GET_CUSTOMER_DETAILS" searchProperties="true"><con:settings/><con:testStep type="request" id="b04c087f-d236-4872-82f6-3e3ed353768c" name="ZWappGetCustomerDetails - Dispatcher - Normal"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CUSTOMER_DETAILS</con:interface><con:operation>ZWappGetCustomerDetails</con:operation><con:request name="ZWappGetCustomerDetails - Dispatcher - Normal" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="d5242679-0f5d-48ab-a031-607e47047c7b"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_customer_details/100/zwapp_get_customer_details/zwapp_get_customer_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCustomerDetails>
         <BusinessPartnerId>1101302319</BusinessPartnerId>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetCustomerDetails>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="0e17933f-a3f0-47fc-ae58-72d7fa5d3a64" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_DETAILS/ZWappGetCustomerDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="1b317f45-4703-49b9-b14c-fe3817146c7a" name="LoadTest 1"><con:settings/><con:threadCount>10</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>360</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>1000</testDelay><randomFactor>0.5</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="deb86f35-3f8b-4c71-85de-4842b2ad5cbd" name="SingleWSNovember"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="f2ea015b-cd36-4b0d-af14-aef0388b28c1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZWAPP_GETBPCONTRACTS" searchProperties="true"><con:settings/><con:testStep type="request" id="c0a053a8-ddf9-4fc8-a039-76a514ef6089" name="ZwappGetCustomerCodes2 - Dispatcher - Normal"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZGET_CUSTOMER_CODES</con:interface><con:operation>ZwappGetCustomerCodes2</con:operation><con:request name="ZwappGetCustomerCodes2 - Dispatcher - Normal" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="256322de-7577-4025-822c-cdc0051c712c"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zget_customer_codes/100/zget_customer_codes/zget_customer_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZwappGetCustomerCodes2>\r
         <Partner>1101302319</Partner>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZwappGetCustomerCodes2>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="4f2ba3c5-13bd-4991-96d5-7e9d85807ae9" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZGET_CUSTOMER_CODES/ZwappGetCustomerCodes2Request"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="d4022272-55c2-4044-97bd-f95cbe02b927" name="ZwappGetCustomerCodes2 - Dispatcher 4 - Pollaplos (Good)"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZGET_CUSTOMER_CODES</con:interface><con:operation>ZwappGetCustomerCodes2</con:operation><con:request name="ZwappGetCustomerCodes2 - Dispatcher 4 - Pollaplos (Good)" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="3280bc60-e328-4e04-81fe-d9c52910ae39"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zget_customer_codes/100/zget_customer_codes/zget_customer_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZwappGetCustomerCodes2>\r
         <Partner>1000001312</Partner>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZwappGetCustomerCodes2>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="00fca95d-f57b-4f07-aa60-38728271e32a" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZGET_CUSTOMER_CODES/ZwappGetCustomerCodes2Request"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="4c1431a2-058e-40a4-86ea-3a10b86cf24a" name="ZwappGetCustomerCodes2 - Dispatcher 5 - Pollaplos Child (Good)"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZGET_CUSTOMER_CODES</con:interface><con:operation>ZwappGetCustomerCodes2</con:operation><con:request name="ZwappGetCustomerCodes2 - Dispatcher 5 - Pollaplos Child (Good)" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="dfc037cf-dec3-4924-958f-cce60f7fca1b"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zget_customer_codes/100/zget_customer_codes/zget_customer_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZwappGetCustomerCodes2>\r
         <Partner>1000005153</Partner>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZwappGetCustomerCodes2>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6abb437d-1714-4f04-b6ed-8edfca98cdec" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZGET_CUSTOMER_CODES/ZwappGetCustomerCodes2Request"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="ce20ee41-b466-4a52-8958-69a88ad10efb" name="ZwappGetCustomerCodes2 - Dispatcher 3 - Pollaplos me polla" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZGET_CUSTOMER_CODES</con:interface><con:operation>ZwappGetCustomerCodes2</con:operation><con:request name="ZwappGetCustomerCodes2 - Dispatcher 3 - Pollaplos me polla" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="7e789bd2-eb16-4dc9-a1d4-b1121223cc13"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zget_customer_codes/100/zget_customer_codes/zget_customer_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZwappGetCustomerCodes2>\r
         <Partner>1000001114</Partner>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZwappGetCustomerCodes2>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a6fceb62-b92c-46da-a3c4-e081039e749c" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZGET_CUSTOMER_CODES/ZwappGetCustomerCodes2Request"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="10515cd1-b420-45cb-8933-630687cab7bf" name="Uniform"><con:settings/><con:threadCount>40</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>160</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>500</testDelay><randomFactor>0.5</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:loadTest id="a15593d5-6467-4a2b-95cc-83d0852a12f9" name="Variance"><con:settings/><con:threadCount>200</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Variance</con:type><con:config><interval>0</interval><variance>0.5</variance></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:loadTest id="8e76eb83-d88a-4ebe-be9a-8864fe64aebe" name="Burst"><con:settings/><con:threadCount>40</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>120</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Burst</con:type><con:config><burstDelay>10000</burstDelay><burstDuration>10000</burstDuration></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="a86fd04c-c1b8-47cd-a913-ff819935dc17" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZWAPP_GETBPContractDetails" searchProperties="true"><con:settings/><con:testStep type="request" id="3bcc44e2-758a-4cf1-859b-0bd2b26362d4" name="ZWappBpContractDetails - Dispatcher 1 - CA Normal (Status14)" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_BP_CONTRACT_DETAILS</con:interface><con:operation>ZWappBpContractDetails</con:operation><con:request name="ZWappBpContractDetails - Dispatcher 1 - CA Normal (Status14)" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="adab3f8b-5b5c-490a-aaae-acd7ea56b916"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>300002164681</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="56a69eb2-ae63-4e49-905a-f54bf9dd9b1b" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="a7d8d42d-f254-4e34-bd0b-a8447abc6b0e" name="ZWappBpContractDetails - Dispatcher 4 - Pollaplos (Good)" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_BP_CONTRACT_DETAILS</con:interface><con:operation>ZWappBpContractDetails</con:operation><con:request name="ZWappBpContractDetails - Dispatcher 4 - Pollaplos (Good)" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="f48baf90-3db1-4b8e-8760-47f9b505f248"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>1000001470</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c33f899d-be4e-4510-871e-3afa2a969c69" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="030d6d25-c610-4c16-bfdb-8a0a5f928197" name="ZWappBpContractDetails - Dispatcher 5 - Pollaplos Child (Good)" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_BP_CONTRACT_DETAILS</con:interface><con:operation>ZWappBpContractDetails</con:operation><con:request name="ZWappBpContractDetails - Dispatcher 5 - Pollaplos Child (Good)" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="2355d1a5-cc0e-419a-911d-75becb2024b7"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>300013206964</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c85ed40f-84ae-42c4-a053-7f74d26147ac" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="87da86ce-9464-455f-af4f-a903d2db66a6" name="ZWappBpContractDetails - Dispatcher 6 - Pollaplos (Good - Normal)" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_BP_CONTRACT_DETAILS</con:interface><con:operation>ZWappBpContractDetails</con:operation><con:request name="ZWappBpContractDetails - Dispatcher 6 - Pollaplos (Good - Normal)" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="e773bd1a-89db-47c5-a75d-69b7db2b5912"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>1000001312</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="ff138b42-9f17-41a8-aa3e-21bc51e88c3a" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="2a0b8e38-7b05-41e9-9288-b9287893510e" name="ZWappBpContractDetails - linakistest" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_BP_CONTRACT_DETAILS</con:interface><con:operation>ZWappBpContractDetails</con:operation><con:request name="ZWappBpContractDetails - linakistest" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="3294dc67-0d72-4f14-a673-6319f5935a51"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>300002164681</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="488e1854-69fe-4ec8-9577-b0e2a3c05052" name="SOAP Response"/><con:credentials><con:username>WA_F_V1</con:username><con:password>Ppcw3bf0rms!</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="0ae49cde-65b6-439b-8750-49d6e0102a3d" name="ZWappBpContractDetails - RECCO"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_BP_CONTRACT_DETAILS</con:interface><con:operation>ZWappBpContractDetails</con:operation><con:request name="ZWappBpContractDetails - RECCO" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="533c0821-a77a-4ff6-924f-41d081cf722e"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>300002164681</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="59808fe6-03db-4c6d-83e4-fbd458459f5b" name="SOAP Response"/><con:credentials><con:username>EC_WS_V1</con:username><con:password>Ppcec0ntr!1</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="3e2b7134-67a6-4568-8a1b-ee93172f0e6f" name="Uniform"><con:settings/><con:threadCount>40</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>120</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>500</testDelay><randomFactor>0.5</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:loadTest id="9f6c3bc7-5b3b-42b1-a781-8d2d303b1a91" name="Variance"><con:settings/><con:threadCount>40</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Variance</con:type><con:config><interval>10000</interval><variance>0.5</variance></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:loadTest id="c8791a7c-2ac6-4e55-96da-1f043578a094" name="Burst"><con:settings/><con:threadCount>40</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Burst</con:type><con:config><burstDelay>10000</burstDelay><burstDuration>10000</burstDuration></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="3b8de9a8-6caf-46ec-90ac-b6061eed9bcc" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZWAPP_GETMANDATECARD_CA" searchProperties="true"><con:settings/><con:testStep type="request" id="4a71dcc0-e771-45e7-a7cf-c84e636f9e16" name="ZWappGetMandateCardCa - Dispatcher 2 - W"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_MANDATE_CARD_CA</con:interface><con:operation>ZWappGetMandateCardCa</con:operation><con:request name="ZWappGetMandateCardCa - Dispatcher 2 - W" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="8c7a9764-e938-4e91-9f46-60a06b227833"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_mandate_card_ca/100/zwapp_get_mandate_card_ca/zwapp_get_mandate_card_ca</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetMandateCardCa>
         <ContractAccount>300000036254</ContractAccount>
         <Source>?</Source>
      </urn:ZWappGetMandateCardCa>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="dae3f8ef-75da-47be-ad50-56e13ee8970b" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_MANDATE_CARD_CA/ZWappGetMandateCardCaRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="2fbf2dbd-12cb-4ff8-a435-313ea33103ae" name="ZWappGetMandateCardCa - Dispatcher 1 - C"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_MANDATE_CARD_CA</con:interface><con:operation>ZWappGetMandateCardCa</con:operation><con:request name="ZWappGetMandateCardCa - Dispatcher 1 - C" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="26b94112-f17c-43eb-9999-c7634e65ef39"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_mandate_card_ca/100/zwapp_get_mandate_card_ca/zwapp_get_mandate_card_ca</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetMandateCardCa>
         <ContractAccount>300002164681</ContractAccount>
         <Source>?</Source>
      </urn:ZWappGetMandateCardCa>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="13c8409e-23e2-4254-9b5e-e56c87fc189a" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_MANDATE_CARD_CA/ZWappGetMandateCardCaRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="9c9bdf03-2a0b-4342-9edf-24b49dfc339c" name="Uniform"><con:settings/><con:threadCount>5</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:loadTest id="af614ad4-7740-4667-b2ad-c05452a8b8f2" name="Variance"><con:settings/><con:threadCount>5</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:loadTest id="dada605f-eb99-4ed1-bdd8-f414df0c8211" name="Burst"><con:settings/><con:threadCount>5</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="fff61cd6-63f4-48aa-b907-875686c9ef69" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZWAPP_GETCAFinancialData" searchProperties="true"><con:settings/><con:testStep type="request" id="26bbbabf-daf8-401e-9f23-02eed99810f8" name="ZWappGetCaFinancialData - Dispatcher 3 - Normal (CA Status 14)"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA</con:interface><con:operation>ZWappGetCaFinancialData</con:operation><con:request name="ZWappGetCaFinancialData - Dispatcher 3 - Normal (CA Status 14)" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="b63fb904-69da-425c-acdc-bdb45fe2a611"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>300002164681</ContractAccount>
         <!--Optional:-->
         <Entries/>
         <!--Optional:-->
         <FromDate/>
         <!--Optional:-->
         <Page/>
         <!--Optional:-->
         <Source/>
         <!--Optional:-->
         <ToDate/>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="de496cc2-e4d1-409e-ba67-2cb893f25da0" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="7e866ee2-16e1-495f-b612-c33c6f76f9e6" name="ZWappGetCaFinancialData - Dispatcher 4 - Pollaplos (Good)"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA</con:interface><con:operation>ZWappGetCaFinancialData</con:operation><con:request name="ZWappGetCaFinancialData - Dispatcher 4 - Pollaplos (Good)" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="3f86ca89-ca54-49da-9a54-aac13f421da7"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>1000001470</ContractAccount>
         <!--Optional:-->
         <Entries/>
         <!--Optional:-->
         <FromDate/>
         <!--Optional:-->
         <Page/>
         <!--Optional:-->
         <Source/>
         <!--Optional:-->
         <ToDate/>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="1e580569-eab4-4923-8ea2-51f8561c63ec" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="df2ca825-c1b5-4592-a52a-e18bcee5941c" name="ZWappGetCaFinancialData - Dispatcher 5 - Pollaplos Child (Good)"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA</con:interface><con:operation>ZWappGetCaFinancialData</con:operation><con:request name="ZWappGetCaFinancialData - Dispatcher 5 - Pollaplos Child (Good)" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="b6a9f9fb-c0f7-49ec-a07d-39224b4abc2c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>300013206964</ContractAccount>
         <!--Optional:-->
         <Entries/>
         <!--Optional:-->
         <FromDate/>
         <!--Optional:-->
         <Page/>
         <!--Optional:-->
         <Source/>
         <!--Optional:-->
         <ToDate/>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="2562805e-64a5-4067-9d79-e3e0e79ab04b" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="8aa02a45-0e75-41d9-ae5e-44c3cdf04120" name="ZWappGetCaFinancialData - Dispatcher 6 - Pollaplos Child (Good) 2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA</con:interface><con:operation>ZWappGetCaFinancialData</con:operation><con:request name="ZWappGetCaFinancialData - Dispatcher 6 - Pollaplos Child (Good) 2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="0f22a2ad-6515-441d-9b80-6730764a8f08"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>300008135628</ContractAccount>
         <!--Optional:-->
         <Entries/>
         <!--Optional:-->
         <FromDate/>
         <!--Optional:-->
         <Page/>
         <!--Optional:-->
         <Source/>
         <!--Optional:-->
         <ToDate/>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="676444a6-980d-43bc-83b7-763fbbc05369" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="6cc9d0fc-d676-4b30-b1b0-21690d90cdec" name="Uniform"><con:settings/><con:threadCount>40</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>500</testDelay><randomFactor>0.5</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:loadTest id="793c8dee-03b9-41c3-a321-ee7e86606987" name="Variance"><con:settings/><con:threadCount>40</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Variance</con:type><con:config><interval>10000</interval><variance>0.5</variance></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:loadTest id="0807b6de-319d-4c3b-8bc2-e00a5e15dc0d" name="Burst"><con:settings/><con:threadCount>40</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Burst</con:type><con:config><burstDelay>10000</burstDelay><burstDuration>10000</burstDuration></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="427097da-0330-465b-b9e4-6b9bbcefaae8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZWAPP_GETCAFinancialData2" searchProperties="true"><con:settings/><con:testStep type="request" id="469a225d-aa9d-4035-97bf-984655451001" name="ZWappGetCaFinancialData2 - Dispatcher 1 - Normal"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA2</con:interface><con:operation>ZWappGetCaFinancialData2</con:operation><con:request name="ZWappGetCaFinancialData2 - Dispatcher 1 - Normal" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="9c065abf-a190-48b4-a930-2791fb6f02e7"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data2/100/zwapp_get_ca_financial_data2/zwapp_get_ca_financial_data2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData2>
         <ContractAccount>
            <!--Zero or more repetitions:-->
            <item>300002164681</item>
         </ContractAccount>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetCaFinancialData2>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="4ee4ad92-9e21-4854-a4f7-61b78bdd23a6" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA2/ZWappGetCaFinancialData2Request"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="a9b3ea4d-0a98-4aef-a9e9-b50bef1341fb" name="ZWappGetCaFinancialData2 - Dispatcher 2 - Pollaplos (Good)"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA2</con:interface><con:operation>ZWappGetCaFinancialData2</con:operation><con:request name="ZWappGetCaFinancialData2 - Dispatcher 2 - Pollaplos (Good)" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="dcea22ba-49a6-45ae-8f58-0a211f8c70ea"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data2/100/zwapp_get_ca_financial_data2/zwapp_get_ca_financial_data2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData2>
         <ContractAccount>
            <!--Zero or more repetitions:-->
            <item>1000001470</item>
         </ContractAccount>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetCaFinancialData2>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="96fcca70-5a78-4f0d-b6a8-8f9472269d08" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA2/ZWappGetCaFinancialData2Request"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="4a361a85-bfc1-4f71-8ad6-1da621377b58" name="ZWappGetCaFinancialData2 - Dispatcher 3 - Pollaplos Paidaki (Good)"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA2</con:interface><con:operation>ZWappGetCaFinancialData2</con:operation><con:request name="ZWappGetCaFinancialData2 - Dispatcher 3 - Pollaplos Paidaki (Good)" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="4623d4e2-bae4-4517-b4d1-7008ab1cc744"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data2/100/zwapp_get_ca_financial_data2/zwapp_get_ca_financial_data2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData2>
         <ContractAccount>
            <!--Zero or more repetitions:-->
            <item>300013206964</item>
         </ContractAccount>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetCaFinancialData2>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="8b41a9d6-faed-448e-b419-8ce250c4e25e" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA2/ZWappGetCaFinancialData2Request"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="e0bedeca-69a2-44b8-bd51-f39d12e6439a" name="Uniform"><con:settings/><con:threadCount>200</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>120</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>500</testDelay><randomFactor>0.5</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:loadTest id="2e898f62-0d47-4875-a821-28513b66ec52" name="Variance"><con:settings/><con:threadCount>40</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Variance</con:type><con:config><interval>0</interval><variance>0.5</variance></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:loadTest id="1e3686e0-6e4c-456f-8fe5-f9d5dcdc5d37" name="Burst"><con:settings/><con:threadCount>40</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Burst</con:type><con:config><burstDelay>10000</burstDelay><burstDuration>10000</burstDuration></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="a347cb32-7076-4ed0-b8a5-0894d9dbf56e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZWAPP_GET_COUNTRY_TEL_CODES" searchProperties="true"><con:settings/><con:testStep type="request" id="7d6b0217-25c4-413e-9635-4a39ceee89d7" name="ZWappGetCountryTelCodes - Request 1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_COUNTRY_TEL_CODES</con:interface><con:operation>ZWappGetCountryTelCodes</con:operation><con:request name="ZWappGetCountryTelCodes - Request 1" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="4abaf282-8747-47c0-85b0-cd287f13036a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapr3p.dei.local:9000/sap/bc/srt/rfc/sap/zwapp_get_country_tel_codes/100/zwapp_get_country_tel_codes/zwapp_get_country_tel_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCountryTelCodes>
         <!--Optional:-->
         <Language>G</Language>
         <Source>MyAccount</Source>
      </urn:ZWappGetCountryTelCodes>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="25903708-4978-46de-937d-70de241969e2" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_COUNTRY_TEL_CODES/ZWappGetCountryTelCodesRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="cc5fdac8-e634-42b9-90ce-1d0abe3717b3" name="Uniform"><con:settings/><con:threadCount>5</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:loadTest id="ca71b12c-a2b2-4b29-bbd2-374a921f394b" name="Variance"><con:settings/><con:threadCount>5</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:loadTest id="8f3e7a03-56fe-4f14-b586-e28de7bc82a8" name="Burst"><con:settings/><con:threadCount>5</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="0e621335-f342-46b1-9ca2-d9d620004278" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZWAPP_GETCUSTOMERDETAILS" searchProperties="true"><con:settings/><con:testStep type="request" id="d606d3f4-73bc-4c27-8953-77f69b5f59b9" name="ZWappGetCustomerDetails - Dispatcher - Normal"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CUSTOMER_DETAILS</con:interface><con:operation>ZWappGetCustomerDetails</con:operation><con:request name="ZWappGetCustomerDetails - Dispatcher - Normal" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="34bff9d5-e30e-48b7-b1e7-4f1f066126e5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_customer_details/100/zwapp_get_customer_details/zwapp_get_customer_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetCustomerDetails>\r
         <BusinessPartnerId>1101302319</BusinessPartnerId>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetCustomerDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="de480a20-697e-4c12-a722-0459c03dde84" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_DETAILS/ZWappGetCustomerDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="6304db5d-e349-4451-9203-cfbf905da1a2" name="ZWappGetCustomerDetails - Dispatcher 2 - Pollaplos"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CUSTOMER_DETAILS</con:interface><con:operation>ZWappGetCustomerDetails</con:operation><con:request name="ZWappGetCustomerDetails - Dispatcher 2 - Pollaplos" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="75a631f3-eb74-4ddd-8b4b-098e4b8decb3"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_customer_details/100/zwapp_get_customer_details/zwapp_get_customer_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetCustomerDetails>\r
         <BusinessPartnerId>1000001470</BusinessPartnerId>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetCustomerDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="437569c1-0176-4ec6-bcca-30434410165c" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_DETAILS/ZWappGetCustomerDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="897305fb-30aa-4b74-8192-973d388d6a8f" name="ZWappGetCustomerDetails - Dispatcher 3 - Pelataki Pollaplou"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CUSTOMER_DETAILS</con:interface><con:operation>ZWappGetCustomerDetails</con:operation><con:request name="ZWappGetCustomerDetails - Dispatcher 3 - Pelataki Pollaplou" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="b55dc769-b71c-4f1b-9c35-2ec8d6095490"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_customer_details/100/zwapp_get_customer_details/zwapp_get_customer_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetCustomerDetails>\r
         <BusinessPartnerId>1000005153</BusinessPartnerId>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetCustomerDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="df97515c-5f88-4969-954a-18c7be18201b" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_DETAILS/ZWappGetCustomerDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="d3138237-33c6-4c51-947e-3c020b8b10d4" name="ZWappGetCustomerDetails - Dispatcher 4 - Pollaplos (Good)"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CUSTOMER_DETAILS</con:interface><con:operation>ZWappGetCustomerDetails</con:operation><con:request name="ZWappGetCustomerDetails - Dispatcher 4 - Pollaplos (Good)" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="9a2e7f77-de87-4ebf-aa9f-1e8ba9d81ff2"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_customer_details/100/zwapp_get_customer_details/zwapp_get_customer_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetCustomerDetails>\r
         <BusinessPartnerId>1000001312</BusinessPartnerId>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetCustomerDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="7b41c255-7e0c-4fff-8b1b-e41527e1bdba" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_DETAILS/ZWappGetCustomerDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="8b5aceda-2d77-4176-9dd5-70cad579090f" name="ZWappGetCustomerDetails - Dispatcher 5 - Pollaplos Child (Good)"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CUSTOMER_DETAILS</con:interface><con:operation>ZWappGetCustomerDetails</con:operation><con:request name="ZWappGetCustomerDetails - Dispatcher 5 - Pollaplos Child (Good)" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="1f482dc8-a00a-4af4-bfe5-b8ab2aa422be"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_customer_details/100/zwapp_get_customer_details/zwapp_get_customer_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetCustomerDetails>\r
         <BusinessPartnerId>1000005153</BusinessPartnerId>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetCustomerDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="7b1dd5be-878a-4388-801a-5e565d9ad399" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_DETAILS/ZWappGetCustomerDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="a8315cfd-3dbb-4055-b91d-b0233f05b565" name="Uniform"><con:settings/><con:threadCount>40</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>500</testDelay><randomFactor>0.5</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:loadTest id="7b44a28c-737d-4bb2-8d98-2a649080d1be" name="Variance"><con:settings/><con:threadCount>40</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Variance</con:type><con:config><interval>10000</interval><variance>0.5</variance></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:loadTest id="c686e843-cf14-492d-a746-a24cdfe76534" name="Burst"><con:settings/><con:threadCount>40</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Burst</con:type><con:config><burstDelay>10000</burstDelay><burstDuration>10000</burstDuration></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="c627a84a-e2fb-484f-b3ab-108a8e897e04" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZWAPP_GETCUSTOMERGDPRFROMAFM" searchProperties="true"><con:settings/><con:testStep type="request" id="0b28b21c-c2f3-4a5f-b456-a40e9c243ce4" name="ZWappGetCustomerGdprAfm - Dispatcher 1 - Normal"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CUSTOMER_GDPR_AFM</con:interface><con:operation>ZWappGetCustomerGdprAfm</con:operation><con:request name="ZWappGetCustomerGdprAfm - Dispatcher 1 - Normal" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="2ff155aa-6017-43ab-bbb4-400ec6258e3b"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_customer_gdpr_afm/100/zwapp_get_customer_gdpr_afm/zwapp_get_customer_gdpr_afm</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetCustomerGdprAfm>\r
         <Afm>109750410</Afm>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetCustomerGdprAfm>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="bf8185a8-af6b-432e-b5f8-e6ae7b6eb752" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_GDPR_AFM/ZWappGetCustomerGdprAfmRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="bc1dc95d-e47c-46b7-be61-bfed4c1a9c8f" name="ZWappGetCustomerGdprAfm - Dispatcher 2 - Pollaplos (Good)"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CUSTOMER_GDPR_AFM</con:interface><con:operation>ZWappGetCustomerGdprAfm</con:operation><con:request name="ZWappGetCustomerGdprAfm - Dispatcher 2 - Pollaplos (Good)" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="1edb9bbe-3f78-40a1-8e1e-68bf1397f851"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_customer_gdpr_afm/100/zwapp_get_customer_gdpr_afm/zwapp_get_customer_gdpr_afm</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetCustomerGdprAfm>\r
         <Afm>094449128</Afm>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetCustomerGdprAfm>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="7987217b-4152-4eea-b5cd-3d1684c9599d" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_GDPR_AFM/ZWappGetCustomerGdprAfmRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="cf6def58-b934-4e60-8400-83097a8d094a" name="ZWappGetCustomerGdprAfm - Dispatcher 3 - Pollaplos Paidaki (Good)"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CUSTOMER_GDPR_AFM</con:interface><con:operation>ZWappGetCustomerGdprAfm</con:operation><con:request name="ZWappGetCustomerGdprAfm - Dispatcher 3 - Pollaplos Paidaki (Good)" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="dff1595f-8426-40e2-8ce9-1c7a919e1733"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_customer_gdpr_afm/100/zwapp_get_customer_gdpr_afm/zwapp_get_customer_gdpr_afm</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetCustomerGdprAfm>\r
         <Afm>996763330</Afm>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetCustomerGdprAfm>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="435f7c18-afef-41bf-b1ca-da2b5d7f847d" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_GDPR_AFM/ZWappGetCustomerGdprAfmRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="bbe86341-618f-42f3-8a27-1cc463c8196a" name="Uniform"><con:settings/><con:threadCount>5</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:loadTest id="05d5ff87-8c7b-4408-84ae-bb051b18a8fa" name="Variance"><con:settings/><con:threadCount>5</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:loadTest id="6cea4ec1-0422-41aa-8433-de03081daa02" name="Burst"><con:settings/><con:threadCount>5</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="55707d96-e6b0-4432-89c2-0b082ecb980b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZWAPP_GETMETERINGDATA" searchProperties="true"><con:settings/><con:testStep type="request" id="4af04689-90eb-48dc-9f0b-eb3b85043614" name="ZWappGetMeterginData - Dispatcher 4 - Pollaplos Child (Good)"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_METERGIN_DATA</con:interface><con:operation>ZWappGetMeterginData</con:operation><con:request name="ZWappGetMeterginData - Dispatcher 4 - Pollaplos Child (Good)" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="1fba01de-6513-4c75-bde0-7f9eee52ede2"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_metergin_data/100/zwapp_get_metergin_data/zwapp_get_metergin_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetMeterginData>
         <ContractAccount>300013206964</ContractAccount>
         <!--Optional:-->
         <MrYears>10</MrYears>
         <!--Optional:-->
         <PCmrChecks>X</PCmrChecks>
         <!--Optional:-->
         <Source/>
      </urn:ZWappGetMeterginData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="586f6a36-a09f-48ad-b10e-be0fedcf9261" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_METERGIN_DATA/ZWappGetMeterginDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="84324b61-fe5a-4f9a-bce2-ea4b6cfbf45e" name="ZWappGetMeterginData - Dispatcher 2 - Hvy"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_METERGIN_DATA</con:interface><con:operation>ZWappGetMeterginData</con:operation><con:request name="ZWappGetMeterginData - Dispatcher 2 - Hvy" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="bbcfb78d-f36c-4242-a42f-3cc09f45d11e"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_metergin_data/100/zwapp_get_metergin_data/zwapp_get_metergin_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetMeterginData>
         <ContractAccount>300000036254</ContractAccount>
         <!--Optional:-->
         <MrYears>10</MrYears>
         <!--Optional:-->
         <PCmrChecks>X</PCmrChecks>
         <!--Optional:-->
         <Source/>
      </urn:ZWappGetMeterginData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="3871bf7f-1e07-4384-a397-d8140f2d7187" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_METERGIN_DATA/ZWappGetMeterginDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="bdcbdfa9-1e45-4e4c-a0fc-9e9a2e29a8df" name="ZWappGetMeterginData - Dispatcher 3 - Pollaplos (Good)"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_METERGIN_DATA</con:interface><con:operation>ZWappGetMeterginData</con:operation><con:request name="ZWappGetMeterginData - Dispatcher 3 - Pollaplos (Good)" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="112fe6e0-8602-43fe-b5b8-d08f164a0c8d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_metergin_data/100/zwapp_get_metergin_data/zwapp_get_metergin_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetMeterginData>
         <ContractAccount>1000001470</ContractAccount>
         <!--Optional:-->
         <MrYears>10</MrYears>
         <!--Optional:-->
         <PCmrChecks>X</PCmrChecks>
         <!--Optional:-->
         <Source/>
      </urn:ZWappGetMeterginData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c7c23566-9e5f-4cde-836d-094838db8ef2" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_METERGIN_DATA/ZWappGetMeterginDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="fcdc349b-0c54-4340-8093-236a46e3e0cd" name="ZWappGetMeterginData - Dispatcher 1 - Light"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_METERGIN_DATA</con:interface><con:operation>ZWappGetMeterginData</con:operation><con:request name="ZWappGetMeterginData - Dispatcher 1 - Light" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="cb45005f-cb69-410d-b8c8-528e21c36a25"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_metergin_data/100/zwapp_get_metergin_data/zwapp_get_metergin_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetMeterginData>
         <ContractAccount>300002164681</ContractAccount>
         <!--Optional:-->
         <MrYears>10</MrYears>
         <!--Optional:-->
         <PCmrChecks/>
         <!--Optional:-->
         <Source/>
      </urn:ZWappGetMeterginData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="bc20483a-9a4c-4583-811e-385f0cc3c98e" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_METERGIN_DATA/ZWappGetMeterginDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="b954ef1c-6407-466f-81fe-a337a5db5d6f" name="Uniform"><con:settings/><con:threadCount>40</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>500</testDelay><randomFactor>0.5</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:loadTest id="b9170c5c-d498-47da-acf3-5ac41045f6cd" name="Variance"><con:settings/><con:threadCount>40</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Variance</con:type><con:config><interval>10000</interval><variance>0.5</variance></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:loadTest id="554f450c-be6a-4d77-a3cf-683e8254f2a7" name="Burst"><con:settings/><con:threadCount>40</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Burst</con:type><con:config><burstDelay>10000</burstDelay><burstDuration>10000</burstDuration></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="b2b1d18d-fdf5-40fe-a109-3949dbd0977d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZWAPP_GETPODFINANCIALDATA" searchProperties="true"><con:settings/><con:testStep type="request" id="2067f69d-48d8-428d-9e03-2a7149ab4056" name="ZWappGetPodFinancialData - Dispatcher 1 - No Debt"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_POD_FINANCIAL_DATA</con:interface><con:operation>ZWappGetPodFinancialData</con:operation><con:request name="ZWappGetPodFinancialData - Dispatcher 1 - No Debt" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="270d4da9-6f00-48a5-8efa-1928ef4d02db"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_pod_financial_data/100/zwapp_get_pod_financial_data/zwapp_get_pod_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetPodFinancialData>\r
         <Pod>935536104011</Pod>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetPodFinancialData>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="41fcd81f-7379-4f4f-953e-e44e64306950" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POD_FINANCIAL_DATA/ZWappGetPodFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="3b42e566-3d9f-4236-bd4e-6ba0fff20c2f" name="ZWappGetPodFinancialData - Dispatcher 2 - Debt"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_POD_FINANCIAL_DATA</con:interface><con:operation>ZWappGetPodFinancialData</con:operation><con:request name="ZWappGetPodFinancialData - Dispatcher 2 - Debt" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="fddbcd20-1057-43cf-96be-fb444eadba75"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_pod_financial_data/100/zwapp_get_pod_financial_data/zwapp_get_pod_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetPodFinancialData>\r
         <Pod>221502650024</Pod>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetPodFinancialData>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="fa1518dc-6516-4faf-b0fa-006fa277085b" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POD_FINANCIAL_DATA/ZWappGetPodFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="bd073894-4691-451e-8b55-709e0876bdcd" name="ZWappGetPodFinancialData - Dispatcher 3 - Pollaplos (Good)"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_POD_FINANCIAL_DATA</con:interface><con:operation>ZWappGetPodFinancialData</con:operation><con:request name="ZWappGetPodFinancialData - Dispatcher 3 - Pollaplos (Good)" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="66cacfad-0198-4402-b10b-9e8c22b32db5"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_pod_financial_data/100/zwapp_get_pod_financial_data/zwapp_get_pod_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetPodFinancialData>\r
         <Pod>935536104011</Pod>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetPodFinancialData>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="f8cea50c-399b-4d66-b11b-48df5dc71478" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POD_FINANCIAL_DATA/ZWappGetPodFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="f395ace4-8fc8-4692-9ae0-bd5e933fab74" name="ZWappGetPodFinancialData - Dispatcher 4 - Pollaplos Child (Good)"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_POD_FINANCIAL_DATA</con:interface><con:operation>ZWappGetPodFinancialData</con:operation><con:request name="ZWappGetPodFinancialData - Dispatcher 4 - Pollaplos Child (Good)" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="fd961cc8-f70f-4649-bc6f-553543c64034"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_pod_financial_data/100/zwapp_get_pod_financial_data/zwapp_get_pod_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetPodFinancialData>\r
         <Pod>33056196101</Pod>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetPodFinancialData>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="02be0675-836f-41fe-8700-3076d59416d5" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POD_FINANCIAL_DATA/ZWappGetPodFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="d12ccb0a-82d5-4b33-b53b-2be23a847ec2" name="Uniform"><con:settings/><con:threadCount>40</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>500</testDelay><randomFactor>0.5</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:loadTest id="92067608-d092-45ad-b076-8abd3b1320bd" name="Variance"><con:settings/><con:threadCount>40</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Variance</con:type><con:config><interval>10000</interval><variance>0.5</variance></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:loadTest id="70bbd95d-8770-41b5-8e2e-043073f6dd34" name="Burst"><con:settings/><con:threadCount>40</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Burst</con:type><con:config><burstDelay>10000</burstDelay><burstDuration>10000</burstDuration></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="419c84dd-ee57-4bf5-8ce4-aef0f6d327f8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZWAPP_GETPODINFO" searchProperties="true"><con:settings/><con:testStep type="request" id="2e769198-47fd-41bd-bd3e-c81576532c63" name="ZWappGetPodInfo - Dispatcher 1 - No Debt"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_POD_INFO</con:interface><con:operation>ZWappGetPodInfo</con:operation><con:request name="ZWappGetPodInfo - Dispatcher 1 - No Debt" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="dd3e0ef2-e94d-4b38-a600-ea4daeffe76c"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_pod_info/100/zwapp_get_pod_info/zwapp_get_pod_info</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetPodInfo>
         <Pod>935536104011</Pod>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetPodInfo>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a2355c06-b50f-49ba-a04c-a47d8ca8dc2b" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POD_INFO/ZWappGetPodInfoRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="784a64ac-7a38-40e8-b6bd-78dcb7ed4f87" name="ZWappGetPodInfo - Dispatcher 2 - Debt"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_POD_INFO</con:interface><con:operation>ZWappGetPodInfo</con:operation><con:request name="ZWappGetPodInfo - Dispatcher 2 - Debt" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="2371ce43-dcd7-41a5-a746-81842497f6c1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_pod_info/100/zwapp_get_pod_info/zwapp_get_pod_info</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetPodInfo>
         <Pod>221502650024</Pod>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetPodInfo>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d484210c-d48a-49b3-9d36-3c6870fc5d37" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POD_INFO/ZWappGetPodInfoRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="a25c227e-9bc7-4765-b5c5-8e63a4fd2cec" name="ZWappGetPodInfo - Dispatcher 3 - Pollaplos (Good)"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_POD_INFO</con:interface><con:operation>ZWappGetPodInfo</con:operation><con:request name="ZWappGetPodInfo - Dispatcher 3 - Pollaplos (Good)" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="312e3166-d709-493d-b2fd-dc82c0f40106"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_pod_info/100/zwapp_get_pod_info/zwapp_get_pod_info</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetPodInfo>
         <Pod>221502650024</Pod>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetPodInfo>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a20560f8-199e-4719-9d51-fb126847fc1c" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POD_INFO/ZWappGetPodInfoRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="652f987b-7cb9-42b8-a1a0-2bb20bd9b8bb" name="ZWappGetPodInfo - Dispatcher 4 - Pollaplos Child (Good)"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_POD_INFO</con:interface><con:operation>ZWappGetPodInfo</con:operation><con:request name="ZWappGetPodInfo - Dispatcher 4 - Pollaplos Child (Good)" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="42dadacc-73c6-4fda-90e8-1a19d531f92d"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_pod_info/100/zwapp_get_pod_info/zwapp_get_pod_info</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetPodInfo>
         <Pod>33056196101</Pod>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetPodInfo>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="19a96e1a-2986-480a-99e5-58b4ee6178c6" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POD_INFO/ZWappGetPodInfoRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="c8e7c2ef-206c-433f-881a-a067ce3f279c" name="Uniform"><con:settings/><con:threadCount>40</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>500</testDelay><randomFactor>0.5</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:loadTest id="38e27094-cef7-4af8-a30d-51d77d57ccbb" name="Variance"><con:settings/><con:threadCount>40</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Variance</con:type><con:config><interval>10000</interval><variance>0.5</variance></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:loadTest id="f53a1d13-efdf-40e5-861f-49ab3a39c4e5" name="Burst"><con:settings/><con:threadCount>40</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Burst</con:type><con:config><burstDelay>10000</burstDelay><burstDuration>10000</burstDuration></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="c812cf2b-b082-478e-8e8b-c664967089bf" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZWAPP_GETREGIONS" searchProperties="true"><con:settings/><con:testStep type="request" id="30331c75-9420-4652-8436-49cad5ef23be" name="ZWappGetRegions - Request 1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_REGIONS</con:interface><con:operation>ZWappGetRegions</con:operation><con:request name="ZWappGetRegions - Request 1" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="ec88e377-c720-4a6f-bad9-5bce399d6e68"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_regions/100/zwapp_get_regions/zwapp_get_regions</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetRegions>\r
         <!--Optional:-->\r
         <CountryId>GR</CountryId>\r
         <!--Optional:-->\r
         <Language>G</Language>\r
         <Source></Source>\r
      </urn:ZWappGetRegions>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="90eee066-f781-4c15-a217-4afcfa4b385a" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_REGIONS/ZWappGetRegionsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="4fb88a80-affd-4a89-8a5a-2f7e6c082fd9" name="Uniform"><con:settings/><con:threadCount>300</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>260</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:loadTest id="291967e1-d321-43f7-905e-e64ecd353cb7" name="Variance"><con:settings/><con:threadCount>5</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Variance</con:type><con:config><interval>60000</interval><variance>0.5</variance></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:loadTest id="066b21e6-ed74-4e4d-9e88-b60e7dcc3d2e" name="Burst"><con:settings/><con:threadCount>5</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Burst</con:type><con:config><burstDelay>60000</burstDelay><burstDuration>10000</burstDuration></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="4fe66c05-f734-45b9-8b04-c0371c6ded24" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZWAPP_GETVATFINANCIAL" searchProperties="true"><con:settings/><con:testStep type="request" id="691296c9-9cb6-47c6-9f90-22f541f58d4d" name="ZWappGetVatFinancialData - Dispatcher 3 - Normal"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_VAT_FINANCIAL_DATA</con:interface><con:operation>ZWappGetVatFinancialData</con:operation><con:request name="ZWappGetVatFinancialData - Dispatcher 3 - Normal" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="45d66e83-2c40-47bf-89e2-9195c10a3fad"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_vat_financial_data/100/zwapp_get_vat_financial_data/zwapp_get_vat_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetVatFinancialData>
         <Afm>109750410</Afm>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetVatFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="4189b685-6494-408b-acfb-dfe76068c70e" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_VAT_FINANCIAL_DATA/ZWappGetVatFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="730b751d-9f65-497d-9a29-73b95723074f" name="ZWappGetVatFinancialData - Dispatcher 4 - Pollaplos (Good)"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_VAT_FINANCIAL_DATA</con:interface><con:operation>ZWappGetVatFinancialData</con:operation><con:request name="ZWappGetVatFinancialData - Dispatcher 4 - Pollaplos (Good)" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="dd75af8e-9034-4e18-80fa-60e118748d82"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_vat_financial_data/100/zwapp_get_vat_financial_data/zwapp_get_vat_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetVatFinancialData>
         <Afm>094449128</Afm>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetVatFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="1749fc2c-4619-4f2a-b4be-8099e2371c9f" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_VAT_FINANCIAL_DATA/ZWappGetVatFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="1c9f5b3e-03c6-4a8f-953d-c45a68eb6bbc" name="ZWappGetVatFinancialData - Dispatcher 5 - Pollaplos Paidaki (Good)"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_VAT_FINANCIAL_DATA</con:interface><con:operation>ZWappGetVatFinancialData</con:operation><con:request name="ZWappGetVatFinancialData - Dispatcher 5 - Pollaplos Paidaki (Good)" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="b2636941-1e52-4851-8a69-9c6e0047d851"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_vat_financial_data/100/zwapp_get_vat_financial_data/zwapp_get_vat_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetVatFinancialData>
         <Afm>996763330</Afm>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetVatFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d5ecb400-a7d6-494c-a194-26668a0bb07b" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_VAT_FINANCIAL_DATA/ZWappGetVatFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="6ce1ac0b-d1d5-448c-954a-83d7cf6d800d" name="ZWappGetVatFinancialData - Dispatcher 2 - Heavy" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_VAT_FINANCIAL_DATA</con:interface><con:operation>ZWappGetVatFinancialData</con:operation><con:request name="ZWappGetVatFinancialData - Dispatcher 2 - Heavy" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="61a4846d-ac91-496c-ade7-9eba25d0dad9"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_vat_financial_data/100/zwapp_get_vat_financial_data/zwapp_get_vat_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetVatFinancialData>
         <Afm>094199842</Afm>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetVatFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6440507a-315a-4a77-a085-e7caa360bd00" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_VAT_FINANCIAL_DATA/ZWappGetVatFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="3a28dd69-13d5-40aa-b427-8d6bd77aeb56" name="Uniform"><con:settings/><con:threadCount>40</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>500</testDelay><randomFactor>0.5</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:loadTest id="0e21e6d8-ecce-4571-bf5a-9532c0e298cd" name="Variance"><con:settings/><con:threadCount>200</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>120</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Variance</con:type><con:config><interval>10000</interval><variance>0.5</variance></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:loadTest id="7018121b-2fdb-414c-a017-76497a8d1fd8" name="Burst"><con:settings/><con:threadCount>40</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Burst</con:type><con:config><burstDelay>10000</burstDelay><burstDuration>10000</burstDuration></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="4df9c5d5-cd6c-4cd1-9887-f3dde6b1fbaf" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZWAPP_GETCAFINANCIAL_DATA_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="00b9682d-7a20-43df-94f7-06ccd18ca806"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value/></con:property><con:property><con:name>Entries</con:name><con:value>1</con:value></con:property><con:property><con:name>Page</con:name><con:value>1</con:value></con:property><con:property><con:name>FromDate</con:name><con:value/></con:property><con:property><con:name>ToDate</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="4b059d21-d993-49bb-bf7b-df8c2d180366"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\cafidata.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" +"TESTSTAMATIS" ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappGetCaFinancialDataPollaplos")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 
	
	time_taken =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="8580568d-5bac-4959-8be0-881a8a76956e" name="ZWappGetCaFinancialDataPollaplos"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA</con:interface><con:operation>ZWappGetCaFinancialData</con:operation><con:request name="ZWappGetCaFinancialDataPollaplos" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6d66fec7-4abc-4598-bfbd-d62b2f533e41"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>
         <!--Optional:-->
         <Entries>1</Entries>
         <!--Optional:-->
         <FromDate/>
         <!--Optional:-->
         <Page>1</Page>
         <!--Optional:-->
         <Source/>
         <!--Optional:-->
         <ToDate/>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d75bd73a-7226-4ecb-a00d-d2c83ba92ba8" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="c4777da3-c3dd-4a7a-8fe1-fdd3791cea10" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="f9236e57-6fd8-4dae-9cb8-8e93290fb190" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZWAPP_GETPODFINANCIALDATA_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="b6c9b26e-f9d1-451c-b3d2-e5af6cadf7d6"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>pod</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="b866e605-08e3-43a4-adea-f557588e6fbd"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getpodfinancialdata.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + "STAMATIS" ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("pod",row)


	testRunner.runTestStepByName("zwappgetpodfinancialdata")
	log.info("Time taken: " + testRunner.testCase.testSteps["zwappgetpodfinancialdata"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["zwappgetpodfinancialdata"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["zwappgetpodfinancialdata"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["zwappgetpodfinancialdata"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["zwappgetpodfinancialdata"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["zwappgetpodfinancialdata"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="da49a906-baa2-49ae-8a1e-4a00620f7460" name="zwappgetpodfinancialdata"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_POD_FINANCIAL_DATA</con:interface><con:operation>ZWappGetPodFinancialData</con:operation><con:request name="zwappgetpodfinancialdata" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="c594ab73-1fd4-42f3-aada-b1588673e674"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https:///sap/bc/srt/rfc/sap/zwapp_get_pod_financial_data/100/zwapp_get_pod_financial_data/zwapp_get_pod_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetPodFinancialData>\r
         <Pod>${Properties#pod}</Pod>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetPodFinancialData>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="0ee66395-4b3c-4c56-a6d8-2863c1641b5e" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POD_FINANCIAL_DATA/ZWappGetPodFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="abb314a9-a970-4f74-80fc-3b52e9c736b6" name="LoadTest 1"><con:settings/><con:threadCount>50</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>1000</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="48c0b2ac-f7e8-4c50-a5ba-5b47cf0d4a76" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZWAPP_GETBPCONTRACTS_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="8b64add6-d354-4e9f-a3dc-4ddda28d904d"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Partner</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="898269d0-65e2-4056-8f94-a736141a5eb0"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath


def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")



def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\bpcontracts.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + formdate ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("Partner",row)


	testRunner.runTestStepByName("ZWappGetBpContracts")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetBpContracts"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetBpContracts"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetBpContracts"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["ZWappGetBpContracts"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetBpContracts"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetBpContracts"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="7a143730-c711-4257-8e8f-095a8383df35" name="ZWappGetBpContracts"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZGET_CUSTOMER_CODES</con:interface><con:operation>ZwappGetCustomerCodes2</con:operation><con:request name="ZWappGetBpContracts" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="2051522b-6d84-43e7-9e04-9bb6b8c936d1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zget_customer_codes/100/zget_customer_codes/zget_customer_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZwappGetCustomerCodes2>\r
         <Partner>${Properties#Partner}</Partner>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZwappGetCustomerCodes2>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="ce3f8d8d-fac8-4f0d-ad4a-fb5d69cf95bb" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZGET_CUSTOMER_CODES/ZwappGetCustomerCodes2Request"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="96d325d0-5801-4682-a3be-5677afba100a" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="9fffaeff-8da8-4c71-912d-9d8126164e4e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZWAPP_GETPODINFO_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="912c46a7-6078-4059-9db8-925855131b3f"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>pod</con:name><con:value>221502650024</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="65e972b6-2148-4d8e-b47f-904c7b037558"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getpodinfo.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("pod",row)


	testRunner.runTestStepByName("zwappgetpodinfo")
	log.info("Time taken: " + testRunner.testCase.testSteps["zwappgetpodinfo"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["zwappgetpodinfo"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["zwappgetpodinfo"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["zwappgetpodinfo"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["zwappgetpodinfo"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["zwappgetpodinfo"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="049c8df1-23dd-40c3-b380-01b77e216403" name="zwappgetpodinfo"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_POD_INFO</con:interface><con:operation>ZWappGetPodInfo</con:operation><con:request name="zwappgetpodinfo" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="b17c1106-af1a-4961-8c12-38c1ec830014"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_pod_info/100/zwapp_get_pod_info/zwapp_get_pod_info</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetPodInfo>
         <Pod>${Properties#pod}</Pod>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetPodInfo>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="8dd5e4a1-17ea-45e8-962e-62d59b4c712d" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POD_INFO/ZWappGetPodInfoRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="28943037-8701-477a-a748-6e547dfcf167" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="f8e46f08-8e3c-4545-83c6-0ea141ba665a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZWAPP_GETBPContractDetails_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="cfa2a17d-1b81-4a84-a99c-705da559b76b"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="0c41f76f-a36e-49d6-af2b-73879f0d0911"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")



def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\bpcontractdetails.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test"+formdate ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappBpContractDetails")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.timeTaken)
	time_taken =  testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.timeTaken

	
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 
	res_size =  testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size +',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="dad8867b-14fa-4a40-bf42-a227c33fd82c" name="ZWappBpContractDetails"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_BP_CONTRACT_DETAILS</con:interface><con:operation>ZWappBpContractDetails</con:operation><con:request name="ZWappBpContractDetails" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="f1333c65-321f-4c6a-bf5d-f340a529bf25"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d3b7d90b-94b6-457a-b875-b6637bdf5ba4" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="eafaf4a2-27c0-4324-9845-32d4017e02c4" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="6442e4ac-ffdf-47f1-bf54-716960b42b4f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZWAPP_GETCAFINANCIALDATA2_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="a0d238d6-01e5-40bb-ab84-b5dd4d1abd6c"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="fedbec98-42be-4a23-a9b1-0b91b9e75eb7"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getcafinancialdata2.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" +formdate ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappGetCaFinancialData2")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.timeTaken)
	time_taken =  testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.timeTaken

	
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 
	res_size =  testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size +',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="060acceb-3f43-4748-b3d8-eb5a7394ab9c" name="ZWappGetCaFinancialData2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA2</con:interface><con:operation>ZWappGetCaFinancialData2</con:operation><con:request name="ZWappGetCaFinancialData2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="1ed59836-043c-4b54-bc2b-b4fb61f771f6"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data2/100/zwapp_get_ca_financial_data2/zwapp_get_ca_financial_data2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData2>
         <ContractAccount>
            <!--Zero or more repetitions:-->
            <item>${Properties#ContractAccount}</item>
         </ContractAccount>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetCaFinancialData2>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="3935e787-925c-4d57-888e-358ee9e739d9" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA2/ZWappGetCaFinancialData2Request"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="6da3f474-02c2-4f22-af1c-da7dceb1ed8f" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="f13dd9a5-f5a0-4e81-b567-a2393fc03842" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZWAPP_GETVATFINANCIALDATA_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="d11d6673-1921-422f-a021-182b4bb20c3a"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>afm</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="dae7f605-da0e-49bc-806a-b3f1ef3980ed"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")




def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getvatfinancialdata.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" +formdate ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("afm",row)


	testRunner.runTestStepByName("zwappgetvatfinancialdata")
	log.info("Time taken: " + testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="73887a0e-7851-499f-821f-a1510d0cc164" name="zwappgetvatfinancialdata"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_VAT_FINANCIAL_DATA</con:interface><con:operation>ZWappGetVatFinancialData</con:operation><con:request name="zwappgetvatfinancialdata" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="631721fa-4035-40cd-a0a9-d485d2de8a9d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_vat_financial_data/100/zwapp_get_vat_financial_data/zwapp_get_vat_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetVatFinancialData>
         <Afm>${Properties#afm}</Afm>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetVatFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c6890b0f-05eb-4eb5-9f6f-78f11d3dd5b1" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_VAT_FINANCIAL_DATA/ZWappGetVatFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="cdd0b990-3e35-4ed2-a3ed-8ebd4b99ee75" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="94c90a37-38a2-463b-8e4e-31e3ed7096d4" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZWAPP_GETCUSTOMERDETAILS_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="396745b1-7bfb-4b37-8d73-d15696f24955"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Partner</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="60c9fab7-9628-49bb-a96a-ada1229a0972"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getcustomerdetails.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" +formdate ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("Partner",row)


	testRunner.runTestStepByName("zwappgetcustomerdetails")
	log.info("Time taken: " + testRunner.testCase.testSteps["zwappgetcustomerdetails"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["zwappgetcustomerdetails"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["zwappgetcustomerdetails"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["zwappgetcustomerdetails"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["zwappgetcustomerdetails"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["zwappgetcustomerdetails"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="640907ce-1ba7-4460-b3a7-4eceeb888072" name="zwappgetcustomerdetails"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CUSTOMER_DETAILS</con:interface><con:operation>ZWappGetCustomerDetails</con:operation><con:request name="zwappgetcustomerdetails" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="9152dc6c-a30f-4c6c-a60d-34df21e92a1e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_customer_details/100/zwapp_get_customer_details/zwapp_get_customer_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetCustomerDetails>\r
         <BusinessPartnerId>${Properties#Partner}</BusinessPartnerId>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetCustomerDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6c3c6f30-c71e-4034-ba15-4b90c0590c55" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_DETAILS/ZWappGetCustomerDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="a79fb777-918d-4767-bad2-618382e4b0c1" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="9d6087d8-fd00-4d05-90b3-aa5753205cca" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZWAPP_GETMETERINGDATA_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="12101c58-b5d7-4fbe-bf5d-c504f77401f8"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="bf6be1c4-0aa3-4c23-afe1-18d4c8ed6199"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getmeteringdata.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" +formdate ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("zwappgetmeteringdata")
	log.info("Time taken: " + testRunner.testCase.testSteps["zwappgetmeteringdata"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["zwappgetmeteringdata"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["zwappgetmeteringdata"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["zwappgetmeteringdata"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["zwappgetmeteringdata"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["zwappgetmeteringdata"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="332aaac0-95e2-4170-b490-e7c41313aedc" name="zwappgetmeteringdata"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_METERGIN_DATA</con:interface><con:operation>ZWappGetMeterginData</con:operation><con:request name="zwappgetmeteringdata" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="e833d381-16bd-4b19-9313-58df1043ba93"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_metergin_data/100/zwapp_get_metergin_data/zwapp_get_metergin_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetMeterginData>
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>
         <!--Optional:-->
         <MrYears>10</MrYears>
         <!--Optional:-->
         <PCmrChecks>X</PCmrChecks>
         <!--Optional:-->
         <Source/>
      </urn:ZWappGetMeterginData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="89d4caff-a7f7-4b8e-9924-fc6733d4fc21" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_METERGIN_DATA/ZWappGetMeterginDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="8e5027d3-bdf1-4c83-bb9c-bd11da82cdc1" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="7ce4272b-950d-421c-b062-8772cd894037" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZWAPP_GETCUSTGDPRFROMAFM_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="ae7d5e0a-6dd6-438d-bdbb-96cb4fc58d49"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>afm</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="71a86b92-945e-4495-a9d4-0cb3512e6be6"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getgpdrfromafm.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("afm",row)


	testRunner.runTestStepByName("zwappgetcustgdprfromafm")
	log.info("Time taken: " + testRunner.testCase.testSteps["zwappgetcustgdprfromafm"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["zwappgetcustgdprfromafm"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["zwappgetcustgdprfromafm"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["zwappgetcustgdprfromafm"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["zwappgetcustgdprfromafm"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["zwappgetcustgdprfromafm"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="fe576778-f6b1-464d-a30f-56d5de43dc35" name="zwappgetcustgdprfromafm"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CUSTOMER_GDPR_AFM</con:interface><con:operation>ZWappGetCustomerGdprAfm</con:operation><con:request name="zwappgetcustgdprfromafm" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="923de0f7-5095-4f1a-ad3b-aa29f5a4f6cd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_customer_gdpr_afm/100/zwapp_get_customer_gdpr_afm/zwapp_get_customer_gdpr_afm</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetCustomerGdprAfm>\r
         <Afm>${Properties#afm}</Afm>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetCustomerGdprAfm>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9107827f-05a0-494a-a1e9-6dd00d8efcb8" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_GDPR_AFM/ZWappGetCustomerGdprAfmRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="b32cd855-49bf-4814-b1e1-7f3848916c87" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="062f2047-6a29-4d72-b599-457f17669cd4" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZWAPP_GETPOLLAPLOICODES" searchProperties="true"><con:settings/><con:testStep type="request" id="15282478-1329-4726-af2d-6944386be2b1" name="ZWappGetPollaploiCodes - Dispatcher 1 - Pollaplos"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_POLLAPLOI_CODES</con:interface><con:operation>ZWappGetPollaploiCodes</con:operation><con:request name="ZWappGetPollaploiCodes - Dispatcher 1 - Pollaplos" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="7e070da1-a041-41d2-b9d7-89041ca6db6b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_pollaploi_codes/100/zwapp_get_pollaploi_codes/zwapp_get_pollaploi_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetPollaploiCodes>\r
         <BusinessPartnerId>1000002095</BusinessPartnerId>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetPollaploiCodes>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="89f60102-3472-4f33-9e41-e13c4d711f40" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POLLAPLOI_CODES/ZWappGetPollaploiCodesRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="ad3c5809-6354-4a34-b476-ce2c9accdb3a" name="ZWappGetPollaploiCodes - Dispatcher 3 - Pollaplos (Good)"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_POLLAPLOI_CODES</con:interface><con:operation>ZWappGetPollaploiCodes</con:operation><con:request name="ZWappGetPollaploiCodes - Dispatcher 3 - Pollaplos (Good)" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="280c9a2a-3f1e-4dcf-a0e3-7d602a6e3fe0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_pollaploi_codes/100/zwapp_get_pollaploi_codes/zwapp_get_pollaploi_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetPollaploiCodes>\r
         <BusinessPartnerId>1000001312</BusinessPartnerId>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetPollaploiCodes>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="617d6d17-ebcd-4e02-a265-0bdc0acd72fa" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POLLAPLOI_CODES/ZWappGetPollaploiCodesRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="32e413ce-3182-4d85-8c73-d2179eb4e2c1" name="Uniform"><con:settings/><con:threadCount>40</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:loadTest id="9fd34607-24ff-4e5b-ba37-569626929d82" name="Variance"><con:settings/><con:threadCount>40</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Variance</con:type><con:config><interval>10000</interval><variance>0.5</variance></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:loadTest id="98300e1b-df23-434b-b881-144833fe49d1" name="Burst"><con:settings/><con:threadCount>40</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Burst</con:type><con:config><burstDelay>10000</burstDelay><burstDuration>10000</burstDuration></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="09d8f09c-1734-476f-b660-b1d9a25afa83" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZWAPP_GETPOLLAPLOICODES_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="f2db0967-cfe7-4d14-84cd-c1deff6c42cc"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Partner</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="4570281b-6d92-4cc9-ac9f-a33d7fbadbbf"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")


def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getpollaploicodes.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + formdate ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("Partner",row)


	testRunner.runTestStepByName("ZWappGetPollaploiCodes")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetPollaploiCodes"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetPollaploiCodes"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetPollaploiCodes"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["ZWappGetPollaploiCodes"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetPollaploiCodes"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetPollaploiCodes"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="cc6105a3-2aec-49c8-8fed-99ff8e31d859" name="ZWappGetPollaploiCodes"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_POLLAPLOI_CODES</con:interface><con:operation>ZWappGetPollaploiCodes</con:operation><con:request name="ZWappGetPollaploiCodes" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="465ba864-b6dd-4739-b686-7b7b65336e77"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_pollaploi_codes/100/zwapp_get_pollaploi_codes/zwapp_get_pollaploi_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetPollaploiCodes>\r
         <BusinessPartnerId>${Properties#Partner}</BusinessPartnerId>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetPollaploiCodes>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="26fd1491-6f33-4d10-b932-f5db2173e64d" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POLLAPLOI_CODES/ZWappGetPollaploiCodesRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="447ac0f8-7602-49e3-99de-b87de4dbc21a" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="56abc0f3-d8aa-4ea9-817b-eec0d15e5948" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZWAPP_GETCAFINANCIAL_DATA_FR_KOFTIS" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="fd290ce9-42ec-4c19-b2bb-9d9735d11937"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value/></con:property><con:property><con:name>Entries</con:name><con:value/></con:property><con:property><con:name>Page</con:name><con:value/></con:property><con:property><con:name>FromDate</con:name><con:value/></con:property><con:property><con:name>ToDate</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="3d8f366d-a6ae-4c85-9757-2748dc75dff1"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\cafidata.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + formdate ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappGetCaFinancialDataPollaplos")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 
	
	time_taken =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="61b0d2fb-b2d5-420d-a583-489bea492677" name="ZWappGetCaFinancialDataPollaplos"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA</con:interface><con:operation>ZWappGetCaFinancialData</con:operation><con:request name="ZWappGetCaFinancialDataPollaplos" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6d66fec7-4abc-4598-bfbd-d62b2f533e41"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>
         <!--Optional:-->
         <Entries>1</Entries>
         <!--Optional:-->
         <FromDate/>
         <!--Optional:-->
         <Page>1</Page>
         <!--Optional:-->
         <Source/>
         <!--Optional:-->
         <ToDate/>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d75bd73a-7226-4ecb-a00d-d2c83ba92ba8" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="c1d95710-eb10-49db-ba14-7d36441d67d8" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="817930ae-706c-4ce4-b75a-289700fcd4e3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AZURE_ZWAPP_GETCAFINANCIAL_DATA_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="fe3c7864-5423-4817-8115-eb27ce8c76bd"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value/></con:property><con:property><con:name>Entries</con:name><con:value/></con:property><con:property><con:name>Page</con:name><con:value/></con:property><con:property><con:name>FromDate</con:name><con:value/></con:property><con:property><con:name>ToDate</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="2131a36d-fe3a-44b1-a633-46ab617eaa3e"><con:settings/><con:config><script>import groovy.util.*
import groovy.transform.Synchronized

def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\cafidata.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + formdate ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
//if (ot_file.exists()){
//	log.info("File: " + output_fp + " already exists. Overwriting..")
//	ot_file.delete()
//}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()


class WriterClass{

	@Synchronized
	void  async_write(String string_in, File outputfile){
		outputfile.append(string_in)
}
	
}

log.info("Test")
writer1 = new WriterClass()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappGetCaFinancialDataPollaplos")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 
	
	time_taken =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	//ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)

	String output_str = System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode
	writer1.async_write(output_str, ot_file)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="b75d71d2-0c1b-4cfe-920d-ff634652e5d2" name="ZWappGetCaFinancialDataPollaplos"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA</con:interface><con:operation>ZWappGetCaFinancialData</con:operation><con:request name="ZWappGetCaFinancialDataPollaplos" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6d66fec7-4abc-4598-bfbd-d62b2f533e41"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>
         <!--Optional:-->
         <Entries>1</Entries>
         <!--Optional:-->
         <FromDate/>
         <!--Optional:-->
         <Page>1</Page>
         <!--Optional:-->
         <Source/>
         <!--Optional:-->
         <ToDate/>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d75bd73a-7226-4ecb-a00d-d2c83ba92ba8" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="56774c28-ee66-4811-bbdb-4e518707f7ac" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="93de5231-8282-44eb-9552-cdf0aa159bfa" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AZURE_ZWAPP_GETCAFINANCIAL_DATA_FR_KOFTIS" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="6937c0f0-304f-4606-ba89-a8fa55198700"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value/></con:property><con:property><con:name>Entries</con:name><con:value/></con:property><con:property><con:name>Page</con:name><con:value/></con:property><con:property><con:name>FromDate</con:name><con:value/></con:property><con:property><con:name>ToDate</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="285923e1-e19c-44da-97e0-3a7d9410a02b"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\cafidata.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test_NEWRUN" ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappGetCaFinancialDataPollaplos")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 
	
	time_taken =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="61a6883a-ad26-40ce-9c45-dfbced3b0597" name="ZWappGetCaFinancialDataPollaplos"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA</con:interface><con:operation>ZWappGetCaFinancialData</con:operation><con:request name="ZWappGetCaFinancialDataPollaplos" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6d66fec7-4abc-4598-bfbd-d62b2f533e41"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>
         <!--Optional:-->
         <Entries>1</Entries>
         <!--Optional:-->
         <FromDate/>
         <!--Optional:-->
         <Page>1</Page>
         <!--Optional:-->
         <Source/>
         <!--Optional:-->
         <ToDate/>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d75bd73a-7226-4ecb-a00d-d2c83ba92ba8" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="25d27dd1-4b74-4381-bb78-b96aa56d45db" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="05e5d449-1486-4f77-a600-3dc936f3b660" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AZURE_ZWAPP_GETPOLLAPLOICODES_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="8db76692-6d1b-486f-9c62-1c6477d68fc3"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Partner</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="0c587be3-1f88-46ec-9c86-5efe2d09f6a3"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")


def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getpollaploicodes.txt"
//def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + formdate + "__NEW" ;
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + "__NEW" ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("Partner",row)


	testRunner.runTestStepByName("ZWappGetPollaploiCodes")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetPollaploiCodes"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetPollaploiCodes"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetPollaploiCodes"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["ZWappGetPollaploiCodes"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetPollaploiCodes"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetPollaploiCodes"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="a1552ae1-3949-43de-ab43-b2709457cf78" name="ZWappGetPollaploiCodes"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_POLLAPLOI_CODES</con:interface><con:operation>ZWappGetPollaploiCodes</con:operation><con:request name="ZWappGetPollaploiCodes" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="465ba864-b6dd-4739-b686-7b7b65336e77"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_pollaploi_codes/100/zwapp_get_pollaploi_codes/zwapp_get_pollaploi_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetPollaploiCodes>\r
         <BusinessPartnerId>${Properties#Partner}</BusinessPartnerId>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetPollaploiCodes>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="26fd1491-6f33-4d10-b932-f5db2173e64d" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POLLAPLOI_CODES/ZWappGetPollaploiCodesRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="ef055855-7f35-4e40-bd6e-8b5a692b84d0" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="68c1a765-c87e-47d1-94c2-f0e5305fbfa7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AZURE_ZWAPP_GETCUSTGDPRFROMAFM_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="21046ed6-b1c6-4f62-9bd2-a597e93f79af"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>afm</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="1473a552-f21a-4a77-a020-ab88def4219c"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getgpdrfromafm.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + "__NEW" ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	//ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("afm",row)


	testRunner.runTestStepByName("zwappgetcustgdprfromafm")
	log.info("Time taken: " + testRunner.testCase.testSteps["zwappgetcustgdprfromafm"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["zwappgetcustgdprfromafm"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["zwappgetcustgdprfromafm"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["zwappgetcustgdprfromafm"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["zwappgetcustgdprfromafm"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["zwappgetcustgdprfromafm"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="52e639a2-d443-457c-8576-d707a8d7e1c0" name="zwappgetcustgdprfromafm"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CUSTOMER_GDPR_AFM</con:interface><con:operation>ZWappGetCustomerGdprAfm</con:operation><con:request name="zwappgetcustgdprfromafm" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="923de0f7-5095-4f1a-ad3b-aa29f5a4f6cd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_customer_gdpr_afm/100/zwapp_get_customer_gdpr_afm/zwapp_get_customer_gdpr_afm</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetCustomerGdprAfm>\r
         <Afm>${Properties#afm}</Afm>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetCustomerGdprAfm>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9107827f-05a0-494a-a1e9-6dd00d8efcb8" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_GDPR_AFM/ZWappGetCustomerGdprAfmRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="8a282601-2f30-4069-a987-04f9f4fb2329" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="eeb98ebc-a49d-4033-854c-60ee09181a50" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AZURE_ZWAPP_GETMETERINGDATA_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="a13ab91d-a607-4e53-b5ce-9e08ae31e859"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="ddd93af9-14bc-4630-9b96-3bc8035c2c7e"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getmeteringdata.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + "__NEW2" ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("zwappgetmeteringdata")
	log.info("Time taken: " + testRunner.testCase.testSteps["zwappgetmeteringdata"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["zwappgetmeteringdata"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["zwappgetmeteringdata"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["zwappgetmeteringdata"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["zwappgetmeteringdata"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["zwappgetmeteringdata"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="0743f871-1ec8-4f15-97cf-393fa485df78" name="zwappgetmeteringdata"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_METERGIN_DATA</con:interface><con:operation>ZWappGetMeterginData</con:operation><con:request name="zwappgetmeteringdata" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="e833d381-16bd-4b19-9313-58df1043ba93"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_metergin_data/100/zwapp_get_metergin_data/zwapp_get_metergin_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetMeterginData>
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>
         <!--Optional:-->
         <MrYears>10</MrYears>
         <!--Optional:-->
         <PCmrChecks>X</PCmrChecks>
         <!--Optional:-->
         <Source/>
      </urn:ZWappGetMeterginData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="89d4caff-a7f7-4b8e-9924-fc6733d4fc21" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_METERGIN_DATA/ZWappGetMeterginDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="73778175-b749-4768-9811-e074e1fcdb66" name="LoadTest 1"><con:settings/><con:threadCount>70</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="70d67789-2d57-4b6c-8ad5-2f88a98a08b0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AZURE_ZWAPP_GETCUSTOMERDETAILS_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="7f35d645-2765-4c92-8eff-df3e9697483e"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Partner</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="9f8b90a0-4d1d-430c-9c82-711e3010e2e2"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getcustomerdetails.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" +formdate +"__NEW" ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("Partner",row)


	testRunner.runTestStepByName("zwappgetcustomerdetails")
	log.info("Time taken: " + testRunner.testCase.testSteps["zwappgetcustomerdetails"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["zwappgetcustomerdetails"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["zwappgetcustomerdetails"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["zwappgetcustomerdetails"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["zwappgetcustomerdetails"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["zwappgetcustomerdetails"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="43163fb3-6360-4c3a-b2bf-a21e76470618" name="zwappgetcustomerdetails"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CUSTOMER_DETAILS</con:interface><con:operation>ZWappGetCustomerDetails</con:operation><con:request name="zwappgetcustomerdetails" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="9152dc6c-a30f-4c6c-a60d-34df21e92a1e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_customer_details/100/zwapp_get_customer_details/zwapp_get_customer_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetCustomerDetails>\r
         <BusinessPartnerId>${Properties#Partner}</BusinessPartnerId>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetCustomerDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6c3c6f30-c71e-4034-ba15-4b90c0590c55" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_DETAILS/ZWappGetCustomerDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="11a2c6d1-57dc-45d1-84cf-8e9abca90cc9" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="6e4d8985-1ff7-48a1-a0f4-7a2ac2f6772d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AZURE_ZWAPP_GETVATFINANCIALDATA_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="d9acf821-65be-4907-81c1-99d426fa772c"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>afm</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="3184702f-7e2c-4b67-8507-d0ed859b3797"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")




def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getvatfinancialdata.txt"
//def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" +formdate+ "__NEW" ;
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + "__NEW" ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	//ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("afm",row)


	testRunner.runTestStepByName("zwappgetvatfinancialdata")
	log.info("Time taken: " + testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="db4ec82b-159f-49ed-9c0c-cf4ddba30587" name="zwappgetvatfinancialdata"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_VAT_FINANCIAL_DATA</con:interface><con:operation>ZWappGetVatFinancialData</con:operation><con:request name="zwappgetvatfinancialdata" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="631721fa-4035-40cd-a0a9-d485d2de8a9d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_vat_financial_data/100/zwapp_get_vat_financial_data/zwapp_get_vat_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetVatFinancialData>
         <Afm>${Properties#afm}</Afm>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetVatFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c6890b0f-05eb-4eb5-9f6f-78f11d3dd5b1" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_VAT_FINANCIAL_DATA/ZWappGetVatFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="dfc829a8-03f2-406a-98dc-7592711eddbd" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="8a1ec775-8270-4eee-a900-54967d196df6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AZURE_ZWAPP_GETCAFINANCIALDATA2_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="43062174-1234-4aa2-ae65-1e10ffd2c2b7"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="91df600a-40c3-4700-bb65-12d44dbf8c08"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getcafinancialdata2.txt"
//def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" +formdate ;
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + "TESTNEW" ;

log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappGetCaFinancialData2")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.timeTaken)
	time_taken =  testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.timeTaken

	
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 
	res_size =  testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size +',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="c66e7ed8-cd52-4f58-b9f3-e98eceb3fb1c" name="ZWappGetCaFinancialData2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA2</con:interface><con:operation>ZWappGetCaFinancialData2</con:operation><con:request name="ZWappGetCaFinancialData2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="1ed59836-043c-4b54-bc2b-b4fb61f771f6"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data2/100/zwapp_get_ca_financial_data2/zwapp_get_ca_financial_data2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData2>
         <ContractAccount>
            <!--Zero or more repetitions:-->
            <item>${Properties#ContractAccount}</item>
         </ContractAccount>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetCaFinancialData2>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="3935e787-925c-4d57-888e-358ee9e739d9" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA2/ZWappGetCaFinancialData2Request"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="cb90f5bc-96f9-4442-8534-853e44339b8d" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="ba0f4e01-b0fc-414f-b5f8-e0538098e0fc" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AZURE_ZWAPP_GETPODINFO_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="db7ab03f-b4ba-4b92-a163-28cebd720b14"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>pod</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="8954c576-5027-4e32-857c-5de44f5aac7b"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getpodinfo.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + "__NEW" ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("pod",row)


	testRunner.runTestStepByName("zwappgetpodinfo")
	log.info("Time taken: " + testRunner.testCase.testSteps["zwappgetpodinfo"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["zwappgetpodinfo"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["zwappgetpodinfo"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["zwappgetpodinfo"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["zwappgetpodinfo"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["zwappgetpodinfo"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="427cb9de-225b-4094-9053-f4ddee0db35b" name="zwappgetpodinfo"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_POD_INFO</con:interface><con:operation>ZWappGetPodInfo</con:operation><con:request name="zwappgetpodinfo" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="b17c1106-af1a-4961-8c12-38c1ec830014"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_pod_info/100/zwapp_get_pod_info/zwapp_get_pod_info</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetPodInfo>
         <Pod>${Properties#pod}</Pod>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetPodInfo>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="8dd5e4a1-17ea-45e8-962e-62d59b4c712d" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POD_INFO/ZWappGetPodInfoRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="75517006-ff06-468f-ae16-6d2b46531162" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="7483a4a6-ec80-4158-b6fd-f043c4a2c35e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AZURE_ZWAPP_GETPODFINANCIALDATA_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="f588662a-9bfe-4848-8e54-2208f03f61af"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>pod</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="0c316faf-22f6-4dcc-9965-4e3a2e897766"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getpodfinancialdata.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + "__NEWSTAMATIS" ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("pod",row)


	testRunner.runTestStepByName("zwappgetpodfinancialdata")
	log.info("Time taken: " + testRunner.testCase.testSteps["zwappgetpodfinancialdata"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["zwappgetpodfinancialdata"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["zwappgetpodfinancialdata"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["zwappgetpodfinancialdata"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["zwappgetpodfinancialdata"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["zwappgetpodfinancialdata"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="a01d57ab-e5ff-48a4-9a7b-0b6aa2a89db0" name="zwappgetpodfinancialdata"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_POD_FINANCIAL_DATA</con:interface><con:operation>ZWappGetPodFinancialData</con:operation><con:request name="zwappgetpodfinancialdata" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="c594ab73-1fd4-42f3-aada-b1588673e674"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_pod_financial_data/100/zwapp_get_pod_financial_data/zwapp_get_pod_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetPodFinancialData>\r
         <Pod>${Properties#pod}</Pod>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetPodFinancialData>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="0ee66395-4b3c-4c56-a6d8-2863c1641b5e" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POD_FINANCIAL_DATA/ZWappGetPodFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="824d4b83-e503-4f15-b64d-cd12c2361a60" name="LoadTest 1"><con:settings/><con:threadCount>50</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>10</testDelay><randomFactor>0.5</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="22cb46ff-83fc-4d65-aa65-a9e10e43804f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AZURE_ZWAPP_GETBPContractDetails_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="e0197fcc-3ad9-43c8-afd3-b8f5f0b5545c"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="a40989d7-b3db-42c5-acbc-963b1655c86f"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")



def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\bpcontractdetails.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test"+formdate ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappBpContractDetails")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.timeTaken)
	time_taken =  testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.timeTaken

	
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 
	res_size =  testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size +',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="9834783a-bb70-4648-8115-2f1553f30008" name="ZWappBpContractDetails"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_BP_CONTRACT_DETAILS</con:interface><con:operation>ZWappBpContractDetails</con:operation><con:request name="ZWappBpContractDetails" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="f1333c65-321f-4c6a-bf5d-f340a529bf25"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d3b7d90b-94b6-457a-b875-b6637bdf5ba4" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="c7345aac-f1c7-4a77-a022-701bdd98d888" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="8e3a354f-59fb-4930-9e44-72a504a2dcdd" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D2DOWN_AZURE_ZWAPP_GETCAFINANCIAL_DATA_FR_KOFTIS" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="e8d0e233-a3c8-4042-a49d-bbad51c3450c"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value/></con:property><con:property><con:name>Entries</con:name><con:value/></con:property><con:property><con:name>Page</con:name><con:value/></con:property><con:property><con:name>FromDate</con:name><con:value/></con:property><con:property><con:name>ToDate</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="307cba7c-f0e8-4225-8105-b39a7b868b81"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\cafidata.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + formdate ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappGetCaFinancialDataPollaplos")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 
	
	time_taken =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="4c09ae19-a2bd-4a59-b0d8-981960114c14" name="ZWappGetCaFinancialDataPollaplos"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA</con:interface><con:operation>ZWappGetCaFinancialData</con:operation><con:request name="ZWappGetCaFinancialDataPollaplos" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6d66fec7-4abc-4598-bfbd-d62b2f533e41"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>
         <!--Optional:-->
         <Entries>1</Entries>
         <!--Optional:-->
         <FromDate/>
         <!--Optional:-->
         <Page>1</Page>
         <!--Optional:-->
         <Source/>
         <!--Optional:-->
         <ToDate/>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d75bd73a-7226-4ecb-a00d-d2c83ba92ba8" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="6f0c7d40-5268-48f5-8131-5ade55e6acf8" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="30505338-eb0f-4520-88f5-89cb30d333b8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D2DOWN_AZURE_ZWAPP_GETVATFINANCIALDATA_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="f0e57694-5474-4457-bba9-3bd0b12e2e8d"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>afm</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="6cd2b8f3-d625-4482-8b5b-55be784039f4"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")




def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getvatfinancialdata.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" +formdate ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("afm",row)


	testRunner.runTestStepByName("zwappgetvatfinancialdata")
	log.info("Time taken: " + testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="a773ffe6-fa4d-4141-b6e9-1290778f9ce5" name="zwappgetvatfinancialdata"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_VAT_FINANCIAL_DATA</con:interface><con:operation>ZWappGetVatFinancialData</con:operation><con:request name="zwappgetvatfinancialdata" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="631721fa-4035-40cd-a0a9-d485d2de8a9d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_vat_financial_data/100/zwapp_get_vat_financial_data/zwapp_get_vat_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetVatFinancialData>
         <Afm>${Properties#afm}</Afm>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetVatFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c6890b0f-05eb-4eb5-9f6f-78f11d3dd5b1" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_VAT_FINANCIAL_DATA/ZWappGetVatFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="06b0203c-36c0-491f-b68e-ab9e08469dd0" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="dbb213f2-fbfc-4f33-8b9b-bafb2c6912e6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D1DOWN_AZURE_ZWAPP_GETCAFINANCIAL_DATA_FR_KOFTIS" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="8726374d-2d19-443e-ac6b-bd07dcee8477"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value/></con:property><con:property><con:name>Entries</con:name><con:value/></con:property><con:property><con:name>Page</con:name><con:value/></con:property><con:property><con:name>FromDate</con:name><con:value/></con:property><con:property><con:name>ToDate</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="857aa946-e132-4447-a5b9-24414b685047"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\cafidata.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + formdate ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappGetCaFinancialDataPollaplos")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 
	
	time_taken =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="d3cd62c2-d07d-43d0-953c-3891001a4624" name="ZWappGetCaFinancialDataPollaplos"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA</con:interface><con:operation>ZWappGetCaFinancialData</con:operation><con:request name="ZWappGetCaFinancialDataPollaplos" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6d66fec7-4abc-4598-bfbd-d62b2f533e41"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>
         <!--Optional:-->
         <Entries>1</Entries>
         <!--Optional:-->
         <FromDate/>
         <!--Optional:-->
         <Page>1</Page>
         <!--Optional:-->
         <Source/>
         <!--Optional:-->
         <ToDate/>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d75bd73a-7226-4ecb-a00d-d2c83ba92ba8" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="26a62920-e897-451d-9e79-51ff9e636e08" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="809ac508-3fba-4cf5-83d2-f996900f6cdc" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="BOTHUP_AZURE_ZWAPP_GETCAFINANCIAL_DATA_FR_KOFTIS" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="bd68da16-2770-41fb-8c5e-345c8cad3bdc"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value/></con:property><con:property><con:name>Entries</con:name><con:value/></con:property><con:property><con:name>Page</con:name><con:value/></con:property><con:property><con:name>FromDate</con:name><con:value/></con:property><con:property><con:name>ToDate</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="3bd98ad6-d2fb-4a42-a2d3-590b05e46cc2"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\cafidata.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + formdate ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappGetCaFinancialDataPollaplos")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 
	
	time_taken =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="6d3a6ccd-17fc-4cdd-8e33-5e90dd279892" name="ZWappGetCaFinancialDataPollaplos"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA</con:interface><con:operation>ZWappGetCaFinancialData</con:operation><con:request name="ZWappGetCaFinancialDataPollaplos" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6d66fec7-4abc-4598-bfbd-d62b2f533e41"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>
         <!--Optional:-->
         <Entries>1</Entries>
         <!--Optional:-->
         <FromDate/>
         <!--Optional:-->
         <Page>1</Page>
         <!--Optional:-->
         <Source/>
         <!--Optional:-->
         <ToDate/>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d75bd73a-7226-4ecb-a00d-d2c83ba92ba8" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="1220b44a-fe92-47c7-808a-daef5cb2032a" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="3734ad83-1731-4124-93f1-52018dc464aa" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="BOTHUP_NK_ZWAPP_GETCAFINANCIAL_DATA_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="866782ac-310c-4d5f-a9b0-3654733c3ec2"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value>300000002041</con:value></con:property><con:property><con:name>Entries</con:name><con:value/></con:property><con:property><con:name>Page</con:name><con:value/></con:property><con:property><con:name>FromDate</con:name><con:value/></con:property><con:property><con:name>ToDate</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="9e9916f4-69bb-4850-9461-a6b89f37fe92"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\cafidata2.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + formdate ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappGetCaFinancialDataPollaplos")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 
	
	time_taken =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="27f63c64-654f-428c-ae86-8d21a9d6031e" name="ZWappGetCaFinancialDataPollaplos"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA</con:interface><con:operation>ZWappGetCaFinancialData</con:operation><con:request name="ZWappGetCaFinancialDataPollaplos" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6d66fec7-4abc-4598-bfbd-d62b2f533e41"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>
         <!--Optional:-->
         <Entries/>
         <!--Optional:-->
         <FromDate/>
         <!--Optional:-->
         <Page/>
         <!--Optional:-->
         <Source/>
         <!--Optional:-->
         <ToDate/>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d75bd73a-7226-4ecb-a00d-d2c83ba92ba8" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="b9172645-d220-4461-a017-a034bbd10dd3" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="262520f7-eb21-4a85-90a4-81a8aaf9eb55" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D2DOWN_NK_ZWAPP_GETCAFINANCIAL_DATA_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="ca6162d8-c8a4-4188-b36f-3b038f6343df"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value>300000002041</con:value></con:property><con:property><con:name>Entries</con:name><con:value/></con:property><con:property><con:name>Page</con:name><con:value/></con:property><con:property><con:name>FromDate</con:name><con:value/></con:property><con:property><con:name>ToDate</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="0886d114-bf82-4f66-8d7f-7d1aee10f10a"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\cafidata2.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + formdate ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappGetCaFinancialDataPollaplos")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 
	
	time_taken =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="fdf47fd0-709f-47cf-a03f-cb5c89995ea0" name="ZWappGetCaFinancialDataPollaplos"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA</con:interface><con:operation>ZWappGetCaFinancialData</con:operation><con:request name="ZWappGetCaFinancialDataPollaplos" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6d66fec7-4abc-4598-bfbd-d62b2f533e41"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>
         <!--Optional:-->
         <Entries/>
         <!--Optional:-->
         <FromDate/>
         <!--Optional:-->
         <Page/>
         <!--Optional:-->
         <Source/>
         <!--Optional:-->
         <ToDate/>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d75bd73a-7226-4ecb-a00d-d2c83ba92ba8" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="6f53f75f-fefa-4022-bba9-caa541d7cd71" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="9f2cbea2-6ff4-484e-8095-bb427f7493da" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D1DOWN_NK_ZWAPP_GETCAFINANCIAL_DATA_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="bc48cf8c-09a4-4d96-b554-55f3dbf3dfc1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value>300000002041</con:value></con:property><con:property><con:name>Entries</con:name><con:value/></con:property><con:property><con:name>Page</con:name><con:value/></con:property><con:property><con:name>FromDate</con:name><con:value/></con:property><con:property><con:name>ToDate</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="da25fa62-b39f-4a6c-8c68-d6b9350fc0b3"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\cafidata2.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + formdate ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappGetCaFinancialDataPollaplos")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 
	
	time_taken =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="cdbf288c-baf9-4e34-a0ae-34ea9175350f" name="ZWappGetCaFinancialDataPollaplos"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA</con:interface><con:operation>ZWappGetCaFinancialData</con:operation><con:request name="ZWappGetCaFinancialDataPollaplos" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6d66fec7-4abc-4598-bfbd-d62b2f533e41"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>
         <!--Optional:-->
         <Entries/>
         <!--Optional:-->
         <FromDate/>
         <!--Optional:-->
         <Page/>
         <!--Optional:-->
         <Source/>
         <!--Optional:-->
         <ToDate/>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d75bd73a-7226-4ecb-a00d-d2c83ba92ba8" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="fa8fda07-9524-46a8-b061-cf03ffa0bea1" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="b06819b3-3c2e-4778-a89f-ddd29efd1b5e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZWAPP_AUTOVICAL_DATA_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="c716acbb-1d27-41fe-bda6-78124e49bc2f"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>IAdt</con:name><con:value/></con:property><con:property><con:name>IAfm</con:name><con:value/></con:property><con:property><con:name>IPod</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="9cd21714-0467-4cd7-b834-e7e2988b0e4a"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\cafidata2.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + formdate ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)

	String[] data = row.split(",")

	//get the values from records
    def first_column = data[0]	
    def second_column = data[1]
    def third_column = data[2]


	
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappGetCaFinancialDataPollaplos")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 
	
	time_taken =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="cd5bee0a-c935-406b-b3ad-006539266723" name="ZWappGetCaFinancialDataPollaplos"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA</con:interface><con:operation>ZWappGetCaFinancialData</con:operation><con:request name="ZWappGetCaFinancialDataPollaplos" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6d66fec7-4abc-4598-bfbd-d62b2f533e41"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>${Properties#IAdt}</ContractAccount>
         <!--Optional:-->
         <Entries/>
         <!--Optional:-->
         <FromDate/>
         <!--Optional:-->
         <Page/>
         <!--Optional:-->
         <Source/>
         <!--Optional:-->
         <ToDate/>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d75bd73a-7226-4ecb-a00d-d2c83ba92ba8" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="158efa14-667e-46f9-9525-cf426641644b" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="ba3a419d-0d66-46b3-81d4-f00ce8b0fd6c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AZURE_ZWAPP_GETBPContractDetails_FR_EMPORIASAM" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="c2acbcb0-a54f-4cd5-8bb5-336303183251"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value>300000002041</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="c9ced103-12da-4f93-bcab-56791529aee3"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")



def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\bpcontractdetails2.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test"+formdate ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappBpContractDetails")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.timeTaken)
	time_taken =  testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.timeTaken

	
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 
	res_size =  testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size +',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="5b031fae-20ef-4189-80e4-7b3958a8a55b" name="ZWappBpContractDetails"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_BP_CONTRACT_DETAILS</con:interface><con:operation>ZWappBpContractDetails</con:operation><con:request name="ZWappBpContractDetails" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="f1333c65-321f-4c6a-bf5d-f340a529bf25"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d3b7d90b-94b6-457a-b875-b6637bdf5ba4" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="4dcc37c4-01f7-4812-b358-5f56b5da85d2" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="93106b07-8077-49c7-9744-c56ae7499645" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AZURE_ZWAPP_GETBPCONTRACTS_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="6d27de5c-fa45-4bf0-a529-d00c918c605b"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Partner</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="143b223b-41e2-4739-95b1-d2064bcab7b9"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath


def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")



def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\bpcontracts.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + formdate ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("Partner",row)


	testRunner.runTestStepByName("ZWappGetBpContracts")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetBpContracts"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetBpContracts"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetBpContracts"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["ZWappGetBpContracts"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetBpContracts"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetBpContracts"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="ba153469-de6e-49d0-b7e0-5722ec259adc" name="ZWappGetBpContracts"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZGET_CUSTOMER_CODES</con:interface><con:operation>ZwappGetCustomerCodes2</con:operation><con:request name="ZWappGetBpContracts" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="2051522b-6d84-43e7-9e04-9bb6b8c936d1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zget_customer_codes/100/zget_customer_codes/zget_customer_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZwappGetCustomerCodes2>\r
         <Partner>${Properties#Partner}</Partner>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZwappGetCustomerCodes2>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="ce3f8d8d-fac8-4f0d-ad4a-fb5d69cf95bb" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZGET_CUSTOMER_CODES/ZwappGetCustomerCodes2Request"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="f6ee2ef3-ef6b-4712-8b3a-2bf6c77c073f" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="25809120-9faa-4bd3-9175-bec5c795be71" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MO_ ZWAPP_GETCAFINANCIAL_DATA_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="90f8eeb7-5dbf-477f-b661-89c98fe62b70"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value/></con:property><con:property><con:name>Entries</con:name><con:value/></con:property><con:property><con:name>Page</con:name><con:value/></con:property><con:property><con:name>FromDate</con:name><con:value/></con:property><con:property><con:name>ToDate</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="92e48ffc-f7a6-49e9-a3cc-c3a72c7be025"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\cafidata_mo.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + formdate ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappGetCaFinancialDataPollaplos")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 
	
	time_taken =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="f28a9edb-d6ca-4267-b44f-b63084afd738" name="ZWappGetCaFinancialDataPollaplos"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA</con:interface><con:operation>ZWappGetCaFinancialData</con:operation><con:request name="ZWappGetCaFinancialDataPollaplos" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6d66fec7-4abc-4598-bfbd-d62b2f533e41"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>
         <!--Optional:-->
         <Entries/>
         <!--Optional:-->
         <FromDate/>
         <!--Optional:-->
         <Page/>
         <!--Optional:-->
         <Source/>
         <!--Optional:-->
         <ToDate/>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d75bd73a-7226-4ecb-a00d-d2c83ba92ba8" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="bfc40112-1f58-468c-a98a-d781a075fae7" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="43a6260d-dcfb-4d9f-aa7e-51e48f70459a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AZURE_ZWAPP_GETBPCONTRACTS_FR_EMPORIASAM" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="a80d25ce-2e55-4fe8-b56d-f9c402028a45"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Partner</con:name><con:value>1113115155</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="f1a264c0-ff8f-4be5-a35f-54f0038d19a8"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath


def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")



def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\bpcontracts2.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + formdate ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("Partner",row)


	testRunner.runTestStepByName("ZWappGetBpContracts")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetBpContracts"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetBpContracts"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetBpContracts"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["ZWappGetBpContracts"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetBpContracts"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetBpContracts"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="3eaa3d66-0f8f-4794-bc40-040851c370f2" name="ZWappGetBpContracts"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZGET_CUSTOMER_CODES</con:interface><con:operation>ZwappGetCustomerCodes2</con:operation><con:request name="ZWappGetBpContracts" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="2051522b-6d84-43e7-9e04-9bb6b8c936d1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zget_customer_codes/100/zget_customer_codes/zget_customer_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZwappGetCustomerCodes2>\r
         <Partner>${Properties#Partner}</Partner>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZwappGetCustomerCodes2>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="ce3f8d8d-fac8-4f0d-ad4a-fb5d69cf95bb" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZGET_CUSTOMER_CODES/ZwappGetCustomerCodes2Request"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="77401921-0d7c-49d2-8874-0dfefceff813" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="57a907fb-813a-454a-95f1-9cec5079daaf" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Copy of ZWAPP_GETBPCONTRACTS_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="23bcb50e-3c1e-413b-ab9e-71bc76800bc1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Partner</con:name><con:value>1113115155</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="9644e0a2-e1db-420b-9805-40a2056ff3f3"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath


def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")



def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\bpcontracts2.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + formdate ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("Partner",row)


	testRunner.runTestStepByName("ZWappGetBpContracts")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetBpContracts"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetBpContracts"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetBpContracts"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["ZWappGetBpContracts"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetBpContracts"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetBpContracts"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="3b501a0d-3fc1-4590-9af9-6073fe13edd3" name="ZWappGetBpContracts"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZGET_CUSTOMER_CODES</con:interface><con:operation>ZwappGetCustomerCodes2</con:operation><con:request name="ZWappGetBpContracts" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="2051522b-6d84-43e7-9e04-9bb6b8c936d1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zget_customer_codes/100/zget_customer_codes/zget_customer_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZwappGetCustomerCodes2>\r
         <Partner>${Properties#Partner}</Partner>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZwappGetCustomerCodes2>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="ce3f8d8d-fac8-4f0d-ad4a-fb5d69cf95bb" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZGET_CUSTOMER_CODES/ZwappGetCustomerCodes2Request"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="15fed90d-061e-4302-a7b5-a0b3d550286c" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="ef0b8e89-245e-4c4e-b33c-15a7d30668b3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="EMPORIASAM_ZWAPP_GETCAFINANCIALDATA2_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="d79987c9-72c9-4f90-8383-bad5c412d469"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value>300000002041</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="e200aa9f-2670-4aa1-9ae0-d6181276362c"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMdd")

def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getcafinancialdata22.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + formdate;;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappGetCaFinancialData2")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.timeTaken)
	time_taken =  testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.timeTaken

	
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 
	res_size =  testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size +',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="99e4f51f-de93-48e4-a664-8979cd6b430a" name="ZWappGetCaFinancialData2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA2</con:interface><con:operation>ZWappGetCaFinancialData2</con:operation><con:request name="ZWappGetCaFinancialData2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="1ed59836-043c-4b54-bc2b-b4fb61f771f6"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data2/100/zwapp_get_ca_financial_data2/zwapp_get_ca_financial_data2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData2>
         <ContractAccount>
            <!--Zero or more repetitions:-->
            <item>${Properties#ContractAccount}</item>
         </ContractAccount>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetCaFinancialData2>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="3935e787-925c-4d57-888e-358ee9e739d9" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA2/ZWappGetCaFinancialData2Request"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="08443a05-5088-4f0b-9c3d-28484712d470" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="9ee883ac-4e66-4a68-953b-6b5500f0a5c8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="EMPORIASAM_AZURE_ZWAPP_GETCAFINANCIALDATA2_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="684f1cbc-4a1e-4b81-acb3-b302a33afead"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="8e458ad3-a890-40b9-8fb6-718f130deaf7"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getcafinancialdata22.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" +formdate ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappGetCaFinancialData2")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.timeTaken)
	time_taken =  testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.timeTaken

	
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 
	res_size =  testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size +',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="db80dc52-b555-4da6-b52b-cdb30ab8c19c" name="ZWappGetCaFinancialData2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA2</con:interface><con:operation>ZWappGetCaFinancialData2</con:operation><con:request name="ZWappGetCaFinancialData2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="1ed59836-043c-4b54-bc2b-b4fb61f771f6"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data2/100/zwapp_get_ca_financial_data2/zwapp_get_ca_financial_data2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData2>
         <ContractAccount>
            <!--Zero or more repetitions:-->
            <item>${Properties#ContractAccount}</item>
         </ContractAccount>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetCaFinancialData2>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="3935e787-925c-4d57-888e-358ee9e739d9" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA2/ZWappGetCaFinancialData2Request"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="e33422d8-b2d6-4d4e-a6e4-2b42ccece273" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="a1cb6268-0235-4e34-b50a-7f21b1d054fa" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TEST1512_ZWAPP_GETCAFINANCIAL_DATA_FR_KOFTIS" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="74842810-fdab-4038-8fd5-3ae972aa7ae5"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value/></con:property><con:property><con:name>Entries</con:name><con:value/></con:property><con:property><con:name>Page</con:name><con:value/></con:property><con:property><con:name>FromDate</con:name><con:value/></con:property><con:property><con:name>ToDate</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="0ef65a85-0068-47de-ab94-0bb30f3bc37c"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\cafidata.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + formdate ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappGetCaFinancialDataPollaplos")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 
	
	time_taken =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="f05b407b-f18f-45e3-8325-a37c4c7f95e0" name="ZWappGetCaFinancialDataPollaplos"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA</con:interface><con:operation>ZWappGetCaFinancialData</con:operation><con:request name="ZWappGetCaFinancialDataPollaplos" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6d66fec7-4abc-4598-bfbd-d62b2f533e41"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>
         <!--Optional:-->
         <Entries>1</Entries>
         <!--Optional:-->
         <FromDate/>
         <!--Optional:-->
         <Page>1</Page>
         <!--Optional:-->
         <Source/>
         <!--Optional:-->
         <ToDate/>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d75bd73a-7226-4ecb-a00d-d2c83ba92ba8" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="a5683633-2ee2-465d-8cd0-ca76120203e4" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="ce304ffb-71bf-4e34-b6a8-0b781defc6cd" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AZURE_MO_BRADY_ZWAPP_GETBPContractDetails_FR_" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="9b5f46f6-c69a-4d33-85f5-b1ac8a0faeef"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value>300000002041</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="fd058179-7690-4b27-91f8-9064225c412a"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")



def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\bpcontractdetails2_mo.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test"+formdate ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappBpContractDetails")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.timeTaken)
	time_taken =  testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.timeTaken

	
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 
	res_size =  testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size +',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="f605bd6e-fb90-4c21-8911-e9458093b975" name="ZWappBpContractDetails"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_BP_CONTRACT_DETAILS</con:interface><con:operation>ZWappBpContractDetails</con:operation><con:request name="ZWappBpContractDetails" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="f1333c65-321f-4c6a-bf5d-f340a529bf25"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d3b7d90b-94b6-457a-b875-b6637bdf5ba4" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="c49d9834-353e-4aea-8118-8d5df5546cb4" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="21c72f81-7674-4376-9480-1b3885122e12" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="1612_ ZWAPP_GETCAFINANCIAL_DATA_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="56d13c14-3405-4913-9833-d0ed7861abc2"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value/></con:property><con:property><con:name>Entries</con:name><con:value/></con:property><con:property><con:name>Page</con:name><con:value/></con:property><con:property><con:name>FromDate</con:name><con:value/></con:property><con:property><con:name>ToDate</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="4acc9983-7109-4a5a-b478-c501fda43c58"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\cafidata.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + formdate ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappGetCaFinancialDataPollaplos")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 
	
	time_taken =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="d67d6ae7-35eb-4b8b-acd0-646c9b50596c" name="ZWappGetCaFinancialDataPollaplos"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA</con:interface><con:operation>ZWappGetCaFinancialData</con:operation><con:request name="ZWappGetCaFinancialDataPollaplos" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6d66fec7-4abc-4598-bfbd-d62b2f533e41"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>
         <!--Optional:-->
         <Entries/>
         <!--Optional:-->
         <FromDate/>
         <!--Optional:-->
         <Page/>
         <!--Optional:-->
         <Source/>
         <!--Optional:-->
         <ToDate/>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d75bd73a-7226-4ecb-a00d-d2c83ba92ba8" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="686666d2-2a5a-43cc-ab3e-9bd4a549b461" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="3f689199-af55-4a8e-9aaa-6cd9b6571b17" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MO_ZWAPP_GETCAFINANCIAL_DATA_FR_KOFTIS" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="262822bb-e8b5-4c7a-b6b2-3ca0e7ac624a"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value>1000000047</con:value></con:property><con:property><con:name>Entries</con:name><con:value/></con:property><con:property><con:name>Page</con:name><con:value/></con:property><con:property><con:name>FromDate</con:name><con:value/></con:property><con:property><con:name>ToDate</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="3d8734d1-846a-4ddd-8c83-dae4d90e718c"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\cafidata_mo.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + formdate ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappGetCaFinancialDataPollaplos")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 
	
	time_taken =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="8172ccac-e4ec-4999-b04a-31d915d2edfe" name="ZWappGetCaFinancialDataPollaplos"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA</con:interface><con:operation>ZWappGetCaFinancialData</con:operation><con:request name="ZWappGetCaFinancialDataPollaplos" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6d66fec7-4abc-4598-bfbd-d62b2f533e41"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>
         <!--Optional:-->
         <Entries>1</Entries>
         <!--Optional:-->
         <FromDate/>
         <!--Optional:-->
         <Page>1</Page>
         <!--Optional:-->
         <Source/>
         <!--Optional:-->
         <ToDate/>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d75bd73a-7226-4ecb-a00d-d2c83ba92ba8" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="d4ca1c2d-418a-4e3a-990b-7faba243edf0" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="cd2d658f-36c9-4a60-93dd-8207a6138c60" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MO_ZWAPP_GETCAFINANCIAL_DATA_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="e71433d9-f8b0-4cce-aec6-06eb5528c5f1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value>1000000047</con:value></con:property><con:property><con:name>Entries</con:name><con:value/></con:property><con:property><con:name>Page</con:name><con:value/></con:property><con:property><con:name>FromDate</con:name><con:value/></con:property><con:property><con:name>ToDate</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="7d829653-ffd7-45f4-b34c-3d26cd9c0f91"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\cafidata_mo.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + formdate ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappGetCaFinancialDataPollaplos")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 
	
	time_taken =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="d85b351d-e953-48f1-8f1a-95652bb15d38" name="ZWappGetCaFinancialDataPollaplos"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA</con:interface><con:operation>ZWappGetCaFinancialData</con:operation><con:request name="ZWappGetCaFinancialDataPollaplos" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6d66fec7-4abc-4598-bfbd-d62b2f533e41"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>
         <!--Optional:-->
         <Entries/>
         <!--Optional:-->
         <FromDate/>
         <!--Optional:-->
         <Page/>
         <!--Optional:-->
         <Source/>
         <!--Optional:-->
         <ToDate/>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d75bd73a-7226-4ecb-a00d-d2c83ba92ba8" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="ddb83f9a-2ed9-4266-a498-61ad262f9029" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="026ebfad-fa3d-46b7-b2d8-207e78a4e817" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AZURE_MO_ZWAPP_GETCAFINANCIAL_DATA_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="f1cd4d1b-d4f1-413d-bcf5-5fc824e1b904"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value>1000000047</con:value></con:property><con:property><con:name>Entries</con:name><con:value/></con:property><con:property><con:name>Page</con:name><con:value/></con:property><con:property><con:name>FromDate</con:name><con:value/></con:property><con:property><con:name>ToDate</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="73ba1b0d-8c1e-432c-9474-cef4329ad64b"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\cafidata_mo.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + formdate ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappGetCaFinancialDataPollaplos")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 
	
	time_taken =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="626ae5dc-90e6-4987-8dad-2c8883592ad0" name="ZWappGetCaFinancialDataPollaplos"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA</con:interface><con:operation>ZWappGetCaFinancialData</con:operation><con:request name="ZWappGetCaFinancialDataPollaplos" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6d66fec7-4abc-4598-bfbd-d62b2f533e41"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>
         <!--Optional:-->
         <Entries/>
         <!--Optional:-->
         <FromDate/>
         <!--Optional:-->
         <Page/>
         <!--Optional:-->
         <Source/>
         <!--Optional:-->
         <ToDate/>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d75bd73a-7226-4ecb-a00d-d2c83ba92ba8" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="3de4145e-4f69-46df-8a9a-3eb05dcd2375" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="257f1497-ffc1-4a78-8db7-fbe4204c57d8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AZURE_MO_ZWAPP_GETCAFINANCIAL_DATA_FR_KOFTIS" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="56d0fe66-4966-40b4-9fd6-0438c4c9a5c8"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value>1000000047</con:value></con:property><con:property><con:name>Entries</con:name><con:value/></con:property><con:property><con:name>Page</con:name><con:value/></con:property><con:property><con:name>FromDate</con:name><con:value/></con:property><con:property><con:name>ToDate</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="e7ef09f5-6c3e-4a7c-afa0-96677607f848"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\cafidata_mo.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + formdate ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappGetCaFinancialDataPollaplos")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 
	
	time_taken =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="6178face-2a41-4716-822b-08df0065fd26" name="ZWappGetCaFinancialDataPollaplos"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA</con:interface><con:operation>ZWappGetCaFinancialData</con:operation><con:request name="ZWappGetCaFinancialDataPollaplos" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6d66fec7-4abc-4598-bfbd-d62b2f533e41"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>
         <!--Optional:-->
         <Entries>1</Entries>
         <!--Optional:-->
         <FromDate/>
         <!--Optional:-->
         <Page>1</Page>
         <!--Optional:-->
         <Source/>
         <!--Optional:-->
         <ToDate/>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d75bd73a-7226-4ecb-a00d-d2c83ba92ba8" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="3a33ddd6-1c22-4e47-8a72-9d104a05ab33" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="9fc31fb5-0a67-422e-8aa7-e94821d9b38f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="BRADY_AZURE_MO_ZWAPP_GETCAFINANCIAL_DATA_FR_KOFTIS" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="c539b013-5fb6-4e51-96a1-638418961b38"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value>1000000047</con:value></con:property><con:property><con:name>Entries</con:name><con:value/></con:property><con:property><con:name>Page</con:name><con:value/></con:property><con:property><con:name>FromDate</con:name><con:value/></con:property><con:property><con:name>ToDate</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="c25eb273-b165-4b6b-ad87-66a830510754"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\cafidata_mo.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + formdate ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappGetCaFinancialDataPollaplos")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 
	
	time_taken =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="2917b9f2-f198-4a14-9401-fb95f7736759" name="ZWappGetCaFinancialDataPollaplos"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA</con:interface><con:operation>ZWappGetCaFinancialData</con:operation><con:request name="ZWappGetCaFinancialDataPollaplos" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6d66fec7-4abc-4598-bfbd-d62b2f533e41"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>
         <!--Optional:-->
         <Entries>1</Entries>
         <!--Optional:-->
         <FromDate/>
         <!--Optional:-->
         <Page>1</Page>
         <!--Optional:-->
         <Source/>
         <!--Optional:-->
         <ToDate/>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d75bd73a-7226-4ecb-a00d-d2c83ba92ba8" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="7dc903b4-e417-494a-98f2-c85e425339f2" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="3307969c-9b19-43aa-bad9-e205a9faf56e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="BRADY_AZURE_MO_ZWAPP_GETCAFINANCIAL_DATA_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="29f6533c-18a7-4573-b053-d953ede244b2"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value>1000000047</con:value></con:property><con:property><con:name>Entries</con:name><con:value/></con:property><con:property><con:name>Page</con:name><con:value/></con:property><con:property><con:name>FromDate</con:name><con:value/></con:property><con:property><con:name>ToDate</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="763a4f58-4a8a-4396-9407-76db7211aa58"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\cafidata_mo.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + formdate ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappGetCaFinancialDataPollaplos")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 
	
	time_taken =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="5819e7e5-983a-488f-a998-4bec8d8675f5" name="ZWappGetCaFinancialDataPollaplos"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA</con:interface><con:operation>ZWappGetCaFinancialData</con:operation><con:request name="ZWappGetCaFinancialDataPollaplos" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6d66fec7-4abc-4598-bfbd-d62b2f533e41"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>
         <!--Optional:-->
         <Entries/>
         <!--Optional:-->
         <FromDate/>
         <!--Optional:-->
         <Page/>
         <!--Optional:-->
         <Source/>
         <!--Optional:-->
         <ToDate/>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d75bd73a-7226-4ecb-a00d-d2c83ba92ba8" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="5d6f0140-7c0a-43ec-9f4d-a6535e44a037" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="df924596-daad-4a45-b859-fb13bbc3cd3c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ONPREM_MO_BRADY_ZWAPP_GETBPContractDetails_FR_" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="77ae0029-26a1-4542-a79a-9225513a6734"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="9c9bacd9-7123-49b0-9573-2ee719ab6d77"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")



def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\bpcontractdetails2_mo.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test"+formdate ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappBpContractDetails")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.timeTaken)
	time_taken =  testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.timeTaken

	
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 
	res_size =  testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size +',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="148dd353-2294-49db-be6e-9dbd928db548" name="ZWappBpContractDetails"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_BP_CONTRACT_DETAILS</con:interface><con:operation>ZWappBpContractDetails</con:operation><con:request name="ZWappBpContractDetails" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="f1333c65-321f-4c6a-bf5d-f340a529bf25"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d3b7d90b-94b6-457a-b875-b6637bdf5ba4" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="1f5f8e0f-33ab-43e9-8f2c-682d36887e6e" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="9a99ae1e-046f-4f5e-b5bc-e648e2193611" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="BRADY_AZURE_MO_BRADY_ZWAPP_GETBPContractDetails_FR_" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="50634662-0379-490b-bab8-af8193c034a0"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="ef150848-6c59-4a25-970a-b6a13086800a"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMdd")



def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\bpcontractdetails2_mo.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test"+formdate ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappBpContractDetails")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.timeTaken)
	time_taken =  testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.timeTaken

	
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 
	res_size =  testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size +',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="a43eacc6-707b-4d41-8e3e-49ce01fab0c1" name="ZWappBpContractDetails"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_BP_CONTRACT_DETAILS</con:interface><con:operation>ZWappBpContractDetails</con:operation><con:request name="ZWappBpContractDetails" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="f1333c65-321f-4c6a-bf5d-f340a529bf25"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d3b7d90b-94b6-457a-b875-b6637bdf5ba4" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="975ca4d9-5fce-40d5-99f5-dbe38086a03c" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="4702a894-dd9b-4b1f-a0f5-0274f46ac258" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="XONPREM_MO_PROI_ZWAPP_GETBPContractDetails_FR_" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="63fe240e-73af-4635-bbf3-21de2080362e"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="17885cdb-4785-4bc3-8324-067be54f0c42"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
//def formdate = startDate.format("yyyyMMddHHmmss")
def formdate = startDate.format("yyyyMMdd")



def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\bpcontractdetails2_mo.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test"+formdate ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappBpContractDetails")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.timeTaken)
	time_taken =  testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.timeTaken

	
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 
	res_size =  testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size +',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="31687490-3020-464f-ada3-11ec542f7c04" name="ZWappBpContractDetails"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_BP_CONTRACT_DETAILS</con:interface><con:operation>ZWappBpContractDetails</con:operation><con:request name="ZWappBpContractDetails" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="f1333c65-321f-4c6a-bf5d-f340a529bf25"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d3b7d90b-94b6-457a-b875-b6637bdf5ba4" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="47c60717-53e4-4191-ba68-7bffd9276529" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="81dfd3c4-1fe3-4416-8e12-75a2458cbc55" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="XAZURE_MO_PROI_ZWAPP_GETBPContractDetails_FR_" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="c2c38eac-fe67-4c97-92d3-787ef9c28118"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="0f066b9e-9ac1-4909-8936-a33a3a21b810"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMdd")



def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\bpcontractdetails2_mo.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test"+formdate ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappBpContractDetails")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.timeTaken)
	time_taken =  testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.timeTaken

	
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 
	res_size =  testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size +',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="5d95bcf8-49ca-405a-a285-ccfa5ecca260" name="ZWappBpContractDetails"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_BP_CONTRACT_DETAILS</con:interface><con:operation>ZWappBpContractDetails</con:operation><con:request name="ZWappBpContractDetails" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="f1333c65-321f-4c6a-bf5d-f340a529bf25"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d3b7d90b-94b6-457a-b875-b6637bdf5ba4" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="4da02df6-c2ce-4100-afca-c9bd4256a252" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="cdab2d0d-e1b9-4a0b-b8d6-206c13b330ed" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="REDO_ZWAPP_GETPOLLAPLOICODES_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="c00d07fd-ffa4-443a-bcd4-0ebf077b33a4"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Partner</con:name><con:value>1000004848</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="3e42db23-97dd-4256-b8e3-be518e3d5ecf"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")


def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getpollaploicodes.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + 'NEWDATE' ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
//if (ot_file.exists()){
//	log.info("File: " + output_fp + " already exists. Overwriting..")
//	ot_file.delete()
//}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("Partner",row)


	testRunner.runTestStepByName("ZWappGetPollaploiCodes")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetPollaploiCodes"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetPollaploiCodes"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetPollaploiCodes"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["ZWappGetPollaploiCodes"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetPollaploiCodes"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetPollaploiCodes"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="bb27415f-30ad-4c9d-af74-cde9d3e77edc" name="ZWappGetPollaploiCodes"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_POLLAPLOI_CODES</con:interface><con:operation>ZWappGetPollaploiCodes</con:operation><con:request name="ZWappGetPollaploiCodes" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="465ba864-b6dd-4739-b686-7b7b65336e77"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_pollaploi_codes/100/zwapp_get_pollaploi_codes/zwapp_get_pollaploi_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetPollaploiCodes>\r
         <BusinessPartnerId>${Properties#Partner}</BusinessPartnerId>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetPollaploiCodes>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="26fd1491-6f33-4d10-b932-f5db2173e64d" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POLLAPLOI_CODES/ZWappGetPollaploiCodesRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="9c0aefb1-bde9-4e7f-a96d-ae57b113779f" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="544e1007-a60e-460e-9425-81c045a60896" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="REDO_AZURE_ZWAPP_GETCAFINANCIAL_DATA_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="d17a1439-5e9d-441c-8048-9b7b908ff4a5"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value/></con:property><con:property><con:name>Entries</con:name><con:value/></con:property><con:property><con:name>Page</con:name><con:value/></con:property><con:property><con:name>FromDate</con:name><con:value/></con:property><con:property><con:name>ToDate</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="3cc03e3b-0525-4fa4-89cf-3c9a12ece306"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\cafidata.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + formdate ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappGetCaFinancialDataPollaplos")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 
	
	time_taken =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="cebebcc1-d931-40e1-95a9-56bc7b32cec7" name="ZWappGetCaFinancialDataPollaplos"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA</con:interface><con:operation>ZWappGetCaFinancialData</con:operation><con:request name="ZWappGetCaFinancialDataPollaplos" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6d66fec7-4abc-4598-bfbd-d62b2f533e41"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>
         <!--Optional:-->
         <Entries/>
         <!--Optional:-->
         <FromDate/>
         <!--Optional:-->
         <Page/>
         <!--Optional:-->
         <Source/>
         <!--Optional:-->
         <ToDate/>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d75bd73a-7226-4ecb-a00d-d2c83ba92ba8" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="7ac45726-78d4-4f05-8aac-d8a42985c673" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="5b15582c-3640-4eb7-a6f1-a26b01125551" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="REDO_AZURE_ZWAPP_GETCAFINANCIAL_DATA_FR_KOFTIS" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="58147301-6d53-455c-be58-e5ff5e4ddfc0"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value/></con:property><con:property><con:name>Entries</con:name><con:value/></con:property><con:property><con:name>Page</con:name><con:value/></con:property><con:property><con:name>FromDate</con:name><con:value/></con:property><con:property><con:name>ToDate</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="3a7912a1-c5f7-4e4a-9bd6-a1c26fe3dc7e"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\cafidata.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test_NEWRUN" ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappGetCaFinancialDataPollaplos")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 
	
	time_taken =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="db2c1995-3aec-4125-a6d6-519ea7677ad2" name="ZWappGetCaFinancialDataPollaplos"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA</con:interface><con:operation>ZWappGetCaFinancialData</con:operation><con:request name="ZWappGetCaFinancialDataPollaplos" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6d66fec7-4abc-4598-bfbd-d62b2f533e41"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>
         <!--Optional:-->
         <Entries>1</Entries>
         <!--Optional:-->
         <FromDate/>
         <!--Optional:-->
         <Page>1</Page>
         <!--Optional:-->
         <Source/>
         <!--Optional:-->
         <ToDate/>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d75bd73a-7226-4ecb-a00d-d2c83ba92ba8" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="0395e268-5f34-429e-bbd4-e80c99b2646d" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="69c91897-966f-4a68-bee3-a5ca7dd2edfb" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="REDO_AZURE_ZWAPP_GETPOLLAPLOICODES_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="65dbd32d-976c-40e6-b0e5-80347067ba8c"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Partner</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="58fd439c-513e-40b1-b129-218fbb9eac32"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")


def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getpollaploicodes.txt"
//def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + formdate + "__NEW" ;
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + "__NEW" ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("Partner",row)


	testRunner.runTestStepByName("ZWappGetPollaploiCodes")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetPollaploiCodes"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetPollaploiCodes"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetPollaploiCodes"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["ZWappGetPollaploiCodes"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetPollaploiCodes"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetPollaploiCodes"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="7f74aea7-90ec-4e2e-8f6d-012b358ea9e9" name="ZWappGetPollaploiCodes"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_POLLAPLOI_CODES</con:interface><con:operation>ZWappGetPollaploiCodes</con:operation><con:request name="ZWappGetPollaploiCodes" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="465ba864-b6dd-4739-b686-7b7b65336e77"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_pollaploi_codes/100/zwapp_get_pollaploi_codes/zwapp_get_pollaploi_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetPollaploiCodes>\r
         <BusinessPartnerId>${Properties#Partner}</BusinessPartnerId>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetPollaploiCodes>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="26fd1491-6f33-4d10-b932-f5db2173e64d" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POLLAPLOI_CODES/ZWappGetPollaploiCodesRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="a445c22d-8220-44b7-8f1f-bb99178ae41f" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="9167722f-ba06-473f-ad00-000c8d85943c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="REDO_AZURE_ZWAPP_GETCUSTGDPRFROMAFM_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="2624c5ac-03b0-49f8-a8e0-b66cf64d093a"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>afm</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="4f9e0ef1-436e-4185-a9a5-3325a99d73ea"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getgpdrfromafm.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + "__NEW" ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	//ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("afm",row)


	testRunner.runTestStepByName("zwappgetcustgdprfromafm")
	log.info("Time taken: " + testRunner.testCase.testSteps["zwappgetcustgdprfromafm"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["zwappgetcustgdprfromafm"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["zwappgetcustgdprfromafm"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["zwappgetcustgdprfromafm"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["zwappgetcustgdprfromafm"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["zwappgetcustgdprfromafm"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="609a87a7-513f-462b-a683-3652a00deb92" name="zwappgetcustgdprfromafm"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CUSTOMER_GDPR_AFM</con:interface><con:operation>ZWappGetCustomerGdprAfm</con:operation><con:request name="zwappgetcustgdprfromafm" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="923de0f7-5095-4f1a-ad3b-aa29f5a4f6cd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_customer_gdpr_afm/100/zwapp_get_customer_gdpr_afm/zwapp_get_customer_gdpr_afm</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetCustomerGdprAfm>\r
         <Afm>${Properties#afm}</Afm>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetCustomerGdprAfm>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9107827f-05a0-494a-a1e9-6dd00d8efcb8" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_GDPR_AFM/ZWappGetCustomerGdprAfmRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="0afa168a-eb68-4094-81ef-19859373f8c0" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="0a5a6189-c5fe-47c6-bf72-ffaab4677809" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="REDO_AZURE_ZWAPP_GETMETERINGDATA_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="18f0cac7-6f81-4245-a12b-68558b29efb8"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="2f5092f6-ad4d-4bc2-9ab1-962ce20799c2"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getmeteringdata.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + "__NEW2" ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("zwappgetmeteringdata")
	log.info("Time taken: " + testRunner.testCase.testSteps["zwappgetmeteringdata"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["zwappgetmeteringdata"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["zwappgetmeteringdata"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["zwappgetmeteringdata"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["zwappgetmeteringdata"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["zwappgetmeteringdata"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="9fc4127e-7dc4-433f-b7b7-59557416d074" name="zwappgetmeteringdata"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_METERGIN_DATA</con:interface><con:operation>ZWappGetMeterginData</con:operation><con:request name="zwappgetmeteringdata" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="e833d381-16bd-4b19-9313-58df1043ba93"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_metergin_data/100/zwapp_get_metergin_data/zwapp_get_metergin_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetMeterginData>
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>
         <!--Optional:-->
         <MrYears>10</MrYears>
         <!--Optional:-->
         <PCmrChecks>X</PCmrChecks>
         <!--Optional:-->
         <Source/>
      </urn:ZWappGetMeterginData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="89d4caff-a7f7-4b8e-9924-fc6733d4fc21" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_METERGIN_DATA/ZWappGetMeterginDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="20858268-f4cd-4835-b4cf-75a0bef06c8b" name="LoadTest 1"><con:settings/><con:threadCount>70</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="972fe78b-3f75-41e7-b9e6-9e929e53fdc3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="REDO_AZURE_ZWAPP_GETCUSTOMERDETAILS_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="29f77f1d-afd0-44a9-9ce6-0ff01e245776"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Partner</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="39676159-7144-448c-89c5-7cef35fa75b6"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getcustomerdetails.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" +formdate +"__NEW" ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("Partner",row)


	testRunner.runTestStepByName("zwappgetcustomerdetails")
	log.info("Time taken: " + testRunner.testCase.testSteps["zwappgetcustomerdetails"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["zwappgetcustomerdetails"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["zwappgetcustomerdetails"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["zwappgetcustomerdetails"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["zwappgetcustomerdetails"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["zwappgetcustomerdetails"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="198a996d-b485-44a7-ace0-f165f713e32d" name="zwappgetcustomerdetails"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CUSTOMER_DETAILS</con:interface><con:operation>ZWappGetCustomerDetails</con:operation><con:request name="zwappgetcustomerdetails" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="9152dc6c-a30f-4c6c-a60d-34df21e92a1e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_customer_details/100/zwapp_get_customer_details/zwapp_get_customer_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetCustomerDetails>\r
         <BusinessPartnerId>${Properties#Partner}</BusinessPartnerId>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetCustomerDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6c3c6f30-c71e-4034-ba15-4b90c0590c55" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_DETAILS/ZWappGetCustomerDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="85f3240d-effd-4a1d-9bc2-4863458fd132" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="2b1760b2-6b85-4940-b1bf-b254584bf702" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="REDO_AZURE_ZWAPP_GETPODINFO_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="224c1fea-2b43-4e7f-ac58-33a5aeb76bb2"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>pod</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="39d9024c-1b97-4c8e-b415-e6b737830ccc"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getpodinfo.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + "__NEW" ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("pod",row)


	testRunner.runTestStepByName("zwappgetpodinfo")
	log.info("Time taken: " + testRunner.testCase.testSteps["zwappgetpodinfo"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["zwappgetpodinfo"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["zwappgetpodinfo"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["zwappgetpodinfo"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["zwappgetpodinfo"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["zwappgetpodinfo"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="00c48601-03e6-4636-aa80-c38b39b65053" name="zwappgetpodinfo"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_POD_INFO</con:interface><con:operation>ZWappGetPodInfo</con:operation><con:request name="zwappgetpodinfo" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="b17c1106-af1a-4961-8c12-38c1ec830014"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_pod_info/100/zwapp_get_pod_info/zwapp_get_pod_info</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetPodInfo>
         <Pod>${Properties#pod}</Pod>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetPodInfo>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="8dd5e4a1-17ea-45e8-962e-62d59b4c712d" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POD_INFO/ZWappGetPodInfoRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="faf6494d-5053-41e1-ac4d-e80fffcc3737" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="7fa818d0-4176-471f-9a52-760743e67d51" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="REDO_AZURE_ZWAPP_GETPODFINANCIALDATA_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="1d2effa3-425b-40b8-8447-853b0384e245"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>pod</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="84c6ce45-191e-4c56-bb4e-4d01c8346c0a"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getpodfinancialdata.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + "__NEWSTAMATIS" ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("pod",row)


	testRunner.runTestStepByName("zwappgetpodfinancialdata")
	log.info("Time taken: " + testRunner.testCase.testSteps["zwappgetpodfinancialdata"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["zwappgetpodfinancialdata"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["zwappgetpodfinancialdata"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["zwappgetpodfinancialdata"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["zwappgetpodfinancialdata"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["zwappgetpodfinancialdata"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="14635ea1-67e5-4b09-b930-235c0fa1965a" name="zwappgetpodfinancialdata"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_POD_FINANCIAL_DATA</con:interface><con:operation>ZWappGetPodFinancialData</con:operation><con:request name="zwappgetpodfinancialdata" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="c594ab73-1fd4-42f3-aada-b1588673e674"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_pod_financial_data/100/zwapp_get_pod_financial_data/zwapp_get_pod_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetPodFinancialData>\r
         <Pod>${Properties#pod}</Pod>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetPodFinancialData>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="0ee66395-4b3c-4c56-a6d8-2863c1641b5e" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POD_FINANCIAL_DATA/ZWappGetPodFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="a38ab62b-2156-49e9-9adf-1285c77b221c" name="LoadTest 1"><con:settings/><con:threadCount>50</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>10</testDelay><randomFactor>0.5</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="1f1fa75f-0bc8-4662-a0b1-56d1b6599708" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="REDO_AZURE_ZWAPP_GETBPContractDetails_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="638b5065-f18c-47e3-9385-ad2128fcf50e"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="78f21c22-2bf1-4a47-8485-d6df234ae372"><con:settings/><con:config><script>import groovy.util.*


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")



def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\bpcontractdetails.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test"+formdate ;
log.info(filepath)
log.info(output_fp)

// Open output file
def ot_file = new File(output_fp)
if (ot_file.exists()){
	log.info("File: " + output_fp + " already exists. Overwriting..")
	ot_file.delete()
}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

for (int i = 0; i &lt; count; i++)
{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappBpContractDetails")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.timeTaken)
	time_taken =  testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.timeTaken

	
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 
	res_size =  testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size +',' + httpStatusCode)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="325cca53-85fb-49be-8f90-64998b9cb114" name="ZWappBpContractDetails"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_BP_CONTRACT_DETAILS</con:interface><con:operation>ZWappBpContractDetails</con:operation><con:request name="ZWappBpContractDetails" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="f1333c65-321f-4c6a-bf5d-f340a529bf25"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d3b7d90b-94b6-457a-b875-b6637bdf5ba4" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="5f4e3655-ed54-4f8c-9aed-8e38e43ef9ed" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="13bd5abd-2645-4c67-996b-2278666c021e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZREDO_AZURE_ZWAPP_GETCAFINANCIAL_DATA_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="3ef25d91-3dbe-4874-b9e1-784c248271bd"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value>300004838210</con:value></con:property><con:property><con:name>Entries</con:name><con:value/></con:property><con:property><con:name>Page</con:name><con:value/></con:property><con:property><con:name>FromDate</con:name><con:value/></con:property><con:property><con:name>ToDate</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="9f63001f-4842-4184-8768-428dae03413a"><con:settings/><con:config><script>import groovy.util.*
import groovy.transform.Synchronized
import com.eviware.soapui.support.GroovyUtils

def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

//def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\cafidata.txt"
//def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + 'ZREDO' ;
//log.info(filepath)
//log.info(output_fp)

def basepath = new GroovyUtils(context).projectPath
log.info("Projdir:" + basepath)
def filepath = basepath + "\\zw_cafidata_1.txt"
def output_fp = basepath + "\\" + testRunner.testCase.getName() +"_test"+ 'ZREDO'
log.info(filepath)
log.info(output_fp)



// Open output file
def ot_file = new File(output_fp)
//if (ot_file.exists()){
//	log.info("File: " + output_fp + " already exists. Overwriting..")
//	ot_file.delete()
//}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()


class WriterClass{

	@Synchronized
	void  async_write(String string_in, File outputfile){
		outputfile.append(string_in)
}
	
}

log.info("Test")
writer1 = new WriterClass()

for (int i = 0; i &lt; count; i++)
{

	try
	{
	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappGetCaFinancialDataPollaplos")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 
	
	time_taken =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	//ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)

	String output_str = System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode
	writer1.async_write(output_str, ot_file)
	}
	catch(Exception exp)
	{
		log.info("Error during execution")
	}
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="49987af5-4339-4f51-9b3c-7693a8f93f48" name="ZWappGetCaFinancialDataPollaplos"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA</con:interface><con:operation>ZWappGetCaFinancialData</con:operation><con:request name="ZWappGetCaFinancialDataPollaplos" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6d66fec7-4abc-4598-bfbd-d62b2f533e41"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>
         <!--Optional:-->
         <Entries/>
         <!--Optional:-->
         <FromDate/>
         <!--Optional:-->
         <Page/>
         <!--Optional:-->
         <Source/>
         <!--Optional:-->
         <ToDate/>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d75bd73a-7226-4ecb-a00d-d2c83ba92ba8" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="9c61e84b-bbfe-4879-ae5f-0a97d30bb5d1" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="be9735d5-c0ee-4b72-8d0f-d35387995d1f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZREDO_AZURE_ZWAPP_GETPODINFO_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="f202ccdd-8fd2-467c-a44e-59b2a028f511"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>pod</con:name><con:value>443558520015</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="3945b362-bdf9-4c6a-8948-56b941211aea"><con:settings/><con:config><script>import groovy.util.*
import groovy.transform.Synchronized
import com.eviware.soapui.support.GroovyUtils


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

//def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getpodinfo.txt"
//def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + "ZREDO" ;
//log.info(filepath)
//log.info(output_fp)


def basepath = new GroovyUtils(context).projectPath
log.info("Projdir:" + basepath)
def filepath = basepath + "\\zw_getpodinfo_1.txt"
def output_fp = basepath + "\\" + testRunner.testCase.getName() +"_test"+ 'ZREDO'
log.info(filepath)
log.info(output_fp)

//testRunner.cancel(" Stopping...")
//return


// Open output file
def ot_file = new File(output_fp)
//if (ot_file.exists()){
//	log.info("File: " + output_fp + " already exists. Overwriting..")
//	ot_file.delete()
//}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()


class WriterClass{

	@Synchronized
	void  async_write(String string_in, File outputfile){
		outputfile.append(string_in)
}
	
}

log.info("Test")
writer1 = new WriterClass()







for (int i = 0; i &lt; count; i++)
{

	try
	{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("pod",row)


	testRunner.runTestStepByName("zwappgetpodinfo")
	log.info("Time taken: " + testRunner.testCase.testSteps["zwappgetpodinfo"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["zwappgetpodinfo"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["zwappgetpodinfo"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["zwappgetpodinfo"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["zwappgetpodinfo"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["zwappgetpodinfo"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	//ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)

	String output_str = System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode
	writer1.async_write(output_str, ot_file)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})

	}
	catch (Exception exp)
	{
		log.info("Error during execution")
	}


}
</script></con:config></con:testStep><con:testStep type="request" id="6951bf69-8985-455d-87e9-24fa37b47f87" name="zwappgetpodinfo"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_POD_INFO</con:interface><con:operation>ZWappGetPodInfo</con:operation><con:request name="zwappgetpodinfo" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="b17c1106-af1a-4961-8c12-38c1ec830014"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_pod_info/100/zwapp_get_pod_info/zwapp_get_pod_info</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetPodInfo>
         <Pod>${Properties#pod}</Pod>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetPodInfo>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="8dd5e4a1-17ea-45e8-962e-62d59b4c712d" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POD_INFO/ZWappGetPodInfoRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="149ed579-dbe7-4832-8972-a5f193d84590" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="563e2dba-4f30-414d-9c59-cecbcc4fefa6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZREDO_ZWAPP_GETPOLLAPLOICODES_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="2c1138b7-7eaf-4914-8bbe-cb1c6c4a5ff2"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Partner</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="8c41d5ed-b29a-4c36-9b6b-470130ab3b7f"><con:settings/><con:config><script>import groovy.util.*
import groovy.transform.Synchronized
import com.eviware.soapui.support.GroovyUtils

def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")


def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getpollaploicodes.txt"
def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + 'ZREDO' ;
log.info(filepath)
log.info(output_fp)

def basepath = new GroovyUtils(context).projectPath
log.info("Projdir:" + basepath)
def filepath = basepath + "\\getpollaploicodes.txt"
def output_fp = basepath + "\\" + testRunner.testCase.getName() +"_test"+ 'ZREDO'
log.info(filepath)
log.info(output_fp)

//testRunner.cancel(" Stopping...")
//return



// Open output file
def ot_file = new File(output_fp)
//if (ot_file.exists()){
//	log.info("File: " + output_fp + " already exists. Overwriting..")
//	ot_file.delete()
//}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

class WriterClass{

	@Synchronized
	void  async_write(String string_in, File outputfile){
		outputfile.append(string_in)
}
	
}


log.info("Test")
writer1 = new WriterClass()

for (int i = 0; i &lt; count; i++)
{

	try
	{
	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("Partner",row)


	testRunner.runTestStepByName("ZWappGetPollaploiCodes")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetPollaploiCodes"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetPollaploiCodes"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetPollaploiCodes"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["ZWappGetPollaploiCodes"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetPollaploiCodes"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetPollaploiCodes"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	//ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)
	String output_str = System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode
	writer1.async_write(output_str, ot_file)
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
	}
	catch(Exception exp)
	{
		log.info("Error during execution")
	}


}
</script></con:config></con:testStep><con:testStep type="request" id="5e241e9a-d846-4b0b-a430-9f13b2b0d41d" name="ZWappGetPollaploiCodes"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_POLLAPLOI_CODES</con:interface><con:operation>ZWappGetPollaploiCodes</con:operation><con:request name="ZWappGetPollaploiCodes" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="465ba864-b6dd-4739-b686-7b7b65336e77"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sapwebdisp:4431/sap/bc/srt/rfc/sap/zwapp_get_pollaploi_codes/100/zwapp_get_pollaploi_codes/zwapp_get_pollaploi_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetPollaploiCodes>\r
         <BusinessPartnerId>${Properties#Partner}</BusinessPartnerId>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetPollaploiCodes>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="26fd1491-6f33-4d10-b932-f5db2173e64d" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POLLAPLOI_CODES/ZWappGetPollaploiCodesRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="63a16fe3-c7e0-44b5-aa62-d510379a7481" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="1fcd24e5-73f9-4adc-b147-1c649cbe8434" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZREDO_AZURE_ZWAPP_GETMETERINGDATA_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="29b1e6c0-e01e-4923-8186-ef71b37a1bcc"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value>300004838210</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="d7b7972a-03fe-4bd0-bda2-b80788484677"><con:settings/><con:config><script>import groovy.util.*
import groovy.transform.Synchronized
import com.eviware.soapui.support.GroovyUtils

def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

//def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getmeteringdata.txt"
//def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + "ZREDO" ;
//log.info(filepath)
//log.info(output_fp)


def basepath = new GroovyUtils(context).projectPath
log.info("Projdir:" + basepath)
def filepath = basepath + "\\zw_getmeteringdata_1.txt"
def output_fp = basepath + "\\" + testRunner.testCase.getName() +"_test"+ 'ZREDO'
log.info(filepath)
log.info(output_fp)

//testRunner.cancel(" Stopping...")
//return






// Open output file
def ot_file = new File(output_fp)
//if (ot_file.exists()){
//	log.info("File: " + output_fp + " already exists. Overwriting..")
//	ot_file.delete()
//}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()


class WriterClass{

	@Synchronized
	void  async_write(String string_in, File outputfile){
		outputfile.append(string_in)
}
	
}

log.info("Test")
writer1 = new WriterClass()


for (int i = 0; i &lt; count; i++)
{
	try
	{
	
	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("zwappgetmeteringdata")
	log.info("Time taken: " + testRunner.testCase.testSteps["zwappgetmeteringdata"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["zwappgetmeteringdata"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["zwappgetmeteringdata"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["zwappgetmeteringdata"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["zwappgetmeteringdata"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["zwappgetmeteringdata"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	//ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)


	String output_str = System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode
	writer1.async_write(output_str, ot_file)

	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})

	}
	catch (Exception exp)
	{
		log.info("Error during execution")
	}

}
</script></con:config></con:testStep><con:testStep type="request" id="0a58cd7e-2fc5-4ed8-8417-3d825189a1d3" name="zwappgetmeteringdata"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_METERGIN_DATA</con:interface><con:operation>ZWappGetMeterginData</con:operation><con:request name="zwappgetmeteringdata" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="e833d381-16bd-4b19-9313-58df1043ba93"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_metergin_data/100/zwapp_get_metergin_data/zwapp_get_metergin_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetMeterginData>
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>
         <!--Optional:-->
         <MrYears>10</MrYears>
         <!--Optional:-->
         <PCmrChecks>X</PCmrChecks>
         <!--Optional:-->
         <Source/>
      </urn:ZWappGetMeterginData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="89d4caff-a7f7-4b8e-9924-fc6733d4fc21" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_METERGIN_DATA/ZWappGetMeterginDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="dbd1dfc6-171e-4e2e-998e-712635a51dfc" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="b640fedb-5053-46f3-8168-c299045e81fb" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZREDO_AZURE_ZWAPP_GETVATFINANCIALDATA_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="c2b65905-940c-47cf-b334-7451939c0842"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>afm</con:name><con:value>012154890</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="b9408b67-3aa0-4226-900f-d5b3bc36a22f"><con:settings/><con:config><script>import groovy.util.*
import groovy.transform.Synchronized
import com.eviware.soapui.support.GroovyUtils


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")




//def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getvatfinancialdata.txt"
//def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" +formdate+ "__NEW" ;
//def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + "__NEW" ;

def basepath = new GroovyUtils(context).projectPath
log.info("Projdir:" + basepath)
def filepath = basepath + "\\zw_getvatfinancial_1.txt"
def output_fp = basepath + "\\" + testRunner.testCase.getName() +"_test"+ 'ZREDO'
log.info(filepath)
log.info(output_fp)



log.info(filepath)
log.info(output_fp)



//testRunner.cancel(" Stopping...")
//return



// Open output file
def ot_file = new File(output_fp)
//if (ot_file.exists()){
//	log.info("File: " + output_fp + " already exists. Overwriting..")
	//ot_file.delete()
//}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

class WriterClass{

	@Synchronized
	void  async_write(String string_in, File outputfile){
		outputfile.append(string_in)
}
	
}



log.info("Test")
writer1 = new WriterClass()



for (int i = 0; i &lt; count; i++)
{

try{
	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("afm",row)


	testRunner.runTestStepByName("zwappgetvatfinancialdata")
	log.info("Time taken: " + testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	//ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)


	String output_str = System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode
	writer1.async_write(output_str, ot_file)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
catch (Exception exp)
{
	log.info("Error during execution")
	log.info(exp.toString())
}
}</script></con:config></con:testStep><con:testStep type="request" id="bba07489-91b8-44e8-b105-ab691d2210fb" name="zwappgetvatfinancialdata"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_VAT_FINANCIAL_DATA</con:interface><con:operation>ZWappGetVatFinancialData</con:operation><con:request name="zwappgetvatfinancialdata" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="631721fa-4035-40cd-a0a9-d485d2de8a9d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_vat_financial_data/100/zwapp_get_vat_financial_data/zwapp_get_vat_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetVatFinancialData>
         <Afm>${Properties#afm}</Afm>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetVatFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c6890b0f-05eb-4eb5-9f6f-78f11d3dd5b1" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_VAT_FINANCIAL_DATA/ZWappGetVatFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="063f8f82-883e-4fdf-8ff2-5361fff2e098" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="e7aa3a86-abeb-41e4-9889-af88ca3996a6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZREDO_AZURE_ZWAPP_GETCAFINANCIAL_DATA_FR_KOFTIS" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="b5c76bf5-9abd-4ff0-bbde-2a5e1c135ae8"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value>300004838210</con:value></con:property><con:property><con:name>Entries</con:name><con:value/></con:property><con:property><con:name>Page</con:name><con:value/></con:property><con:property><con:name>FromDate</con:name><con:value/></con:property><con:property><con:name>ToDate</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="f0aabb87-a28b-4277-b2e2-de4d74512de1"><con:settings/><con:config><script>import groovy.util.*
import groovy.transform.Synchronized
import com.eviware.soapui.support.GroovyUtils

def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

//def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\cafidata.txt"
//def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" +"ZREDO" ;
//log.info(filepath)
//log.info(output_fp)

def basepath = new GroovyUtils(context).projectPath
log.info("Projdir:" + basepath)
def filepath = basepath + "\\zw_cafidata_1.txt"
def output_fp = basepath + "\\" + testRunner.testCase.getName() +"_test"+ 'ZREDO'
log.info(filepath)
log.info(output_fp)


//testRunner.cancel(" Stopping...")
//return







// Open output file
def ot_file = new File(output_fp)
//if (ot_file.exists()){
//	log.info("File: " + output_fp + " already exists. Overwriting..")
//	ot_file.delete()
//}




context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

class WriterClass{

	@Synchronized
	void  async_write(String string_in, File outputfile){
		outputfile.append(string_in)
}
	
}

log.info("Test")
writer1 = new WriterClass()



for (int i = 0; i &lt; count; i++)
{

	try
	{


	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappGetCaFinancialDataPollaplos")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 
	
	time_taken =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	//ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)

	String output_str = System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode
	writer1.async_write(output_str, ot_file)

	}
	catch (Exception exp)
	{
		log.info("Error during the execution.")
	}
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="a774e9ba-95e7-4f84-bc07-5d06236d4745" name="ZWappGetCaFinancialDataPollaplos"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA</con:interface><con:operation>ZWappGetCaFinancialData</con:operation><con:request name="ZWappGetCaFinancialDataPollaplos" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6d66fec7-4abc-4598-bfbd-d62b2f533e41"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>
         <!--Optional:-->
         <Entries>1</Entries>
         <!--Optional:-->
         <FromDate/>
         <!--Optional:-->
         <Page>1</Page>
         <!--Optional:-->
         <Source/>
         <!--Optional:-->
         <ToDate/>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d75bd73a-7226-4ecb-a00d-d2c83ba92ba8" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="01ddd7ea-8014-4905-80fd-e79d79c84e36" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="948a9bc3-903a-4ad9-973a-27d4692b18d5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZREDO_AZURE_ZWAPP_GETPOLLAPLOICODES_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="c76ba55b-3028-4c6c-b76c-88cbdbc9b06a"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Partner</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="53061399-514a-4725-9456-04595818463b"><con:settings/><con:config><script>import groovy.util.*
import groovy.transform.Synchronized
import com.eviware.soapui.support.GroovyUtils



def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")


//def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getpollaploicodes.txt"
//def output_fp x= "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + formdate + "__NEW" ;
//def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + "ZREDO" ;
//log.info(filepath)
//log.info(output_fp)

def basepath = new GroovyUtils(context).projectPath
log.info("Projdir:" + basepath)
def filepath = basepath + "\\getpollaploicodes.txt"
def output_fp = basepath + "\\" + testRunner.testCase.getName() +"_test"+ 'ZREDO'
log.info(filepath)
log.info(output_fp)

//testRunner.cancel(" Stopping...")
//return






// Open output file
def ot_file = new File(output_fp)
//if (ot_file.exists()){
//	log.info("File: " + output_fp + " already exists. Overwriting..")
//	ot_file.delete()
//}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

class WriterClass{

	@Synchronized
	void  async_write(String string_in, File outputfile){
		outputfile.append(string_in)
}
	
}

log.info("Test")
writer1 = new WriterClass()




for (int i = 0; i &lt; count; i++)
{
	try
	{
	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("Partner",row)


	testRunner.runTestStepByName("ZWappGetPollaploiCodes")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetPollaploiCodes"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetPollaploiCodes"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetPollaploiCodes"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["ZWappGetPollaploiCodes"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetPollaploiCodes"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetPollaploiCodes"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	//ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)

	String output_str = System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode
	writer1.async_write(output_str, ot_file)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})

	}
	catch (Exception exp)
	{
		log.info("Error during execution")
	}


}
</script></con:config></con:testStep><con:testStep type="request" id="970ab3a0-95ea-4f4f-9cae-65bedd625661" name="ZWappGetPollaploiCodes"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_POLLAPLOI_CODES</con:interface><con:operation>ZWappGetPollaploiCodes</con:operation><con:request name="ZWappGetPollaploiCodes" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="465ba864-b6dd-4739-b686-7b7b65336e77"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_pollaploi_codes/100/zwapp_get_pollaploi_codes/zwapp_get_pollaploi_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetPollaploiCodes>\r
         <BusinessPartnerId>${Properties#Partner}</BusinessPartnerId>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetPollaploiCodes>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="26fd1491-6f33-4d10-b932-f5db2173e64d" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POLLAPLOI_CODES/ZWappGetPollaploiCodesRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="f41c0ddf-f015-40f0-9f52-2666d36cf483" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="53b7ae01-deb7-4b89-8afc-20b220beb9d4" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZREDO_AZURE_ZWAPP_GETCUSTGDPRFROMAFM_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="9266cf9a-3fca-476d-96c8-90e63e9658d6"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>afm</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="7e541817-ea32-4056-9554-aee9d33b1644"><con:settings/><con:config><script>import groovy.util.*
import groovy.transform.Synchronized
import com.eviware.soapui.support.GroovyUtils

def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

//def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getgpdrfromafm.txt"
//def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + "ZREDO" ;
//log.info(filepath)
//log.info(output_fp)


def basepath = new GroovyUtils(context).projectPath
log.info("Projdir:" + basepath)
def filepath = basepath + "\\getgpdrfromafm.txt"
def output_fp = basepath + "\\" + testRunner.testCase.getName() +"_test"+ 'ZREDO'
log.info(filepath)
log.info(output_fp)


//testRunner.cancel(" Stopping...")
//return




// Open output file
def ot_file = new File(output_fp)
//if (ot_file.exists()){
//	log.info("File: " + output_fp + " already exists. Overwriting..")
	//ot_file.delete()
//}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

class WriterClass{

	@Synchronized
	void  async_write(String string_in, File outputfile){
		outputfile.append(string_in)
}
	
}

log.info("Test")
writer1 = new WriterClass()

for (int i = 0; i &lt; count; i++)
{

	try
	{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("afm",row)


	testRunner.runTestStepByName("zwappgetcustgdprfromafm")
	log.info("Time taken: " + testRunner.testCase.testSteps["zwappgetcustgdprfromafm"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["zwappgetcustgdprfromafm"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["zwappgetcustgdprfromafm"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["zwappgetcustgdprfromafm"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["zwappgetcustgdprfromafm"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["zwappgetcustgdprfromafm"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	//ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)

	String output_str = System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode
	writer1.async_write(output_str, ot_file)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
	}
	catch (Exception exp)
	{
		log.info("Error during execution")
	}

}
</script></con:config></con:testStep><con:testStep type="request" id="6ce74082-6a7f-4d4c-b9f2-238e4fcf0840" name="zwappgetcustgdprfromafm"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CUSTOMER_GDPR_AFM</con:interface><con:operation>ZWappGetCustomerGdprAfm</con:operation><con:request name="zwappgetcustgdprfromafm" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="923de0f7-5095-4f1a-ad3b-aa29f5a4f6cd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_customer_gdpr_afm/100/zwapp_get_customer_gdpr_afm/zwapp_get_customer_gdpr_afm</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetCustomerGdprAfm>\r
         <Afm>${Properties#afm}</Afm>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetCustomerGdprAfm>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9107827f-05a0-494a-a1e9-6dd00d8efcb8" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_GDPR_AFM/ZWappGetCustomerGdprAfmRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="25c0aa2d-eac8-4f49-9abb-c5f85ec02456" name="LoadTest 1"><con:settings/><con:threadCount>10</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="d20996da-d604-4f6e-b99e-06d3bbb04354" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZREDO_AZURE_ZWAPP_GETCUSTOMERDETAILS_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="6d5efeaf-8a74-454c-8fa3-20be9b66c3ac"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Partner</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="3ffc2a95-9932-4234-8dac-412157a2d1e6"><con:settings/><con:config><script>import groovy.util.*
import groovy.transform.Synchronized
import com.eviware.soapui.support.GroovyUtils


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

//def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getcustomerdetails.txt"
//def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" +formdate +"__NEW" ;
//log.info(filepath)
//log.info(output_fp)


def basepath = new GroovyUtils(context).projectPath
log.info("Projdir:" + basepath)
def filepath = basepath + "\\getcustomerdetails.txt"
def output_fp = basepath + "\\" + testRunner.testCase.getName() +"_test"+ 'ZREDO'
log.info(filepath)
log.info(output_fp)

//testRunner.cancel(" Stopping...")
//return


// Open output file
def ot_file = new File(output_fp)
//if (ot_file.exists()){
//	log.info("File: " + output_fp + " already exists. Overwriting..")
//	ot_file.delete()
//}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

class WriterClass{

	@Synchronized
	void  async_write(String string_in, File outputfile){
		outputfile.append(string_in)
}
	
}

log.info("Test")
writer1 = new WriterClass()








for (int i = 0; i &lt; count; i++)
{
	try
	{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("Partner",row)


	testRunner.runTestStepByName("zwappgetcustomerdetails")
	log.info("Time taken: " + testRunner.testCase.testSteps["zwappgetcustomerdetails"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["zwappgetcustomerdetails"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["zwappgetcustomerdetails"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["zwappgetcustomerdetails"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["zwappgetcustomerdetails"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["zwappgetcustomerdetails"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	//ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)

	String output_str = System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode
	writer1.async_write(output_str, ot_file)


	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})

	}
	catch (Exception exp)
	{
		log.info("Error during execution")
	}

}
</script></con:config></con:testStep><con:testStep type="request" id="a2444d33-d4c3-4249-a939-503fe1f32ca2" name="zwappgetcustomerdetails"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CUSTOMER_DETAILS</con:interface><con:operation>ZWappGetCustomerDetails</con:operation><con:request name="zwappgetcustomerdetails" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="9152dc6c-a30f-4c6c-a60d-34df21e92a1e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_customer_details/100/zwapp_get_customer_details/zwapp_get_customer_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetCustomerDetails>\r
         <BusinessPartnerId>${Properties#Partner}</BusinessPartnerId>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetCustomerDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6c3c6f30-c71e-4034-ba15-4b90c0590c55" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CUSTOMER_DETAILS/ZWappGetCustomerDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="24cc7eb5-0648-4aac-9ff0-1e21f48d3217" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="8e41bb63-0dd6-48d7-9747-7afeb4a8fb34" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZREDO_AZURE_ZWAPP_GETPODFINANCIALDATA_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="010b6391-dd62-497b-a4de-835e35433c2d"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>pod</con:name><con:value>827069994096</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="694e725c-b318-4f90-9277-40d8424a73b4"><con:settings/><con:config><script>import groovy.util.*
import groovy.transform.Synchronized
import com.eviware.soapui.support.GroovyUtils

def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

//def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getpodfinancialdata.txt"
//def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + "__NEWSTAMATIS" ;
//log.info(filepath)
//log.info(output_fp)


def basepath = new GroovyUtils(context).projectPath
log.info("Projdir:" + basepath)
def filepath = basepath + "\\getpodfinancialdata.txt"
def output_fp = basepath + "\\" + testRunner.testCase.getName() +"_test"+ 'ZREDO'
log.info(filepath)
log.info(output_fp)

//testRunner.cancel(" Stopping...")
//return


// Open output file
def ot_file = new File(output_fp)
//if (ot_file.exists()){
//	log.info("File: " + output_fp + " already exists. Overwriting..")
//	ot_file.delete()
//}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

class WriterClass{

	@Synchronized
	void  async_write(String string_in, File outputfile){
		outputfile.append(string_in)
}
	
}

log.info("Test")
writer1 = new WriterClass()







for (int i = 0; i &lt; count; i++)
{

	try
	{

	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("pod",row)


	testRunner.runTestStepByName("zwappgetpodfinancialdata")
	log.info("Time taken: " + testRunner.testCase.testSteps["zwappgetpodfinancialdata"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["zwappgetpodfinancialdata"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["zwappgetpodfinancialdata"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["zwappgetpodfinancialdata"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["zwappgetpodfinancialdata"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["zwappgetpodfinancialdata"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	//ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)

	String output_str = System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode
	writer1.async_write(output_str, ot_file)

	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})

	}
	catch (Exception exp)
	{
		log.info("Error during execution")
	}

}
</script></con:config></con:testStep><con:testStep type="request" id="86920b9d-dd71-4e56-ad89-a44d25350962" name="zwappgetpodfinancialdata"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_POD_FINANCIAL_DATA</con:interface><con:operation>ZWappGetPodFinancialData</con:operation><con:request name="zwappgetpodfinancialdata" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="c594ab73-1fd4-42f3-aada-b1588673e674"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_pod_financial_data/100/zwapp_get_pod_financial_data/zwapp_get_pod_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappGetPodFinancialData>\r
         <Pod>${Properties#pod}</Pod>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappGetPodFinancialData>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="0ee66395-4b3c-4c56-a6d8-2863c1641b5e" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POD_FINANCIAL_DATA/ZWappGetPodFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="5d3318f9-7657-4763-a402-b51e6e0e1bd9" name="LoadTest 1"><con:settings/><con:threadCount>50</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>10</testDelay><randomFactor>0.5</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="0ea573fb-dca0-4bda-9236-dc2284ca17ef" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZREDO_AZURE_ZWAPP_GETBPContractDetails_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="94128f7b-e8d0-406e-ad08-a89cddc28c9c"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value>300004838210</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="39dd0a8b-7cf2-4315-9f3b-2cf6b01bf316"><con:settings/><con:config><script>import groovy.util.*
import groovy.transform.Synchronized
import com.eviware.soapui.support.GroovyUtils



def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")



//def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\bpcontractdetails.txt"
//def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test"+ 'ZREDO' ;
//log.info(filepath)
//log.info(output_fp)

def basepath = new GroovyUtils(context).projectPath
log.info("Projdir:" + basepath)
def filepath = basepath + "\\zw_getbpcontractdetails_1.txt"
def output_fp = basepath + "\\" + testRunner.testCase.getName() +"_test"+ 'ZREDO'
log.info(filepath)
log.info(output_fp)




//testRunner.cancel(" Stopping...")
//return


// Open output file
def ot_file = new File(output_fp)
//if (ot_file.exists()){
//	log.info("File: " + output_fp + " already exists. Overwriting..")
//	ot_file.delete()
//}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()


class WriterClass{

	@Synchronized
	void  async_write(String string_in, File outputfile){
		outputfile.append(string_in)
}
	
}

log.info("Test")
writer1 = new WriterClass()








for (int i = 0; i &lt; count; i++)
{


try {
	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappBpContractDetails")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.timeTaken)
	time_taken =  testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.timeTaken

	
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 
	res_size =  testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappBpContractDetails"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	//ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size +',' + httpStatusCode)

	String output_str = System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode
	writer1.async_write(output_str, ot_file)
}
catch (Exception exp)
{
	log.info("Error during execution")
}
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="5edfc6ac-6033-45b1-af85-283a5ea16ed4" name="ZWappBpContractDetails"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_BP_CONTRACT_DETAILS</con:interface><con:operation>ZWappBpContractDetails</con:operation><con:request name="ZWappBpContractDetails" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="f1333c65-321f-4c6a-bf5d-f340a529bf25"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d3b7d90b-94b6-457a-b875-b6637bdf5ba4" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="7e42b77a-cf18-47f8-aca2-6dbd1e6ab76c" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="9aec354e-5a3b-4653-9b6a-ac355d1f52e0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Copy of ZREDO_AZURE_ZWAPP_GETVATFINANCIALDATA_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="e9a12151-7d14-4ab2-b21a-41d15207ff17"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>afm</con:name><con:value>020565733</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="c164a457-aed6-451e-a157-c407ee536340"><con:settings/><con:config><script>import groovy.util.*
import groovy.transform.Synchronized
import com.eviware.soapui.support.GroovyUtils


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")




//def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getvatfinancialdata.txt"
//def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" +formdate+ "__NEW" ;
//def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + "__NEW" ;

def basepath = new GroovyUtils(context).projectPath
log.info("Projdir:" + basepath)
def filepath = basepath + "\\zw_getvatfinancial_4.txt"
def output_fp = basepath + "\\" + testRunner.testCase.getName() +"_test"+ 'ZREDOdebug'
log.info(filepath)
log.info(output_fp)

def err_fp = basepath + "\\GETVATERRORS"
def err_file = new File(err_fp)

log.info(filepath)
log.info(output_fp)



//testRunner.cancel(" Stopping...")
//return



// Open output file
def ot_file = new File(output_fp)
//if (ot_file.exists()){
//	log.info("File: " + output_fp + " already exists. Overwriting..")
	//ot_file.delete()
//}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

class WriterClass{

	@Synchronized
	void  async_write(String string_in, File outputfile){
		outputfile.append(string_in)
}
	
}



log.info("Test")
writer1 = new WriterClass()



for (int i = 0; i &lt; count; i++)
{

try{
	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("afm",row)


	testRunner.runTestStepByName("zwappgetvatfinancialdata")
	log.info("Time taken: " + testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	//ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)


	String output_str = System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode
	writer1.async_write(output_str, ot_file)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
catch (Exception exp)
{
	output1 = rows[i]
	log.info("Error during execution")
	log.info(exp.toString())
	writer1.async(output1 + ',' + exp.toString() + ',', err_file)
}
}</script></con:config></con:testStep><con:testStep type="request" id="a6b0efea-159b-4b98-9b1e-806ec5ddec4d" name="zwappgetvatfinancialdata"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_VAT_FINANCIAL_DATA</con:interface><con:operation>ZWappGetVatFinancialData</con:operation><con:request name="zwappgetvatfinancialdata" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="631721fa-4035-40cd-a0a9-d485d2de8a9d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_vat_financial_data/100/zwapp_get_vat_financial_data/zwapp_get_vat_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetVatFinancialData>
         <Afm>${Properties#afm}</Afm>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetVatFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c6890b0f-05eb-4eb5-9f6f-78f11d3dd5b1" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_VAT_FINANCIAL_DATA/ZWappGetVatFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="e2a15bef-1cbf-45e0-83b6-1087dbe7009d" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="1f1d9a20-2b78-407f-9b00-68c28691c4a9" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Copy of ZREDO_AZURE_ZWAPP_GETCAFINANCIAL_DATA_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="235e19e0-71cf-4027-9c76-2949a6deb382"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value>300000003410</con:value></con:property><con:property><con:name>Entries</con:name><con:value/></con:property><con:property><con:name>Page</con:name><con:value/></con:property><con:property><con:name>FromDate</con:name><con:value/></con:property><con:property><con:name>ToDate</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="9b95e8d7-369b-469c-9562-a916b2485156"><con:settings/><con:config><script>import groovy.util.*
import groovy.transform.Synchronized
import com.eviware.soapui.support.GroovyUtils

def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

//def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\cafidata.txt"
//def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + 'ZREDO' ;
//log.info(filepath)
//log.info(output_fp)

def basepath = new GroovyUtils(context).projectPath
log.info("Projdir:" + basepath)
def filepath = basepath + "\\zw_cafidata_1_bad.txt"
def output_fp = basepath + "\\" + testRunner.testCase.getName() +"_test"+ 'ZREDO'
log.info(filepath)
log.info(output_fp)

def err_fp = basepath + "\\GETVATERRORS"
def err_file = new File(err_fp)

// Open output file
def ot_file = new File(output_fp)
//if (ot_file.exists()){
//	log.info("File: " + output_fp + " already exists. Overwriting..")
//	ot_file.delete()
//}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()


class WriterClass{

	@Synchronized
	void  async_write(String string_in, File outputfile){
		outputfile.append(string_in)
}
	
}

log.info("Test")
writer1 = new WriterClass()

for (int i = 0; i &lt; count; i++)
{

	try
	{
	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappGetCaFinancialDataPollaplos")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 
	
	time_taken =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	//ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)

	String output_str = System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode
	writer1.async_write(output_str, ot_file)
	}
	catch(Exception exp)
	{
	log.info('aaaaa' + rows[i])
	String output1 = rows[i]
	output1 = output1 + ',' + exp.toString() + ','
	log.info("Error during execution")
	log.info(exp.toString())
	writer1.async_write(output1, err_file)
	}
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="3c1dc67c-bb20-47eb-bfb8-189c16fbabdc" name="ZWappGetCaFinancialDataPollaplos"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA</con:interface><con:operation>ZWappGetCaFinancialData</con:operation><con:request name="ZWappGetCaFinancialDataPollaplos" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6d66fec7-4abc-4598-bfbd-d62b2f533e41"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>
         <!--Optional:-->
         <Entries/>
         <!--Optional:-->
         <FromDate/>
         <!--Optional:-->
         <Page/>
         <!--Optional:-->
         <Source/>
         <!--Optional:-->
         <ToDate/>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d75bd73a-7226-4ecb-a00d-d2c83ba92ba8" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="60411a02-e7b5-49cd-9e35-611b01cb4d63" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="dbd0655f-be29-41df-9558-593029dfa44a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Copy of ZREDO_AZURE_ZWAPP_GETMETERINGDATA_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="d2b4e986-8104-4c1c-8a36-7661442c5f04"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value>300015062336</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="9b853831-b233-4da5-9203-ed1c3c84fd8b"><con:settings/><con:config><script>import groovy.util.*
import groovy.transform.Synchronized
import com.eviware.soapui.support.GroovyUtils

def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

//def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getmeteringdata.txt"
//def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + "ZREDO" ;
//log.info(filepath)
//log.info(output_fp)


def basepath = new GroovyUtils(context).projectPath
log.info("Projdir:" + basepath)
def filepath = basepath + "\\zw_getmeteringdata_4.txt"
def output_fp = basepath + "\\" + testRunner.testCase.getName() +"_test"+ 'ZREDO'
log.info(filepath)
log.info(output_fp)

//testRunner.cancel(" Stopping...")
//return






// Open output file
def ot_file = new File(output_fp)
//if (ot_file.exists()){
//	log.info("File: " + output_fp + " already exists. Overwriting..")
//	ot_file.delete()
//}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()


class WriterClass{

	@Synchronized
	void  async_write(String string_in, File outputfile){
		outputfile.append(string_in)
}
	
}

log.info("Test")
writer1 = new WriterClass()


for (int i = 0; i &lt; count; i++)
{
	try
	{
	
	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("zwappgetmeteringdata")
	log.info("Time taken: " + testRunner.testCase.testSteps["zwappgetmeteringdata"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["zwappgetmeteringdata"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["zwappgetmeteringdata"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["zwappgetmeteringdata"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["zwappgetmeteringdata"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["zwappgetmeteringdata"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	//ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)


	String output_str = System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode
	writer1.async_write(output_str, ot_file)

	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})

	}
	catch (Exception exp)
	{
		String output1 = rows[i] + ',' + 'PROBLEM' + ','
		log.info("Error during execution")
		writer1.async_write(output, ot_file)
		
	}

}
</script></con:config></con:testStep><con:testStep type="request" id="a6aef4c2-1a8b-42e6-880a-976b246e246d" name="zwappgetmeteringdata"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_METERGIN_DATA</con:interface><con:operation>ZWappGetMeterginData</con:operation><con:request name="zwappgetmeteringdata" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="e833d381-16bd-4b19-9313-58df1043ba93"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_metergin_data/100/zwapp_get_metergin_data/zwapp_get_metergin_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetMeterginData>
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>
         <!--Optional:-->
         <MrYears>10</MrYears>
         <!--Optional:-->
         <PCmrChecks>X</PCmrChecks>
         <!--Optional:-->
         <Source/>
      </urn:ZWappGetMeterginData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="89d4caff-a7f7-4b8e-9924-fc6733d4fc21" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_METERGIN_DATA/ZWappGetMeterginDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="6db85bfb-3ab9-4b21-8d98-d422ee9bc6b9" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="3bebbb55-9291-4cea-bc92-6209cb481001" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="BAD_ZREDO_AZURE_ZWAPP_GETVATFINANCIALDATA_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="ff4fab4c-3b98-49b7-bb52-9c97f3acc301"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>afm</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="3ec92943-add5-4783-801d-4c8e2d827f59"><con:settings/><con:config><script>import groovy.util.*
import groovy.transform.Synchronized
import com.eviware.soapui.support.GroovyUtils


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")




//def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getvatfinancialdata.txt"
//def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" +formdate+ "__NEW" ;
//def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + "__NEW" ;

def basepath = new GroovyUtils(context).projectPath
log.info("Projdir:" + basepath)
def filepath = basepath + "\\zw_getvatfinancial_bad.txt"
def output_fp = basepath + "\\" + testRunner.testCase.getName() +"_test"+ 'ZREDOdebug'
log.info(filepath)
log.info(output_fp)

def err_fp = basepath + "\\GETVATERRORS"
def err_file = new File(err_fp)

log.info(filepath)
log.info(output_fp)



//testRunner.cancel(" Stopping...")
//return



// Open output file
def ot_file = new File(output_fp)
//if (ot_file.exists()){
//	log.info("File: " + output_fp + " already exists. Overwriting..")
	//ot_file.delete()
//}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

class WriterClass{

	@Synchronized
	void  async_write(String string_in, File outputfile){
		outputfile.append(string_in)
}
	
}



log.info("Test")
writer1 = new WriterClass()



for (int i = 0; i &lt; count; i++)
{

try{
	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("afm",row)


	testRunner.runTestStepByName("zwappgetvatfinancialdata")
	log.info("Time taken: " + testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	//ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)


	String output_str = System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode
	writer1.async_write(output_str, ot_file)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
catch (Exception exp)
{
	output1 = rows[i]
	log.info("Error during execution")
	log.info(exp.toString())
	writer1.async_write(output1 + ',' + exp.toString() + ',', err_file)
}
}</script></con:config></con:testStep><con:testStep type="request" id="ab744dc7-eefe-4645-91ad-4d87c3a12e66" name="zwappgetvatfinancialdata"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_VAT_FINANCIAL_DATA</con:interface><con:operation>ZWappGetVatFinancialData</con:operation><con:request name="zwappgetvatfinancialdata" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="631721fa-4035-40cd-a0a9-d485d2de8a9d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_vat_financial_data/100/zwapp_get_vat_financial_data/zwapp_get_vat_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetVatFinancialData>
         <Afm>${Properties#afm}</Afm>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetVatFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c6890b0f-05eb-4eb5-9f6f-78f11d3dd5b1" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_VAT_FINANCIAL_DATA/ZWappGetVatFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="05f0017a-f938-4b3c-9f18-42f46839a8a2" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="872bcc3c-288b-417a-88e2-660007a0064a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="BIGBAD_ZREDO_AZURE_ZWAPP_GETVATFINANCIALDATA_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="de2261e1-d685-49d1-850d-cc094f6b7d33"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>afm</con:name><con:value>099936189</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="dd6f97b9-ba0a-4700-a160-5cfe80b99a5f"><con:settings/><con:config><script>import groovy.util.*
import groovy.transform.Synchronized
import com.eviware.soapui.support.GroovyUtils


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")




//def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getvatfinancialdata.txt"
//def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" +formdate+ "__NEW" ;
//def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + "__NEW" ;

def basepath = new GroovyUtils(context).projectPath
log.info("Projdir:" + basepath)
def filepath = basepath + "\\zw_getvatfinancial_badbig.txt"
def output_fp = basepath + "\\" + testRunner.testCase.getName() +"_test"+ 'ZREDOdebug'
log.info(filepath)
log.info(output_fp)

def err_fp = basepath + "\\GETVATERRORS"
def err_file = new File(err_fp)

log.info(filepath)
log.info(output_fp)



//testRunner.cancel(" Stopping...")
//return



// Open output file
def ot_file = new File(output_fp)
//if (ot_file.exists()){
//	log.info("File: " + output_fp + " already exists. Overwriting..")
	//ot_file.delete()
//}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

class WriterClass{

	@Synchronized
	void  async_write(String string_in, File outputfile){
		outputfile.append(string_in)
}
	
}



log.info("Test")
writer1 = new WriterClass()



for (int i = 0; i &lt; count; i++)
{

try{
	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("afm",row)


	testRunner.runTestStepByName("zwappgetvatfinancialdata")
	log.info("Time taken: " + testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	//ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)


	String output_str = System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode
	writer1.async_write(output_str, ot_file)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
catch (Exception exp)
{
	output1 = rows[i]
	log.info("Error during execution")
	log.info(exp.toString())
	writer1.async_write(output1 + ',' + exp.toString() + ',', err_file)
}
}</script></con:config></con:testStep><con:testStep type="request" id="971cded3-0cf5-460d-a984-809ac34e0dd4" name="zwappgetvatfinancialdata"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_VAT_FINANCIAL_DATA</con:interface><con:operation>ZWappGetVatFinancialData</con:operation><con:request name="zwappgetvatfinancialdata" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="631721fa-4035-40cd-a0a9-d485d2de8a9d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_vat_financial_data/100/zwapp_get_vat_financial_data/zwapp_get_vat_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetVatFinancialData>
         <Afm>${Properties#afm}</Afm>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetVatFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c6890b0f-05eb-4eb5-9f6f-78f11d3dd5b1" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_VAT_FINANCIAL_DATA/ZWappGetVatFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="65eeaaa2-ee83-4f29-8d2b-cded35d19a3c" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="1f0c2ecb-623e-44b4-b1b1-4bdd21be6e61" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SAMPLER_ZREDO_AZURE_ZWAPP_GETVATFINANCIALDATA_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="08c6f841-1f44-433a-8a6f-7c7b89e4e768"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>afm</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="c66ac59f-eea5-44a9-8c12-4ff70bb0f829"><con:settings/><con:config><script>import groovy.util.*
import groovy.transform.Synchronized
import com.eviware.soapui.support.GroovyUtils


def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")




//def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getvatfinancialdata.txt"
//def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" +formdate+ "__NEW" ;
//def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + "__NEW" ;

def basepath = new GroovyUtils(context).projectPath
log.info("Projdir:" + basepath)

def filepath = basepath + "\\AFM_all.txt"
//def filepath = basepath + "\\afm1_sampler.txt"
def output_fp = basepath + "\\" + testRunner.testCase.getName() +"_test"+ 'ZREDOSAMPLER_0602_1400'
log.info(filepath)
log.info(output_fp)

def err_fp = basepath + "\\GETVATERRORS"
def err_file = new File(err_fp)

log.info(filepath)
log.info(output_fp)



//testRunner.cancel(" Stopping...")
//return



// Open output file
def ot_file = new File(output_fp)
//if (ot_file.exists()){
//	log.info("File: " + output_fp + " already exists. Overwriting..")
	//ot_file.delete()
//}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

class WriterClass{

	@Synchronized
	void  async_write(String string_in, File outputfile){
		outputfile.append(string_in)
}
	
}



log.info("Test")
writer1 = new WriterClass()



for (int i = 0; i &lt; count; i++)
{

try{
	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("afm",row)


	testRunner.runTestStepByName("zwappgetvatfinancialdata")
	log.info("Time taken: " + testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["zwappgetvatfinancialdata"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	//ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)


	String output_str = System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode
	writer1.async_write(output_str, ot_file)
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
catch (Exception exp)
{
	output1 = rows[i]
	log.info("Error during execution")
	log.info(exp.toString())
	writer1.async_write(output1 + ',' + exp.toString() + ',', err_file)
}
}</script></con:config></con:testStep><con:testStep type="request" id="58c8f3f6-f3a4-43ee-b4ec-ee2484bb564f" name="zwappgetvatfinancialdata"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_VAT_FINANCIAL_DATA</con:interface><con:operation>ZWappGetVatFinancialData</con:operation><con:request name="zwappgetvatfinancialdata" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="631721fa-4035-40cd-a0a9-d485d2de8a9d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webdispatcher.dei.local:44398/sap/bc/srt/rfc/sap/zwapp_get_vat_financial_data/100/zwapp_get_vat_financial_data/zwapp_get_vat_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetVatFinancialData>
         <Afm>${Properties#afm}</Afm>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetVatFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c6890b0f-05eb-4eb5-9f6f-78f11d3dd5b1" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_VAT_FINANCIAL_DATA/ZWappGetVatFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="2e256f98-819b-4a10-bc69-073040a0f2d6" name="LoadTest 1"><con:settings/><con:threadCount>25</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="78627073-879b-4ee7-bf4b-b45aeaacc054" name="DR"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="4d5ba3ec-de25-4649-8e02-539bd2c7423e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DR_DOB" searchProperties="true"><con:settings/><con:testStep type="request" id="9471d7d9-804d-447e-9303-3adc1bb8c30c" name="ZWappGetPodInfo - DR_0910_GET_POD_INFO"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_POD_INFO</con:interface><con:operation>ZWappGetPodInfo</con:operation><con:request name="ZWappGetPodInfo - DR_0910_GET_POD_INFO" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="fd186831-e1b7-416f-a5be-2040f1e9f478"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_get_pod_info/100/zwapp_get_pod_info/zwapp_get_pod_info</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetPodInfo>
         <Pod>935536104011</Pod>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetPodInfo>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="0164683b-8935-4fe4-9847-9ba6f9b0f4e9" name="SOAP Response"/><con:credentials><con:username>EC_WS_V1</con:username><con:password>Ppcec0ntr!1</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POD_INFO/ZWappGetPodInfoRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="6d5816bd-3c0a-49ae-be13-e03c9997569d" name="ZWappGetVatFinancialData - DR_0910_GET_VAT_FINANCIAL_DATA"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_VAT_FINANCIAL_DATA</con:interface><con:operation>ZWappGetVatFinancialData</con:operation><con:request name="ZWappGetVatFinancialData - DR_0910_GET_VAT_FINANCIAL_DATA" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="79295158-aac8-41b3-aea3-4b429ab9183d"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_get_vat_financial_data/100/zwapp_get_vat_financial_data/zwapp_get_vat_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetVatFinancialData>
         <Afm>109750410</Afm>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetVatFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="7ab12561-61ef-44bf-9889-db0d976e1e70" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_VAT_FINANCIAL_DATA/ZWappGetVatFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="fb6e420f-6034-457c-a739-9910baa150d8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DR_LINAKIS" searchProperties="true"><con:settings/><con:testStep type="request" id="a5e01c0b-6b0e-42ef-b1eb-e2e69d7a917c" name="Q__ZWappBpContractDetails - DR_0910_BPCONTRACTDETAILS_V1" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_BP_CONTRACT_DETAILS</con:interface><con:operation>ZWappBpContractDetails</con:operation><con:request name="Q__ZWappBpContractDetails - DR_0910_BPCONTRACTDETAILS_V1" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="b67ed617-652d-4233-86b7-de65858a1f44"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcstg.dei.gr:6443/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>300002127743</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="72936d97-5a74-44d8-a25a-4fcf315bde3d" name="SOAP Response"/><con:credentials><con:username>webapp</con:username><con:password>asd234</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="def21b9e-dd2a-48a5-9058-f39efcc6dedf" name="ZWappBpContractDetails - DR_0910_BPCONTRACTDETAILS_V1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_BP_CONTRACT_DETAILS</con:interface><con:operation>ZWappBpContractDetails</con:operation><con:request name="ZWappBpContractDetails - DR_0910_BPCONTRACTDETAILS_V1" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="b67ed617-652d-4233-86b7-de65858a1f44"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>300002127743</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="72936d97-5a74-44d8-a25a-4fcf315bde3d" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="05cad6f5-4096-44c2-83b7-bba0f870f018" name="ZWappBpContractDetailsv2 - DR_0910_BP_CONTRACT_DETAILS_V2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_BP_CONTRACT_DETAILSV2</con:interface><con:operation>ZWappBpContractDetailsv2</con:operation><con:request name="ZWappBpContractDetailsv2 - DR_0910_BP_CONTRACT_DETAILS_V2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="4bc7b2ce-434a-48cd-984c-3fa5ec4c204d"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_bp_contract_detailsv2/100/zwapp_bp_contract_detailsv2/zwapp_bp_contract_detailsv2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappBpContractDetailsv2>
         <ContractAccount>300002164681</ContractAccount>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappBpContractDetailsv2>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="de6d4ba5-435b-499d-b4cd-57037b45bdbb" name="SOAP Response"/><con:credentials><con:username>WA_F_V1</con:username><con:password>Ppcw3bf0rms!</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILSV2/ZWappBpContractDetailsv2Request"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="69c560e4-db35-45a1-a6ba-3f5b66edb2ea" name="ZWappGetCaFinancialData - DR_GETCAFINANCIALDATA"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA</con:interface><con:operation>ZWappGetCaFinancialData</con:operation><con:request name="ZWappGetCaFinancialData - DR_GETCAFINANCIALDATA" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="f115d080-b890-4516-ab3f-80e3f3656e0d"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>300013245465</ContractAccount>
         <!--Optional:-->
         <Entries/>
         <!--Optional:-->
         <FromDate/>
         <!--Optional:-->
         <Page/>
         <!--Optional:-->
         <Source/>
         <!--Optional:-->
         <ToDate/>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="12198f10-0a46-4954-9c25-d3f30437e409" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="3fa1aabe-f5df-4748-b1a3-99cd758f8769" name="ZWappGetCaFinancialData2 - DR_0910_GETCAFINANCIALDATA2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA2</con:interface><con:operation>ZWappGetCaFinancialData2</con:operation><con:request name="ZWappGetCaFinancialData2 - DR_0910_GETCAFINANCIALDATA2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="58af5dd7-a40a-4215-b6fe-017e84250cd3"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data2/100/zwapp_get_ca_financial_data2/zwapp_get_ca_financial_data2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData2>
         <ContractAccount>
            <!--Zero or more repetitions:-->
            <item>300003505228</item>
         </ContractAccount>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetCaFinancialData2>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="824a0bd4-f8ca-404c-9419-775edb5418af" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA2/ZWappGetCaFinancialData2Request"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="5fd4128e-2176-4ce0-bc77-8bee2a276cd0" name="ZWappGetMeterginData - DR_0910_GET_METERING_DATA"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_METERGIN_DATA</con:interface><con:operation>ZWappGetMeterginData</con:operation><con:request name="ZWappGetMeterginData - DR_0910_GET_METERING_DATA" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="1ce1fc7d-34fc-4b43-baed-f2ffe046f79f"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_get_metergin_data/100/zwapp_get_metergin_data/zwapp_get_metergin_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetMeterginData>
         <ContractAccount>300002164681</ContractAccount>
         <!--Optional:-->
         <MrYears>10</MrYears>
         <!--Optional:-->
         <PCmrChecks/>
         <!--Optional:-->
         <Source/>
      </urn:ZWappGetMeterginData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="df36a196-8ba6-4b12-a620-6289c160b390" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_METERGIN_DATA/ZWappGetMeterginDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="b968b425-47eb-4c5c-83ad-bda6487f4b81" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DR_RECCOMMENDATION" searchProperties="true"><con:settings/><con:testStep type="request" id="44608fbd-e7e1-42d1-84e5-f245f2fe2b89" name="ZWappBpContractDetailsv2 - DR_0910_BP_CONTRACT_DETAILS_V2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_BP_CONTRACT_DETAILSV2</con:interface><con:operation>ZWappBpContractDetailsv2</con:operation><con:request name="ZWappBpContractDetailsv2 - DR_0910_BP_CONTRACT_DETAILS_V2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="cd418ead-ea6d-4921-9801-d58ebc802068"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_bp_contract_detailsv2/100/zwapp_bp_contract_detailsv2/zwapp_bp_contract_detailsv2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappBpContractDetailsv2>
         <ContractAccount>300002164681</ContractAccount>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappBpContractDetailsv2>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="eb6edae2-8ea6-410f-93e5-1836e231aa70" name="SOAP Response"/><con:credentials><con:username>WA_F_V1</con:username><con:password>Ppcw3bf0rms!</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILSV2/ZWappBpContractDetailsv2Request"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="bf4fc2db-5cf7-43ba-8999-6121b533985e" name="ZWappGetCaFinancialData - DR_GETCAFINANCIALDATA"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA</con:interface><con:operation>ZWappGetCaFinancialData</con:operation><con:request name="ZWappGetCaFinancialData - DR_GETCAFINANCIALDATA" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="20ce0f23-b80e-41e2-b500-b5c9d267326f"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>300013245465</ContractAccount>
         <!--Optional:-->
         <Entries/>
         <!--Optional:-->
         <FromDate/>
         <!--Optional:-->
         <Page/>
         <!--Optional:-->
         <Source/>
         <!--Optional:-->
         <ToDate/>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="f824287e-479b-46c7-abff-3f3546e201d7" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="950dbc77-c3dd-4129-b9a9-85b9db98a95e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DR_FORMES" searchProperties="true"><con:settings/><con:testStep type="request" id="7879a657-6621-4829-894e-45fc004b51e8" name="ZWappGetCountryTelCodes - DR_0910_GET_COUNTRY_TEL_CODES"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_COUNTRY_TEL_CODES</con:interface><con:operation>ZWappGetCountryTelCodes</con:operation><con:request name="ZWappGetCountryTelCodes - DR_0910_GET_COUNTRY_TEL_CODES" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="3b45b851-6a2f-4cd7-bd72-ec98a017c831"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_get_country_tel_codes/100/zwapp_get_country_tel_codes/zwapp_get_country_tel_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCountryTelCodes>
         <!--Optional:-->
         <Language>G</Language>
         <Source>MyAccount</Source>
      </urn:ZWappGetCountryTelCodes>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="dc4dbfae-b86c-46fc-a149-8d3ce96583b2" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_COUNTRY_TEL_CODES/ZWappGetCountryTelCodesRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="d9b93d61-fbce-4df6-8110-4cdde3ddf400" name="ZWappGetCaFinancialData - DR_GETCAFINANCIALDATA"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA</con:interface><con:operation>ZWappGetCaFinancialData</con:operation><con:request name="ZWappGetCaFinancialData - DR_GETCAFINANCIALDATA" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6e4df0de-a874-47cc-b923-d3d979a08244"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>300013245465</ContractAccount>
         <!--Optional:-->
         <Entries/>
         <!--Optional:-->
         <FromDate/>
         <!--Optional:-->
         <Page/>
         <!--Optional:-->
         <Source/>
         <!--Optional:-->
         <ToDate/>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="baf27cc9-a2ef-4776-8198-56f67588cdea" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="a15fde80-4cfc-4f06-908a-2780f0e61ea9" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DR_APS" searchProperties="true"><con:settings/><con:testStep type="request" id="19c3e4fe-b448-4c1e-8226-b284b4f72aa1" name="ZWappValidateApsRf - DR_0910_VALIDATE_RF_APS"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_VALIDATE_APS_RF</con:interface><con:operation>ZWappValidateApsRf</con:operation><con:request name="ZWappValidateApsRf - DR_0910_VALIDATE_RF_APS" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="e104e499-1d92-426e-9868-202a4eac4b1b"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_validate_aps_rf/100/zwapp_validate_aps_rf/zwapp_validate_aps_rf</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappValidateApsRf>\r
         <InitMode>1</InitMode>\r
         <RfCode>RF39907738000300002090038</RfCode>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappValidateApsRf>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="af8acca4-b148-49eb-91fe-ee57a1848de8" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_VALIDATE_APS_RF/ZWappValidateApsRfRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="b41b02b3-c419-45aa-8425-80cc4d98c322" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DR_ECARD" searchProperties="true"><con:settings/><con:testStep type="request" id="09ce1cc9-3e35-465c-a321-33b85ba3f499" name="ZWappGetMandateCardCa - Dispatcher 1 - C"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_MANDATE_CARD_CA</con:interface><con:operation>ZWappGetMandateCardCa</con:operation><con:request name="ZWappGetMandateCardCa - Dispatcher 1 - C" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="1c67a189-0121-4462-b573-d449140d743b"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_get_mandate_card_ca/100/zwapp_get_mandate_card_ca/zwapp_get_mandate_card_ca</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetMandateCardCa>
         <ContractAccount>300002164681</ContractAccount>
         <Source>?</Source>
      </urn:ZWappGetMandateCardCa>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="489ef2ca-0bc7-4d07-97ff-2f2dfadceff1" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_MANDATE_CARD_CA/ZWappGetMandateCardCaRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="8b94f799-56fb-4932-b160-05cc6b53695a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DR_DOB_CREDS" searchProperties="true"><con:settings/><con:testStep type="request" id="a0d9c657-2ab1-4fa8-8e4b-80d58b9173be" name="ZWappGetPodInfo - DR_0910_GET_POD_INFO"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_POD_INFO</con:interface><con:operation>ZWappGetPodInfo</con:operation><con:request name="ZWappGetPodInfo - DR_0910_GET_POD_INFO" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="fd186831-e1b7-416f-a5be-2040f1e9f478"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_get_pod_info/100/zwapp_get_pod_info/zwapp_get_pod_info</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetPodInfo>
         <Pod>935536104011</Pod>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetPodInfo>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="0164683b-8935-4fe4-9847-9ba6f9b0f4e9" name="SOAP Response"/><con:credentials><con:username>EC_WS_V1</con:username><con:password>Ppcec0ntr!1</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_POD_INFO/ZWappGetPodInfoRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="cef4d763-9523-45ed-a7d4-21d5ef9c468b" name="ZWappGetVatFinancialData - DR_0910_GET_VAT_FINANCIAL_DATA"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_VAT_FINANCIAL_DATA</con:interface><con:operation>ZWappGetVatFinancialData</con:operation><con:request name="ZWappGetVatFinancialData - DR_0910_GET_VAT_FINANCIAL_DATA" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="79295158-aac8-41b3-aea3-4b429ab9183d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_get_vat_financial_data/100/zwapp_get_vat_financial_data/zwapp_get_vat_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetVatFinancialData>
         <Afm>109750410</Afm>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetVatFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="7ab12561-61ef-44bf-9889-db0d976e1e70" name="SOAP Response"/><con:credentials><con:username>EC_WS_V1</con:username><con:password>Ppcec0ntr!1</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_VAT_FINANCIAL_DATA/ZWappGetVatFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="45c36543-dd0c-489f-91cc-6458e17bc22f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DR_LINAKIS_MYDEI_CREDS" searchProperties="true"><con:settings/><con:testStep type="request" id="275bc9c3-765d-40dd-84f1-e6e718970228" name="Q__ZWappBpContractDetails - DR_0910_BPCONTRACTDETAILS_V1" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_BP_CONTRACT_DETAILS</con:interface><con:operation>ZWappBpContractDetails</con:operation><con:request name="Q__ZWappBpContractDetails - DR_0910_BPCONTRACTDETAILS_V1" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="b67ed617-652d-4233-86b7-de65858a1f44"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcstg.dei.gr:6443/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>300002127743</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="72936d97-5a74-44d8-a25a-4fcf315bde3d" name="SOAP Response"/><con:credentials><con:username>webapp</con:username><con:password>asd234</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="139afc71-a51c-45ef-8027-185554689f01" name="ZWappBpContractDetails - DR_0910_BPCONTRACTDETAILS_V1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_BP_CONTRACT_DETAILS</con:interface><con:operation>ZWappBpContractDetails</con:operation><con:request name="ZWappBpContractDetails - DR_0910_BPCONTRACTDETAILS_V1" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="b67ed617-652d-4233-86b7-de65858a1f44"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_bp_contract_details/100/zwapp_bp_contract_details/zwapp_bp_contract_details</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetails>\r
         <ContractAccount>300002127743</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetails>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="72936d97-5a74-44d8-a25a-4fcf315bde3d" name="SOAP Response"/><con:credentials><con:username>WA_MA_V2</con:username><con:password>My@ccount2!</con:password><con:domain/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILS/ZWappBpContractDetailsRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="27b06832-17b9-471f-8632-e124fe305000" name="ZWappBpContractDetailsv2 - DR_0910_BP_CONTRACT_DETAILS_V2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_BP_CONTRACT_DETAILSV2</con:interface><con:operation>ZWappBpContractDetailsv2</con:operation><con:request name="ZWappBpContractDetailsv2 - DR_0910_BP_CONTRACT_DETAILS_V2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="4bc7b2ce-434a-48cd-984c-3fa5ec4c204d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_bp_contract_detailsv2/100/zwapp_bp_contract_detailsv2/zwapp_bp_contract_detailsv2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappBpContractDetailsv2>
         <ContractAccount>300002164681</ContractAccount>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappBpContractDetailsv2>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="de6d4ba5-435b-499d-b4cd-57037b45bdbb" name="SOAP Response"/><con:credentials><con:username>WA_MA_V2</con:username><con:password>My@ccount2!</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILSV2/ZWappBpContractDetailsv2Request"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="84d5ef9d-5d09-42d7-a761-a023e7a1e846" name="ZWappGetCaFinancialData - DR_GETCAFINANCIALDATA"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA</con:interface><con:operation>ZWappGetCaFinancialData</con:operation><con:request name="ZWappGetCaFinancialData - DR_GETCAFINANCIALDATA" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="f115d080-b890-4516-ab3f-80e3f3656e0d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>300013245465</ContractAccount>
         <!--Optional:-->
         <Entries/>
         <!--Optional:-->
         <FromDate/>
         <!--Optional:-->
         <Page/>
         <!--Optional:-->
         <Source/>
         <!--Optional:-->
         <ToDate/>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="12198f10-0a46-4954-9c25-d3f30437e409" name="SOAP Response"/><con:credentials><con:username>WA_MA_V2</con:username><con:password>My@ccount2!</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="b4c0d291-10ec-4203-8f3c-5bbaa1ec543f" name="ZWappGetCaFinancialData2 - DR_0910_GETCAFINANCIALDATA2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA2</con:interface><con:operation>ZWappGetCaFinancialData2</con:operation><con:request name="ZWappGetCaFinancialData2 - DR_0910_GETCAFINANCIALDATA2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="58af5dd7-a40a-4215-b6fe-017e84250cd3"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data2/100/zwapp_get_ca_financial_data2/zwapp_get_ca_financial_data2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData2>
         <ContractAccount>
            <!--Zero or more repetitions:-->
            <item>300003505228</item>
         </ContractAccount>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetCaFinancialData2>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="824a0bd4-f8ca-404c-9419-775edb5418af" name="SOAP Response"/><con:credentials><con:username>WA_MA_V2</con:username><con:password>My@ccount2!</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA2/ZWappGetCaFinancialData2Request"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="01b6c281-e5e1-41ec-ada7-97829ba680d0" name="ZWappGetMeterginData - DR_0910_GET_METERING_DATA"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_METERGIN_DATA</con:interface><con:operation>ZWappGetMeterginData</con:operation><con:request name="ZWappGetMeterginData - DR_0910_GET_METERING_DATA" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="1ce1fc7d-34fc-4b43-baed-f2ffe046f79f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_get_metergin_data/100/zwapp_get_metergin_data/zwapp_get_metergin_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetMeterginData>
         <ContractAccount>300002164681</ContractAccount>
         <!--Optional:-->
         <MrYears>10</MrYears>
         <!--Optional:-->
         <PCmrChecks/>
         <!--Optional:-->
         <Source/>
      </urn:ZWappGetMeterginData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="df36a196-8ba6-4b12-a620-6289c160b390" name="SOAP Response"/><con:credentials><con:username>WA_MA_V2</con:username><con:password>My@ccount2!</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_METERGIN_DATA/ZWappGetMeterginDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="8a4a4f6f-7218-4078-bc78-e9afd491103f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DR_RECCOMMENDATION_CREDS" searchProperties="true"><con:settings/><con:testStep type="request" id="bb81924e-bdee-48fe-9368-3be6fe54e9df" name="ZWappBpContractDetailsv2 - DR_0910_BP_CONTRACT_DETAILS_V2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_BP_CONTRACT_DETAILSV2</con:interface><con:operation>ZWappBpContractDetailsv2</con:operation><con:request name="ZWappBpContractDetailsv2 - DR_0910_BP_CONTRACT_DETAILS_V2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="cd418ead-ea6d-4921-9801-d58ebc802068"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_bp_contract_detailsv2/100/zwapp_bp_contract_detailsv2/zwapp_bp_contract_detailsv2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappBpContractDetailsv2>
         <ContractAccount>300002164681</ContractAccount>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappBpContractDetailsv2>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="eb6edae2-8ea6-410f-93e5-1836e231aa70" name="SOAP Response"/><con:credentials><con:username>WA_F_V1</con:username><con:password>Ppcw3bf0rms!</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILSV2/ZWappBpContractDetailsv2Request"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="38209da8-44ee-4e72-9fb8-ca1ae7b9fefc" name="ZWappGetCaFinancialData - DR_GETCAFINANCIALDATA"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA</con:interface><con:operation>ZWappGetCaFinancialData</con:operation><con:request name="ZWappGetCaFinancialData - DR_GETCAFINANCIALDATA" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="20ce0f23-b80e-41e2-b500-b5c9d267326f"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>300013245465</ContractAccount>
         <!--Optional:-->
         <Entries/>
         <!--Optional:-->
         <FromDate/>
         <!--Optional:-->
         <Page/>
         <!--Optional:-->
         <Source/>
         <!--Optional:-->
         <ToDate/>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="f824287e-479b-46c7-abff-3f3546e201d7" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="5235bea4-28c9-433a-b06d-6c4ef31012b8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DR_ECARD_CREDS" searchProperties="true"><con:settings/><con:testStep type="request" id="2abd6a55-f092-4a71-8211-c0a25e23dba3" name="ZWappGetMandateCardCa - Dispatcher 1 - C"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_MANDATE_CARD_CA</con:interface><con:operation>ZWappGetMandateCardCa</con:operation><con:request name="ZWappGetMandateCardCa - Dispatcher 1 - C" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="1c67a189-0121-4462-b573-d449140d743b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_get_mandate_card_ca/100/zwapp_get_mandate_card_ca/zwapp_get_mandate_card_ca</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetMandateCardCa>
         <ContractAccount>300002164681</ContractAccount>
         <Source>?</Source>
      </urn:ZWappGetMandateCardCa>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="489ef2ca-0bc7-4d07-97ff-2f2dfadceff1" name="SOAP Response"/><con:credentials><con:username>ECA_WS</con:username><con:password>Ec@rPPC1!</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_MANDATE_CARD_CA/ZWappGetMandateCardCaRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="723971a7-9db1-43b4-b2a1-779fbfe6ca8e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DR_APS_CREDS" searchProperties="true"><con:settings/><con:testStep type="request" id="1c2a729c-ce97-49fa-8b0d-ec148879dc08" name="ZWappValidateApsRf - DR_0910_VALIDATE_RF_APS"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_VALIDATE_APS_RF</con:interface><con:operation>ZWappValidateApsRf</con:operation><con:request name="ZWappValidateApsRf - DR_0910_VALIDATE_RF_APS" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="e104e499-1d92-426e-9868-202a4eac4b1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_validate_aps_rf/100/zwapp_validate_aps_rf/zwapp_validate_aps_rf</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappValidateApsRf>\r
         <InitMode>1</InitMode>\r
         <RfCode>RF39907738000300002090038</RfCode>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappValidateApsRf>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="af8acca4-b148-49eb-91fe-ee57a1848de8" name="SOAP Response"/><con:credentials><con:username>EC_D_V1</con:username><con:password>Ppc1ws@p1</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_VALIDATE_APS_RF/ZWappValidateApsRfRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="7d419ce0-114e-4646-a9a3-34589fae8af3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Copy of DR_FORMES" searchProperties="true"><con:settings/><con:testStep type="request" id="2d69283c-1d72-4c94-b0b2-ce6a61d18452" name="ZWappGetCountryTelCodes - DR_0910_GET_COUNTRY_TEL_CODES"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_COUNTRY_TEL_CODES</con:interface><con:operation>ZWappGetCountryTelCodes</con:operation><con:request name="ZWappGetCountryTelCodes - DR_0910_GET_COUNTRY_TEL_CODES" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="3b45b851-6a2f-4cd7-bd72-ec98a017c831"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_get_country_tel_codes/100/zwapp_get_country_tel_codes/zwapp_get_country_tel_codes</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCountryTelCodes>
         <!--Optional:-->
         <Language>G</Language>
         <Source>MyAccount</Source>
      </urn:ZWappGetCountryTelCodes>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="dc4dbfae-b86c-46fc-a149-8d3ce96583b2" name="SOAP Response"/><con:credentials><con:username>WA_F_V1</con:username><con:password>Ppcw3bf0rms!</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_COUNTRY_TEL_CODES/ZWappGetCountryTelCodesRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="e5b91381-d8c5-429d-8895-9bb6acb090cb" name="ZWappGetCaFinancialData - DR_GETCAFINANCIALDATA"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA</con:interface><con:operation>ZWappGetCaFinancialData</con:operation><con:request name="ZWappGetCaFinancialData - DR_GETCAFINANCIALDATA" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6e4df0de-a874-47cc-b923-d3d979a08244"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>300013245465</ContractAccount>
         <!--Optional:-->
         <Entries/>
         <!--Optional:-->
         <FromDate/>
         <!--Optional:-->
         <Page/>
         <!--Optional:-->
         <Source/>
         <!--Optional:-->
         <ToDate/>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="baf27cc9-a2ef-4776-8198-56f67588cdea" name="SOAP Response"/><con:credentials><con:username>WA_F_V1</con:username><con:password>Ppcw3bf0rms!</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="016911b0-6903-4d90-87d5-5e3b02f94e63" name="MYACCOUNT"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="876d7658-7190-43f4-a3d1-aa3d1795f220" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZMY_AZURE_ZWAPP_GETMETERINGDATA_FR" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="845ca155-4fd1-459e-9802-69f17a51e748"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value>300004838210</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="732eebd1-5d54-4785-bb35-dd9f0f14b030"><con:settings/><con:config><script>import groovy.util.*
import groovy.transform.Synchronized
import com.eviware.soapui.support.GroovyUtils

def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

//def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getmeteringdata.txt"
//def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + "ZREDO" ;
//log.info(filepath)
//log.info(output_fp)


def basepath = new GroovyUtils(context).projectPath
log.info("Projdir:" + basepath)
def filepath = basepath + "\\meter_1.txt"
def output_fp = basepath + "\\" + testRunner.testCase.getName() +"_test"+ 'ZMY1'
log.info(filepath)
log.info(output_fp)

//testRunner.cancel(" Stopping...")
//return






// Open output file
def ot_file = new File(output_fp)
//if (ot_file.exists()){
//	log.info("File: " + output_fp + " already exists. Overwriting..")
//	ot_file.delete()
//}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()


class WriterClass{

	@Synchronized
	void  async_write(String string_in, File outputfile){
		outputfile.append(string_in)
}
	
}

log.info("Test")
writer1 = new WriterClass()


for (int i = 0; i &lt; count; i++)
{
	try
	{
	
	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("zwappgetmeteringdata")
	log.info("Time taken: " + testRunner.testCase.testSteps["zwappgetmeteringdata"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["zwappgetmeteringdata"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["zwappgetmeteringdata"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["zwappgetmeteringdata"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["zwappgetmeteringdata"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["zwappgetmeteringdata"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	//ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)


	String output_str = System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode
	writer1.async_write(output_str, ot_file)

	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})

	}
	catch (Exception exp)
	{
		log.info("Error during execution")
	}

}
</script></con:config></con:testStep><con:testStep type="request" id="7ea0342d-0779-4f8b-9bb7-ad9fe031a6f2" name="zwappgetmeteringdata"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_METERGIN_DATA</con:interface><con:operation>ZWappGetMeterginData</con:operation><con:request name="zwappgetmeteringdata" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="e833d381-16bd-4b19-9313-58df1043ba93"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_get_metergin_data/100/zwapp_get_metergin_data/zwapp_get_metergin_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetMeterginData>
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>
         <!--Optional:-->
         <MrYears>2</MrYears>
         <!--Optional:-->
         <PCmrChecks>X</PCmrChecks>
         <!--Optional:-->
         <Source/>
      </urn:ZWappGetMeterginData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="89d4caff-a7f7-4b8e-9924-fc6733d4fc21" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_METERGIN_DATA/ZWappGetMeterginDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="0775429a-6e19-48a0-927f-54170b986861" name="LoadTest 1"><con:settings/><con:threadCount>100</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>500</testDelay><randomFactor>0.5</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="fba15e85-e2bf-44f5-bc4d-dc7e8afbc4a1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZMY_AZURE_ZWAPP_GETMETERINGDATA_FR_NIGHT" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="bcedec13-786f-4482-9c97-4a2f975bbd66"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value>300004838210</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="38ae02d4-a85f-4d79-b1ed-1e8f02b12bdc"><con:settings/><con:config><script>import groovy.util.*
import groovy.transform.Synchronized
import com.eviware.soapui.support.GroovyUtils

def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

//def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getmeteringdata.txt"
//def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + "ZREDO" ;
//log.info(filepath)
//log.info(output_fp)


def basepath = new GroovyUtils(context).projectPath
log.info("Projdir:" + basepath)
def filepath = basepath + "\\meter_1.txt"
def output_fp = basepath + "\\" + testRunner.testCase.getName() +"_test"+ 'ZMY1'
log.info(filepath)
log.info(output_fp)

//testRunner.cancel(" Stopping...")
//return






// Open output file
def ot_file = new File(output_fp)
//if (ot_file.exists()){
//	log.info("File: " + output_fp + " already exists. Overwriting..")
//	ot_file.delete()
//}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()


class WriterClass{

	@Synchronized
	void  async_write(String string_in, File outputfile){
		outputfile.append(string_in)
}
	
}

log.info("Test")
writer1 = new WriterClass()


for (int i = 0; i &lt; count; i++)
{
	try
	{
	
	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("zwappgetmeteringdata")
	log.info("Time taken: " + testRunner.testCase.testSteps["zwappgetmeteringdata"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["zwappgetmeteringdata"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["zwappgetmeteringdata"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["zwappgetmeteringdata"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["zwappgetmeteringdata"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["zwappgetmeteringdata"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	//ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)


	String output_str = System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode
	writer1.async_write(output_str, ot_file)

	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})

	}
	catch (Exception exp)
	{
		log.info("Error during execution")
	}

}
</script></con:config></con:testStep><con:testStep type="request" id="2dcd5fb1-52ae-465e-9554-10fde9ada58e" name="zwappgetmeteringdata"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_METERGIN_DATA</con:interface><con:operation>ZWappGetMeterginData</con:operation><con:request name="zwappgetmeteringdata" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="e833d381-16bd-4b19-9313-58df1043ba93"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_get_metergin_data/100/zwapp_get_metergin_data/zwapp_get_metergin_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetMeterginData>
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>
         <!--Optional:-->
         <MrYears>2</MrYears>
         <!--Optional:-->
         <PCmrChecks>X</PCmrChecks>
         <!--Optional:-->
         <Source/>
      </urn:ZWappGetMeterginData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="89d4caff-a7f7-4b8e-9924-fc6733d4fc21" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_METERGIN_DATA/ZWappGetMeterginDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="59b6e812-d484-4282-bc65-b960cd9135a8" name="LoadTest 1"><con:settings/><con:threadCount>100</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>500</testDelay><randomFactor>0.5</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="b15b888e-b653-4ff0-ae99-b08ba94782fe" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZMY_AZURE_ZWAPP_GETCAFINANCIAL_DATA_FR_KOFTIS" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="a8c5ff6a-feab-40ff-b15c-a63db9bd064d"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value>300004838210</con:value></con:property><con:property><con:name>Entries</con:name><con:value/></con:property><con:property><con:name>Page</con:name><con:value/></con:property><con:property><con:name>FromDate</con:name><con:value/></con:property><con:property><con:name>ToDate</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="885e6ff2-655b-47d7-a963-d35b0c37abac"><con:settings/><con:config><script>import groovy.util.*
import groovy.transform.Synchronized
import com.eviware.soapui.support.GroovyUtils

def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

//def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\cafidata.txt"
//def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" +"ZREDO" ;
//log.info(filepath)
//log.info(output_fp)

def basepath = new GroovyUtils(context).projectPath
log.info("Projdir:" + basepath)
def filepath = basepath + "\\ca_1.txt"
def output_fp = basepath + "\\" + testRunner.testCase.getName() +"_test"+ 'ZMY1'
log.info(filepath)
log.info(output_fp)


//testRunner.cancel(" Stopping...")
//return







// Open output file
def ot_file = new File(output_fp)
//if (ot_file.exists()){
//	log.info("File: " + output_fp + " already exists. Overwriting..")
//	ot_file.delete()
//}




context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

class WriterClass{

	@Synchronized
	void  async_write(String string_in, File outputfile){
		outputfile.append(string_in)
}
	
}

log.info("Test")
writer1 = new WriterClass()



for (int i = 0; i &lt; count; i++)
{

	try
	{


	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappGetCaFinancialDataPollaplos")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 
	
	time_taken =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	//ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)

	String output_str = System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode
	writer1.async_write(output_str, ot_file)

	}
	catch (Exception exp)
	{
		log.info("Error during the execution.")
	}
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="88770d7e-9012-464a-b2f9-09e1b11652ae" name="ZWappGetCaFinancialDataPollaplos"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA</con:interface><con:operation>ZWappGetCaFinancialData</con:operation><con:request name="ZWappGetCaFinancialDataPollaplos" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6d66fec7-4abc-4598-bfbd-d62b2f533e41"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>
         <!--Optional:-->
         <Entries/>
         <!--Optional:-->
         <FromDate>2020-10-26</FromDate>
         <!--Optional:-->
         <Page/>
         <!--Optional:-->
         <Source/>
         <!--Optional:-->
         <ToDate>2022-10-26</ToDate>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d75bd73a-7226-4ecb-a00d-d2c83ba92ba8" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="297e51e8-9c0f-4998-a5f1-daeba10d0ad7" name="LoadTest 1"><con:settings/><con:threadCount>100</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>500</testDelay><randomFactor>0.5</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="5cbe040b-ef98-4efc-8739-f3b028b76248" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZMY_AZURE_ZWAPP_GETCAFINANCIAL_DATA_FR_KOFTIS_NIGHT" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="039b37bf-3277-49b5-ae93-83d6b1f99b06"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value>300004838210</con:value></con:property><con:property><con:name>Entries</con:name><con:value/></con:property><con:property><con:name>Page</con:name><con:value/></con:property><con:property><con:name>FromDate</con:name><con:value/></con:property><con:property><con:name>ToDate</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="ee5b627d-be7c-4f44-8074-64b474154f0d"><con:settings/><con:config><script>import groovy.util.*
import groovy.transform.Synchronized
import com.eviware.soapui.support.GroovyUtils

def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

//def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\cafidata.txt"
//def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" +"ZREDO" ;
//log.info(filepath)
//log.info(output_fp)

def basepath = new GroovyUtils(context).projectPath
log.info("Projdir:" + basepath)
def filepath = basepath + "\\ca_1.txt"
def output_fp = basepath + "\\" + testRunner.testCase.getName() +"_test"+ 'ZMY1'
log.info(filepath)
log.info(output_fp)


//testRunner.cancel(" Stopping...")
//return







// Open output file
def ot_file = new File(output_fp)
//if (ot_file.exists()){
//	log.info("File: " + output_fp + " already exists. Overwriting..")
//	ot_file.delete()
//}




context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()

class WriterClass{

	@Synchronized
	void  async_write(String string_in, File outputfile){
		outputfile.append(string_in)
}
	
}

log.info("Test")
writer1 = new WriterClass()



for (int i = 0; i &lt; count; i++)
{

	try
	{


	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappGetCaFinancialDataPollaplos")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 
	
	time_taken =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	//ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)

	String output_str = System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode
	writer1.async_write(output_str, ot_file)

	}
	catch (Exception exp)
	{
		log.info("Error during the execution.")
	}
	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})
}
</script></con:config></con:testStep><con:testStep type="request" id="bfc6b19b-992e-46df-a6f5-b03c2a4d8d31" name="ZWappGetCaFinancialDataPollaplos"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA</con:interface><con:operation>ZWappGetCaFinancialData</con:operation><con:request name="ZWappGetCaFinancialDataPollaplos" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6d66fec7-4abc-4598-bfbd-d62b2f533e41"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data/100/zwapp_get_ca_financial_data/zwapp_get_ca_financial_data</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData>
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>
         <!--Optional:-->
         <Entries/>
         <!--Optional:-->
         <FromDate>2020-10-26</FromDate>
         <!--Optional:-->
         <Page/>
         <!--Optional:-->
         <Source/>
         <!--Optional:-->
         <ToDate>2022-10-26</ToDate>
      </urn:ZWappGetCaFinancialData>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d75bd73a-7226-4ecb-a00d-d2c83ba92ba8" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA/ZWappGetCaFinancialDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="46d4e29f-84a0-44a3-9a79-d72d5bad9d99" name="LoadTest 1"><con:settings/><con:threadCount>100</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>500</testDelay><randomFactor>0.5</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="6454d204-baea-4f74-a9f9-44e4ca5a334f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZMY_AZURE_ZWAPP_GETCAFINANCIALDATA2_1" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="58fad9a8-3b5a-4251-a061-342b91a9d82e"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value>300004838210</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="d30ac7b4-dd21-4423-af52-65f2dfc1c29d"><con:settings/><con:config><script>import groovy.util.*
import groovy.transform.Synchronized
import com.eviware.soapui.support.GroovyUtils

def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

//def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getmeteringdata.txt"
//def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + "ZREDO" ;
//log.info(filepath)
//log.info(output_fp)


def basepath = new GroovyUtils(context).projectPath
log.info("Projdir:" + basepath)
def filepath = basepath + "\\ca2_1.txt"
def output_fp = basepath + "\\" + testRunner.testCase.getName() +"_test"+ 'MY_1_1'
log.info(filepath)
log.info(output_fp)

//testRunner.cancel(" Stopping...")
//return






// Open output file
def ot_file = new File(output_fp)
//if (ot_file.exists()){
//	log.info("File: " + output_fp + " already exists. Overwriting..")
//	ot_file.delete()
//}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()


class WriterClass{

	@Synchronized
	void  async_write(String string_in, File outputfile){
		outputfile.append(string_in)
}
	
}

log.info("Test")
writer1 = new WriterClass()

String ws = "ZWappGetCaFinancialData2";

for (int i = 0; i &lt; count; i++)
{
	try
	{
	
	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappGetCaFinancialData2")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	//ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)


	String output_str = System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode
	writer1.async_write(output_str, ot_file)

	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})

	}
	catch (Exception exp)
	{
		log.info("Error during execution")
	}

}
</script></con:config></con:testStep><con:testStep type="request" id="583cdfe6-380e-4c17-82a4-a6d3edc81b79" name="ZWappGetCaFinancialData2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA2</con:interface><con:operation>ZWappGetCaFinancialData2</con:operation><con:request name="ZWappGetCaFinancialData2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="135707e4-f7c5-4a42-957e-525fa0faaf58"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data2/100/zwapp_get_ca_financial_data2/zwapp_get_ca_financial_data2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData2>
         <ContractAccount>
            <!--Zero or more repetitions:-->
            <item>${Properties#ContractAccount}</item>
         </ContractAccount>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetCaFinancialData2>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="f27f4149-394f-4e40-ab4d-f475a356821b" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA2/ZWappGetCaFinancialData2Request"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="801d1091-0f67-4e3c-8806-5b8ab6253461" name="LoadTest 1"><con:settings/><con:threadCount>100</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>500</testDelay><randomFactor>0.5</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="9bfa777b-bb8d-4315-b997-d1ef60db00a4" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZMY_AZURE_ZWAPP_GETCAFINANCIALDATA2_1_NIGHT" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="95c670ac-5e90-4c8d-bfb4-e2f5bd9674b8"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value>300004838210</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="0ccd0e90-d5e7-4af5-8b6b-1a1d50246e67"><con:settings/><con:config><script>import groovy.util.*
import groovy.transform.Synchronized
import com.eviware.soapui.support.GroovyUtils

def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

//def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getmeteringdata.txt"
//def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + "ZREDO" ;
//log.info(filepath)
//log.info(output_fp)


def basepath = new GroovyUtils(context).projectPath
log.info("Projdir:" + basepath)
def filepath = basepath + "\\ca2_1.txt"
def output_fp = basepath + "\\" + testRunner.testCase.getName() +"_test"+ 'MY_1_1'
log.info(filepath)
log.info(output_fp)

//testRunner.cancel(" Stopping...")
//return






// Open output file
def ot_file = new File(output_fp)
//if (ot_file.exists()){
//	log.info("File: " + output_fp + " already exists. Overwriting..")
//	ot_file.delete()
//}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()


class WriterClass{

	@Synchronized
	void  async_write(String string_in, File outputfile){
		outputfile.append(string_in)
}
	
}

log.info("Test")
writer1 = new WriterClass()

String ws = "ZWappGetCaFinancialData2";

for (int i = 0; i &lt; count; i++)
{
	try
	{
	
	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappGetCaFinancialData2")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	//ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)


	String output_str = System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode
	writer1.async_write(output_str, ot_file)

	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})

	}
	catch (Exception exp)
	{
		log.info("Error during execution")
	}

}
</script></con:config></con:testStep><con:testStep type="request" id="52f2d2ee-7f9a-4b7e-94fa-0d7c809ee06a" name="ZWappGetCaFinancialData2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA2</con:interface><con:operation>ZWappGetCaFinancialData2</con:operation><con:request name="ZWappGetCaFinancialData2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="135707e4-f7c5-4a42-957e-525fa0faaf58"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data2/100/zwapp_get_ca_financial_data2/zwapp_get_ca_financial_data2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData2>
         <ContractAccount>
            <!--Zero or more repetitions:-->
            <item>${Properties#ContractAccount}</item>
         </ContractAccount>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetCaFinancialData2>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="f27f4149-394f-4e40-ab4d-f475a356821b" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA2/ZWappGetCaFinancialData2Request"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="1d42df0d-e946-4674-b3bd-89e96ab68cc9" name="LoadTest 1"><con:settings/><con:threadCount>100</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>500</testDelay><randomFactor>0.5</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="3c831ebd-4316-445c-8883-8bf830f635c1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZMY_AZURE_ZWAPP_GETCAFINANCIALDATA2_3" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="f82bf38e-8f0b-487e-ad00-8ce9ffe44576"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value>300004838210</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="de77c5c3-3999-43eb-ae17-ed6deef427f0"><con:settings/><con:config><script>import groovy.util.*
import groovy.transform.Synchronized
import com.eviware.soapui.support.GroovyUtils

def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

//def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getmeteringdata.txt"
//def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + "ZREDO" ;
//log.info(filepath)
//log.info(output_fp)


def basepath = new GroovyUtils(context).projectPath
log.info("Projdir:" + basepath)
def filepath = basepath + "\\ca2_1.txt"
def output_fp = basepath + "\\" + testRunner.testCase.getName() +"_test"+ 'MY_3_1'
log.info(filepath)
log.info(output_fp)

//testRunner.cancel(" Stopping...")
//return






// Open output file
def ot_file = new File(output_fp)
//if (ot_file.exists()){
//	log.info("File: " + output_fp + " already exists. Overwriting..")
//	ot_file.delete()
//}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()


class WriterClass{

	@Synchronized
	void  async_write(String string_in, File outputfile){
		outputfile.append(string_in)
}
	
}

log.info("Test")
writer1 = new WriterClass()

String ws = "ZWappGetCaFinancialData2";

for (int i = 0; i &lt; count; i++)
{
	try
	{
	
	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappGetCaFinancialData2")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	//ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)


	String output_str = System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode
	writer1.async_write(output_str, ot_file)

	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})

	}
	catch (Exception exp)
	{
		log.info("Error during execution")
	}

}
</script></con:config></con:testStep><con:testStep type="request" id="4883b5a2-e574-40f6-9bb3-e5089ee19bab" name="ZWappGetCaFinancialData2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA2</con:interface><con:operation>ZWappGetCaFinancialData2</con:operation><con:request name="ZWappGetCaFinancialData2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="135707e4-f7c5-4a42-957e-525fa0faaf58"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data2/100/zwapp_get_ca_financial_data2/zwapp_get_ca_financial_data2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData2>
         <ContractAccount>
            <!--Zero or more repetitions:-->
            <item>${Properties#ContractAccount}</item>
         </ContractAccount>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetCaFinancialData2>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="f27f4149-394f-4e40-ab4d-f475a356821b" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA2/ZWappGetCaFinancialData2Request"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="467af603-0215-4610-9ad1-52f6000fb7c0" name="LoadTest 1"><con:settings/><con:threadCount>100</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>500</testDelay><randomFactor>0.5</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="7daac4c0-b643-4fce-b63a-faa5d2ed7fe3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZMY_AZURE_ZWAPP_GETCAFINANCIALDATA2_3_NIGHT" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="ae669d77-96ab-4dc4-b25e-28a0caa7dee7"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value>300004838210</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="dc931803-d1a6-405e-89a6-76883e77b5c2"><con:settings/><con:config><script>import groovy.util.*
import groovy.transform.Synchronized
import com.eviware.soapui.support.GroovyUtils

def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

//def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getmeteringdata.txt"
//def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + "ZREDO" ;
//log.info(filepath)
//log.info(output_fp)


def basepath = new GroovyUtils(context).projectPath
log.info("Projdir:" + basepath)
def filepath = basepath + "\\ca2_1.txt"
def output_fp = basepath + "\\" + testRunner.testCase.getName() +"_test"+ 'MY_3_1'
log.info(filepath)
log.info(output_fp)

//testRunner.cancel(" Stopping...")
//return






// Open output file
def ot_file = new File(output_fp)
//if (ot_file.exists()){
//	log.info("File: " + output_fp + " already exists. Overwriting..")
//	ot_file.delete()
//}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()


class WriterClass{

	@Synchronized
	void  async_write(String string_in, File outputfile){
		outputfile.append(string_in)
}
	
}

log.info("Test")
writer1 = new WriterClass()

String ws = "ZWappGetCaFinancialData2";

for (int i = 0; i &lt; count; i++)
{
	try
	{
	
	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappGetCaFinancialData2")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	//ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)


	String output_str = System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode
	writer1.async_write(output_str, ot_file)

	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})

	}
	catch (Exception exp)
	{
		log.info("Error during execution")
	}

}
</script></con:config></con:testStep><con:testStep type="request" id="f53c32b0-0e50-4a50-b017-4b4e4b46a021" name="ZWappGetCaFinancialData2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA2</con:interface><con:operation>ZWappGetCaFinancialData2</con:operation><con:request name="ZWappGetCaFinancialData2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="135707e4-f7c5-4a42-957e-525fa0faaf58"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data2/100/zwapp_get_ca_financial_data2/zwapp_get_ca_financial_data2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData2>
         <ContractAccount>
            <!--Zero or more repetitions:-->
            <item>${Properties#ContractAccount}</item>
         </ContractAccount>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetCaFinancialData2>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="f27f4149-394f-4e40-ab4d-f475a356821b" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA2/ZWappGetCaFinancialData2Request"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="2b802d59-97cb-457d-bd21-ad2a3b40f947" name="LoadTest 1"><con:settings/><con:threadCount>100</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>500</testDelay><randomFactor>0.5</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="3decf5bd-62ee-479c-bd57-1d7c6cc3e2b5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZMY_AZURE_ZWAPP_GETCAFINANCIALDATA2_6" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="ad0d8850-a216-478e-8098-6a02a1745589"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value>300002732521</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="e2f9d3b8-d955-427d-aa61-f1e36551eec9"><con:settings/><con:config><script>import groovy.util.*
import groovy.transform.Synchronized
import com.eviware.soapui.support.GroovyUtils

def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

//def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getmeteringdata.txt"
//def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + "ZREDO" ;
//log.info(filepath)
//log.info(output_fp)


def basepath = new GroovyUtils(context).projectPath
log.info("Projdir:" + basepath)
def filepath = basepath + "\\ca2_1.txt"
def output_fp = basepath + "\\" + testRunner.testCase.getName() +"_test"+ 'MY_6_1'
log.info(filepath)
log.info(output_fp)

//testRunner.cancel(" Stopping...")
//return






// Open output file
def ot_file = new File(output_fp)
//if (ot_file.exists()){
//	log.info("File: " + output_fp + " already exists. Overwriting..")
//	ot_file.delete()
//}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()


class WriterClass{

	@Synchronized
	void  async_write(String string_in, File outputfile){
		outputfile.append(string_in)
}
	
}

log.info("Test")
writer1 = new WriterClass()

String ws = "ZWappGetCaFinancialData2";

for (int i = 0; i &lt; count; i++)
{
	try
	{
	
	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappGetCaFinancialData2")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	//ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)


	String output_str = System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode
	writer1.async_write(output_str, ot_file)

	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})

	}
	catch (Exception exp)
	{
		log.info("Error during execution")
	}

}
</script></con:config></con:testStep><con:testStep type="request" id="89ace9cf-0cb0-44b0-87dc-abeafa640729" name="ZWappGetCaFinancialData2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA2</con:interface><con:operation>ZWappGetCaFinancialData2</con:operation><con:request name="ZWappGetCaFinancialData2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="135707e4-f7c5-4a42-957e-525fa0faaf58"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data2/100/zwapp_get_ca_financial_data2/zwapp_get_ca_financial_data2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData2>
         <ContractAccount>
            <!--Zero or more repetitions:-->
            <item>${Properties#ContractAccount}</item>
         </ContractAccount>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetCaFinancialData2>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="f27f4149-394f-4e40-ab4d-f475a356821b" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA2/ZWappGetCaFinancialData2Request"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="869e5dc2-b5f1-455b-8f53-95a482ecdee3" name="LoadTest 1"><con:settings/><con:threadCount>100</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>500</testDelay><randomFactor>0.5</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="b7c852b6-9c5f-4b75-9b8e-9371451607a7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZMY_AZURE_ZWAPP_GETCAFINANCIALDATA2_6_NIGHT" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="39481bb4-00f7-4e88-a967-348c07414cbe"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value>300002732521</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="9b35f243-bbf8-4d04-8161-a3e9a0d20d54"><con:settings/><con:config><script>import groovy.util.*
import groovy.transform.Synchronized
import com.eviware.soapui.support.GroovyUtils

def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

//def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getmeteringdata.txt"
//def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + "ZREDO" ;
//log.info(filepath)
//log.info(output_fp)


def basepath = new GroovyUtils(context).projectPath
log.info("Projdir:" + basepath)
def filepath = basepath + "\\ca2_1.txt"
def output_fp = basepath + "\\" + testRunner.testCase.getName() +"_test"+ 'MY_6_1'
log.info(filepath)
log.info(output_fp)

//testRunner.cancel(" Stopping...")
//return






// Open output file
def ot_file = new File(output_fp)
//if (ot_file.exists()){
//	log.info("File: " + output_fp + " already exists. Overwriting..")
//	ot_file.delete()
//}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()


class WriterClass{

	@Synchronized
	void  async_write(String string_in, File outputfile){
		outputfile.append(string_in)
}
	
}

log.info("Test")
writer1 = new WriterClass()

String ws = "ZWappGetCaFinancialData2";

for (int i = 0; i &lt; count; i++)
{
	try
	{
	
	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName("ZWappGetCaFinancialData2")
	log.info("Time taken: " + testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps["ZWappGetCaFinancialData2"].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	//ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)


	String output_str = System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode
	writer1.async_write(output_str, ot_file)

	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})

	}
	catch (Exception exp)
	{
		log.info("Error during execution")
	}

}
</script></con:config></con:testStep><con:testStep type="request" id="349488e6-f9cc-48fe-85b3-36f71b7d9fad" name="ZWappGetCaFinancialData2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_CA_FINANCIAL_DATA2</con:interface><con:operation>ZWappGetCaFinancialData2</con:operation><con:request name="ZWappGetCaFinancialData2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="135707e4-f7c5-4a42-957e-525fa0faaf58"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_get_ca_financial_data2/100/zwapp_get_ca_financial_data2/zwapp_get_ca_financial_data2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetCaFinancialData2>
         <ContractAccount>
            <!--Zero or more repetitions:-->
            <item>${Properties#ContractAccount}</item>
         </ContractAccount>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappGetCaFinancialData2>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="f27f4149-394f-4e40-ab4d-f475a356821b" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_CA_FINANCIAL_DATA2/ZWappGetCaFinancialData2Request"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="d781b816-d5c0-4dda-a67c-1c5fd87e222e" name="LoadTest 1"><con:settings/><con:threadCount>100</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>500</testDelay><randomFactor>0.5</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="35607afd-d273-4f6f-838d-c6a61add681e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZMY_BP_CONTRACT_DETAILS_v2" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="b952e9b7-1a14-4626-ba52-773fae96c4bc"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value>300004838210</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="17220f44-d210-48c9-8175-388c33c8883e"><con:settings/><con:config><script>import groovy.util.*
import groovy.transform.Synchronized
import com.eviware.soapui.support.GroovyUtils

def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

//def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getmeteringdata.txt"
//def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + "ZREDO" ;
//log.info(filepath)
//log.info(output_fp)


def basepath = new GroovyUtils(context).projectPath
log.info("Projdir:" + basepath)
def filepath = basepath + "\\getbp_1.txt"
def output_fp = basepath + "\\" + testRunner.testCase.getName() +"_test"+ 'MY_1'
log.info(filepath)
log.info(output_fp)

//testRunner.cancel(" Stopping...")
//return




String ws = "ZWappBpContractDetailsv2";

// Open output file
def ot_file = new File(output_fp)
//if (ot_file.exists()){
//	log.info("File: " + output_fp + " already exists. Overwriting..")
//	ot_file.delete()
//}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()


class WriterClass{

	@Synchronized
	void  async_write(String string_in, File outputfile){
		outputfile.append(string_in)
}
	
}

log.info("Test")
writer1 = new WriterClass()


for (int i = 0; i &lt; count; i++)
{
	try
	{
	
	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName(ws)
	log.info("Time taken: " + testRunner.testCase.testSteps[ws].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps[ws].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps[ws].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps[ws].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps[ws].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps[ws].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	//ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)


	String output_str = System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode
	writer1.async_write(output_str, ot_file)

	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})

	}
	catch (Exception exp)
	{
		log.info("Error during execution")
	}

}
</script></con:config></con:testStep><con:testStep type="request" id="7fd96f36-bff4-4e34-802e-21e03bfe3fd5" name="ZWappBpContractDetailsv2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_BP_CONTRACT_DETAILSV2</con:interface><con:operation>ZWappBpContractDetailsv2</con:operation><con:request name="ZWappBpContractDetailsv2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="7bff6912-04f9-4de5-a7bf-ad3dd020ec8e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_bp_contract_detailsv2/100/zwapp_bp_contract_detailsv2/zwapp_bp_contract_detailsv2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappBpContractDetailsv2>
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappBpContractDetailsv2>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="11d122fc-cd74-41c2-ae8c-0ec9482928d7" name="SOAP Response"/><con:credentials><con:username>WA_F_V1</con:username><con:password>Ppcw3bf0rms!</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILSV2/ZWappBpContractDetailsv2Request"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="c2a2b368-7efd-4437-87c7-54c97725b115" name="LoadTest 1"><con:settings/><con:threadCount>100</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>500</testDelay><randomFactor>0.5</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="cec1916d-aeb4-4464-b95c-9f1b66a14b85" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZMY_BP_CONTRACT_DETAILS_v2_NIGHT" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="28e62a10-208f-4c22-bfd7-8a3ae5dd532f"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value>300004838210</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="ef1755ad-7d40-445b-99a1-7676fa24e951"><con:settings/><con:config><script>import groovy.util.*
import groovy.transform.Synchronized
import com.eviware.soapui.support.GroovyUtils

def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

//def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getmeteringdata.txt"
//def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + "ZREDO" ;
//log.info(filepath)
//log.info(output_fp)


def basepath = new GroovyUtils(context).projectPath
log.info("Projdir:" + basepath)
def filepath = basepath + "\\getbp_1.txt"
def output_fp = basepath + "\\" + testRunner.testCase.getName() +"_test"+ 'MY_1'
log.info(filepath)
log.info(output_fp)

//testRunner.cancel(" Stopping...")
//return




String ws = "ZWappBpContractDetailsv2";

// Open output file
def ot_file = new File(output_fp)
//if (ot_file.exists()){
//	log.info("File: " + output_fp + " already exists. Overwriting..")
//	ot_file.delete()
//}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()


class WriterClass{

	@Synchronized
	void  async_write(String string_in, File outputfile){
		outputfile.append(string_in)
}
	
}

log.info("Test")
writer1 = new WriterClass()


for (int i = 0; i &lt; count; i++)
{
	try
	{
	
	row = rows[i]
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName(ws)
	log.info("Time taken: " + testRunner.testCase.testSteps[ws].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps[ws].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps[ws].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps[ws].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps[ws].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps[ws].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	//ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)


	String output_str = System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode
	writer1.async_write(output_str, ot_file)

	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})

	}
	catch (Exception exp)
	{
		log.info("Error during execution")
	}

}
</script></con:config></con:testStep><con:testStep type="request" id="7cb30121-e0f6-4378-882b-be7af68f7dee" name="ZWappBpContractDetailsv2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_BP_CONTRACT_DETAILSV2</con:interface><con:operation>ZWappBpContractDetailsv2</con:operation><con:request name="ZWappBpContractDetailsv2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="7bff6912-04f9-4de5-a7bf-ad3dd020ec8e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_bp_contract_detailsv2/100/zwapp_bp_contract_detailsv2/zwapp_bp_contract_detailsv2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappBpContractDetailsv2>
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>
         <!--Optional:-->
         <Source>?</Source>
      </urn:ZWappBpContractDetailsv2>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="11d122fc-cd74-41c2-ae8c-0ec9482928d7" name="SOAP Response"/><con:credentials><con:username>WA_F_V1</con:username><con:password>Ppcw3bf0rms!</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILSV2/ZWappBpContractDetailsv2Request"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="08181fa8-f730-4b82-b93a-349caec9ba8e" name="LoadTest 1"><con:settings/><con:threadCount>100</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>500</testDelay><randomFactor>0.5</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="8805d1eb-edc9-4943-804b-6e9820610e55" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZMY_GET_MANDATE_CARD_CA" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="6e85000c-60c0-42a0-9f67-23f762df99c2"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value>300004857216</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="fef49ce2-c05e-4c31-9a86-bc46047e2de1"><con:settings/><con:config><script>import groovy.util.*
import groovy.transform.Synchronized
import com.eviware.soapui.support.GroovyUtils

def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

//def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getmeteringdata.txt"
//def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + "ZREDO" ;
//log.info(filepath)
//log.info(output_fp)


def basepath = new GroovyUtils(context).projectPath
log.info("Projdir:" + basepath)
def filepath = basepath + "\\mand_1.txt"
def output_fp = basepath + "\\" + testRunner.testCase.getName() +"_test"+ 'MY_1'
log.info(filepath)
log.info(output_fp)

//testRunner.cancel(" Stopping...")
//return




String ws = "ZWappGetMandateCardCa";

// Open output file
def ot_file = new File(output_fp)
//if (ot_file.exists()){
//	log.info("File: " + output_fp + " already exists. Overwriting..")
//	ot_file.delete()
//}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()


class WriterClass{

	@Synchronized
	void  async_write(String string_in, File outputfile){
		outputfile.append(string_in)
}
	
}

log.info("Test")
writer1 = new WriterClass()


for (int i = 0; i &lt; count; i++)
{
	try
	{
	
	row = rows[i]
	// SPLIT STRING BY DELIMM/TOKENIZE
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName(ws)
	log.info("Time taken: " + testRunner.testCase.testSteps[ws].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps[ws].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps[ws].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps[ws].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps[ws].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps[ws].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	//ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)


	String output_str = System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode
	writer1.async_write(output_str, ot_file)

	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})

	}
	catch (Exception exp)
	{
		log.info("Error during execution")
	}

}
</script></con:config></con:testStep><con:testStep type="request" id="a476ef82-e69e-4645-9ede-d87702933ae4" name="ZWappGetMandateCardCa"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_MANDATE_CARD_CA</con:interface><con:operation>ZWappGetMandateCardCa</con:operation><con:request name="ZWappGetMandateCardCa" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="0b95cd53-c1f2-41f9-ad25-9aa8529abcea"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_get_mandate_card_ca/100/zwapp_get_mandate_card_ca/zwapp_get_mandate_card_ca</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetMandateCardCa>
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>
         <Source>?</Source>
      </urn:ZWappGetMandateCardCa>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="ab930799-37d7-4f68-b1d7-c9a70611f46e" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_MANDATE_CARD_CA/ZWappGetMandateCardCaRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="4c5ddc29-8083-480a-973e-761b7568a61e" name="LoadTest 1"><con:settings/><con:threadCount>100</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>500</testDelay><randomFactor>0.5</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase id="65f24186-b0da-4c65-82e3-fd34f7a32d18" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ZMY_GET_MANDATE_CARD_CA_NIGHT" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="e3901687-3451-4145-91b1-e0dda0fe271d"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ContractAccount</con:name><con:value>300004838210</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy" id="5ba0f38c-1a33-4f45-95c0-bd4f0a163fb3"><con:settings/><con:config><script>import groovy.util.*
import groovy.transform.Synchronized
import com.eviware.soapui.support.GroovyUtils

def response_time
def res
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def startDate = new Date()
def formdate = startDate.format("yyyyMMddHHmmss")

//def filepath = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\getmeteringdata.txt"
//def output_fp = "C:\\Users\\doulgeridis\\Documents\\stresstestnovember\\DataDriven\\" + testRunner.testCase.getName() +"_test" + "ZREDO" ;
//log.info(filepath)
//log.info(output_fp)


def basepath = new GroovyUtils(context).projectPath
log.info("Projdir:" + basepath)
def filepath = basepath + "\\mand_1.txt"
def output_fp = basepath + "\\" + testRunner.testCase.getName() +"_test"+ 'MY_1'
log.info(filepath)
log.info(output_fp)

//testRunner.cancel(" Stopping...")
//return




String ws = "ZWappGetMandateCardCa";

// Open output file
def ot_file = new File(output_fp)
//if (ot_file.exists()){
//	log.info("File: " + output_fp + " already exists. Overwriting..")
//	ot_file.delete()
//}



context.fileReader = new BufferedReader(new FileReader(filepath))

rows = context.fileReader.readLines()
//log.info(rows)
int count = rows.size()


class WriterClass{

	@Synchronized
	void  async_write(String string_in, File outputfile){
		outputfile.append(string_in)
}
	
}

log.info("Test")
writer1 = new WriterClass()


for (int i = 0; i &lt; count; i++)
{
	try
	{
	
	row = rows[i]
	// SPLIT STRING BY DELIMM/TOKENIZE
	log.info("Processing: " + row)
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("ContractAccount",row)


	testRunner.runTestStepByName(ws)
	log.info("Time taken: " + testRunner.testCase.testSteps[ws].testRequest.response.timeTaken)
	log.info("Http resp:" +  testRunner.testCase.testSteps[ws].testRequest.response.getResponseHeaders())
	def monServerTestRespheaders = testRunner.testCase.testSteps[ws].testRequest.response.getResponseHeaders()
	String httpStatusCode = monServerTestRespheaders["#status#"];
	log.info("Http status: " + httpStatusCode) 

	
	time_taken =  testRunner.testCase.testSteps[ws].testRequest.response.timeTaken
	res_size =  testRunner.testCase.testSteps[ws].testRequest.response.contentLength
	log.info("Response size:" + testRunner.testCase.testSteps[ws].testRequest.response.contentLength)
	log.info(time_taken)
	log.info(res_size)
	//ot_file.append(System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode)


	String output_str = System.getProperty("line.separator") + row + "," + time_taken + "," + res_size + ',' + httpStatusCode
	writer1.async_write(output_str, ot_file)

	
	//response_time = testRunner.testCase.testSteps["ZWappGetCaFinancialDataPollaplos"].testRequest.getTimeTaken()
	//log.info(response_time)
	//res = context.expand('${ZWappGetCaFinancialDataPollaplos#Response})

	}
	catch (Exception exp)
	{
		log.info("Error during execution")
	}

}
</script></con:config></con:testStep><con:testStep type="request" id="53b29116-eec1-4409-9944-df453857644e" name="ZWappGetMandateCardCa"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_GET_MANDATE_CARD_CA</con:interface><con:operation>ZWappGetMandateCardCa</con:operation><con:request name="ZWappGetMandateCardCa" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="0b95cd53-c1f2-41f9-ad25-9aa8529abcea"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_get_mandate_card_ca/100/zwapp_get_mandate_card_ca/zwapp_get_mandate_card_ca</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZWappGetMandateCardCa>
         <ContractAccount>${Properties#ContractAccount}</ContractAccount>
         <Source>?</Source>
      </urn:ZWappGetMandateCardCa>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="ab930799-37d7-4f68-b1d7-c9a70611f46e" name="SOAP Response"/><con:credentials><con:username>WEBAPP</con:username><con:password>Web@pp123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_GET_MANDATE_CARD_CA/ZWappGetMandateCardCaRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="3fe5fa21-ec67-41a8-9cfe-6424b56ed6b3" name="LoadTest 1"><con:settings/><con:threadCount>100</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>500</testDelay><randomFactor>0.5</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="7c3e40d7-cd8a-41ef-954f-9435a27dd132" name="TestSuite 9"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="df218e77-fcff-41f9-9fc6-0274bd42353a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 1" searchProperties="true"><con:settings/><con:testStep type="request" id="a4d0216c-5f40-4ab3-9493-f363ffbc2471" name="ZWappBpContractDetailsv2 - DR_0910_BP_CONTRACT_DETAILS_V2_LINAKIS"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ZWAPP_BP_CONTRACT_DETAILSV2</con:interface><con:operation>ZWappBpContractDetailsv2</con:operation><con:request name="ZWappBpContractDetailsv2 - DR_0910_BP_CONTRACT_DETAILS_V2_LINAKIS" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="3a95214c-97bf-4cc3-b209-4b6a69f3ace0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://websvcprd.dei.gr:44398/sap/bc/srt/rfc/sap/zwapp_bp_contract_detailsv2/100/zwapp_bp_contract_detailsv2/zwapp_bp_contract_detailsv2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:soap:functions:mc-style">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ZWappBpContractDetailsv2>\r
         <ContractAccount>300015700830</ContractAccount>\r
         <!--Optional:-->\r
         <Source>?</Source>\r
      </urn:ZWappBpContractDetailsv2>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c3d8a2a1-c0da-4715-83c3-ca200007a8e0" name="SOAP Response"/><con:credentials><con:username>WA_F_V1</con:username><con:password>Ppcw3bf0rms!</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:sap-com:document:sap:soap:functions:mc-style/ZWAPP_BP_CONTRACT_DETAILSV2/ZWappBpContractDetailsv2Request"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest id="9fc5b629-a43e-4f9e-8aa7-c6d8eb47ae40" name="LoadTest 1"><con:settings/><con:threadCount>5</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>